import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "yandex.cloud.compute.v1";
/** A Snapshot resource. For more information, see [Snapshots](/docs/compute/concepts/snapshot). */
export interface Snapshot {
    $type: "yandex.cloud.compute.v1.Snapshot";
    /** ID of the snapshot. */
    id: string;
    /** ID of the folder that the snapshot belongs to. */
    folderId: string;
    createdAt?: Date;
    /** Name of the snapshot. 1-63 characters long. */
    name: string;
    /** Description of the snapshot. 0-256 characters long. */
    description: string;
    /** Resource labels as `key:value` pairs. Maximum of 64 per resource. */
    labels: {
        [key: string]: string;
    };
    /** Size of the snapshot, specified in bytes. */
    storageSize: number;
    /** Size of the disk when the snapshot was created, specified in bytes. */
    diskSize: number;
    /**
     * License IDs that indicate which licenses are attached to this resource.
     * License IDs are used to calculate additional charges for the use of the virtual machine.
     *
     * The correct license ID is generated by the platform. IDs are inherited by new resources created from this resource.
     *
     * If you know the license IDs, specify them when you create the image.
     * For example, if you create a disk image using a third-party utility and load it into Object Storage, the license IDs will be lost.
     * You can specify them in the [yandex.cloud.compute.v1.ImageService.Create] request.
     */
    productIds: string[];
    /** Current status of the snapshot. */
    status: Snapshot_Status;
    /** ID of the source disk used to create this snapshot. */
    sourceDiskId: string;
}
export declare enum Snapshot_Status {
    STATUS_UNSPECIFIED = 0,
    /** CREATING - Snapshot is being created. */
    CREATING = 1,
    /** READY - Snapshot is ready to use. */
    READY = 2,
    /** ERROR - Snapshot encountered a problem and cannot operate. */
    ERROR = 3,
    /** DELETING - Snapshot is being deleted. */
    DELETING = 4,
    UNRECOGNIZED = -1
}
export declare function snapshot_StatusFromJSON(object: any): Snapshot_Status;
export declare function snapshot_StatusToJSON(object: Snapshot_Status): string;
export interface Snapshot_LabelsEntry {
    $type: "yandex.cloud.compute.v1.Snapshot.LabelsEntry";
    key: string;
    value: string;
}
export declare const Snapshot: {
    $type: "yandex.cloud.compute.v1.Snapshot";
    encode(message: Snapshot, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Snapshot;
    fromJSON(object: any): Snapshot;
    toJSON(message: Snapshot): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
        createdAt?: Date | undefined;
        status?: Snapshot_Status | undefined;
        folderId?: string | undefined;
        labels?: {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } | undefined;
        productIds?: string[] | undefined;
        diskSize?: number | undefined;
        storageSize?: number | undefined;
        sourceDiskId?: string | undefined;
    } & {
        description?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
        createdAt?: Date | undefined;
        status?: Snapshot_Status | undefined;
        folderId?: string | undefined;
        labels?: ({
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & Record<Exclude<keyof I["labels"], string | number>, never>) | undefined;
        productIds?: (string[] & string[] & Record<Exclude<keyof I["productIds"], "$type" | keyof string[]>, never>) | undefined;
        diskSize?: number | undefined;
        storageSize?: number | undefined;
        sourceDiskId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "id" | "name" | "createdAt" | "status" | "folderId" | "labels" | "productIds" | "diskSize" | "storageSize" | "sourceDiskId">, never>>(object: I): Snapshot;
};
export declare const Snapshot_LabelsEntry: {
    $type: "yandex.cloud.compute.v1.Snapshot.LabelsEntry";
    encode(message: Snapshot_LabelsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Snapshot_LabelsEntry;
    fromJSON(object: any): Snapshot_LabelsEntry;
    toJSON(message: Snapshot_LabelsEntry): unknown;
    fromPartial<I extends {
        value?: string | undefined;
        key?: string | undefined;
    } & {
        value?: string | undefined;
        key?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "value" | "key">, never>>(object: I): Snapshot_LabelsEntry;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in Exclude<keyof T, "$type">]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P> | "$type">, never>;
export {};
