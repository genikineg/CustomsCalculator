/// <reference types="node" />
import { ChannelCredentials, ChannelOptions, UntypedServiceImplementation, handleUnaryCall, handleServerStreamingCall, Client, ClientUnaryCall, Metadata, CallOptions, ClientReadableStream, ServiceError } from "@grpc/grpc-js";
import _m0 from "protobufjs/minimal";
import { Cluster_Environment, Resources, Host_Type, Access, CloudStorage, Cluster, Host, Shard, ShardGroup } from "../../../../../yandex/cloud/mdb/clickhouse/v1/cluster";
import { MaintenanceWindow } from "../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance";
import { FieldMask } from "../../../../../google/protobuf/field_mask";
import { ClickhouseConfig_ExternalDictionary, ClickhouseConfig } from "../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse";
import { TimeOfDay } from "../../../../../google/type/timeofday";
import { DatabaseSpec } from "../../../../../yandex/cloud/mdb/clickhouse/v1/database";
import { UserSpec } from "../../../../../yandex/cloud/mdb/clickhouse/v1/user";
import { Operation } from "../../../../../yandex/cloud/operation/operation";
import { Backup } from "../../../../../yandex/cloud/mdb/clickhouse/v1/backup";
export declare const protobufPackage = "yandex.cloud.mdb.clickhouse.v1";
export interface GetClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.GetClusterRequest";
    /**
     * ID of the ClickHouse Cluster resource to return.
     * To get the cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
}
export interface ListClustersRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClustersRequest";
    /**
     * ID of the folder to list ClickHouse clusters in.
     * To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
     */
    folderId: string;
    /**
     * The maximum number of results per page to return. If the number of available
     * results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
     * that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
     * returned by the previous list request.
     */
    pageToken: string;
    /**
     * A filter expression that filters resources listed in the response.
     * The expression must specify:
     * 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
     * 2. An `=` operator.
     * 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.
     */
    filter: string;
}
export interface ListClustersResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClustersResponse";
    /** List of ClickHouse Cluster resources. */
    clusters: Cluster[];
    /**
     * This token allows you to get the next page of results for list requests. If the number of results
     * is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
     * for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
     * list request will have its own [next_page_token] to continue paging through the results.
     */
    nextPageToken: string;
}
export interface CreateClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterRequest";
    /** ID of the folder to create the ClickHouse cluster in. */
    folderId: string;
    /** Name of the ClickHouse cluster. The name must be unique within the folder. */
    name: string;
    /** Description of the ClickHouse cluster. */
    description: string;
    /**
     * Custom labels for the ClickHouse cluster as `key:value` pairs. Maximum 64 per resource.
     * For example, "project": "mvp" or "source": "dictionary".
     */
    labels: {
        [key: string]: string;
    };
    /** Deployment environment of the ClickHouse cluster. */
    environment: Cluster_Environment;
    /** Configuration and resources for hosts that should be created for the ClickHouse cluster. */
    configSpec?: ConfigSpec;
    /** Descriptions of databases to be created in the ClickHouse cluster. */
    databaseSpecs: DatabaseSpec[];
    /** Descriptions of database users to be created in the ClickHouse cluster. */
    userSpecs: UserSpec[];
    /** Individual configurations for hosts that should be created for the ClickHouse cluster. */
    hostSpecs: HostSpec[];
    /** ID of the network to create the cluster in. */
    networkId: string;
    /** Name of the first shard in cluster. If not set, defaults to the value 'shard1'. */
    shardName: string;
    /** ID of the service account used for access to Object Storage. */
    serviceAccountId: string;
    /** User security groups */
    securityGroupIds: string[];
    /** Deletion Protection inhibits deletion of the cluster */
    deletionProtection: boolean;
    /** Window of maintenance operations. */
    maintenanceWindow?: MaintenanceWindow;
}
export interface CreateClusterRequest_LabelsEntry {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterRequest.LabelsEntry";
    key: string;
    value: string;
}
export interface CreateClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterMetadata";
    /** ID of the ClickHouse cluster that is being created. */
    clusterId: string;
}
export interface UpdateClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterRequest";
    /**
     * ID of the ClickHouse Cluster resource to update.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /** Field mask that specifies which fields of the ClickHouse Cluster resource should be updated. */
    updateMask?: FieldMask;
    /** New description of the ClickHouse cluster. */
    description: string;
    /**
     * Custom labels for the ClickHouse cluster as `key:value` pairs. Maximum 64 per resource.
     * For example, "project": "mvp" or "source": "dictionary".
     *
     * The new set of labels will completely replace the old ones. To add a label, request the current
     * set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
     */
    labels: {
        [key: string]: string;
    };
    /** New configuration and resources for hosts in the cluster. */
    configSpec?: ConfigSpec;
    /** New name for the cluster. */
    name: string;
    /** ID of the service account used for access to Object Storage. */
    serviceAccountId: string;
    /** New maintenance window settings for the cluster. */
    maintenanceWindow?: MaintenanceWindow;
    /** User security groups */
    securityGroupIds: string[];
    /** Deletion Protection inhibits deletion of the cluster */
    deletionProtection: boolean;
}
export interface UpdateClusterRequest_LabelsEntry {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterRequest.LabelsEntry";
    key: string;
    value: string;
}
export interface UpdateClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterMetadata";
    /** ID of the ClickHouse Cluster resource that is being updated. */
    clusterId: string;
}
export interface DeleteClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterRequest";
    /**
     * ID of the ClickHouse cluster to delete.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
}
export interface DeleteClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterMetadata";
    /** ID of the ClickHouse cluster that is being deleted. */
    clusterId: string;
}
export interface StartClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.StartClusterRequest";
    /** ID of the ClickHouse cluster to start. */
    clusterId: string;
}
export interface StartClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.StartClusterMetadata";
    /** ID of the ClickHouse cluster being started. */
    clusterId: string;
}
export interface StopClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.StopClusterRequest";
    /** ID of the ClickHouse cluster to stop. */
    clusterId: string;
}
export interface StopClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.StopClusterMetadata";
    /** ID of the ClickHouse cluster being stopped. */
    clusterId: string;
}
export interface MoveClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.MoveClusterRequest";
    /** ID of the ClickHouse cluster to move. */
    clusterId: string;
    /** ID of the destination folder. */
    destinationFolderId: string;
}
export interface MoveClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.MoveClusterMetadata";
    /** ID of the ClickHouse cluster being moved. */
    clusterId: string;
    /** ID of the source folder. */
    sourceFolderId: string;
    /** ID of the destination folder. */
    destinationFolderId: string;
}
export interface AddClusterZookeeperRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterZookeeperRequest";
    /** ID of the ClickHouse cluster to modify. */
    clusterId: string;
    /** Resources allocated to Zookeeper hosts. */
    resources?: Resources;
    /** Configuration of ZooKeeper hosts. */
    hostSpecs: HostSpec[];
}
export interface AddClusterZookeeperMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterZookeeperMetadata";
    /** ID of the ClickHouse cluster. */
    clusterId: string;
}
export interface BackupClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.BackupClusterRequest";
    /**
     * ID of the ClickHouse cluster to back up.
     * To get the ClickHouse cluster ID use a [ClusterService.List] request.
     */
    clusterId: string;
}
export interface BackupClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.BackupClusterMetadata";
    /** ID of the ClickHouse cluster that is being backed up. */
    clusterId: string;
}
export interface RestoreClusterRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.RestoreClusterRequest";
    /**
     * ID of the backup to restore from. This backup will be used to create one cluster shard.
     * To get the backup ID, use a [ClusterService.ListBackups] request.
     */
    backupId: string;
    /**
     * Additional IDs of the backups to restore from.
     * Each additional backup is responsible for restoring separate shard.
     * Restored cluster will have len(additional_backup_ids)+1 shards in total.
     * To get the backup ID, use a [ClusterService.ListBackups] request.
     */
    additionalBackupIds: string[];
    /** Name of the new ClickHouse cluster. The name must be unique within the folder. */
    name: string;
    /** Description of the new ClickHouse cluster. */
    description: string;
    /**
     * Custom labels for the ClickHouse cluster as `key:value` pairs. Maximum 64 per resource.
     * For example, "project": "mvp" or "source": "dictionary".
     */
    labels: {
        [key: string]: string;
    };
    /** Deployment environment of the new ClickHouse cluster. */
    environment: Cluster_Environment;
    /** Configuration for the ClickHouse cluster to be created. */
    configSpec?: ConfigSpec;
    /**
     * Configurations for ClickHouse hosts that should be created for
     * the cluster that is being created from the backup.
     */
    hostSpecs: HostSpec[];
    /** ID of the network to create the ClickHouse cluster in. */
    networkId: string;
    /** ID of the folder to create the ClickHouse cluster in. */
    folderId: string;
    /** ID of the service account used for access to Object Storage. */
    serviceAccountId: string;
    /** User security groups */
    securityGroupIds: string[];
}
export interface RestoreClusterRequest_LabelsEntry {
    $type: "yandex.cloud.mdb.clickhouse.v1.RestoreClusterRequest.LabelsEntry";
    key: string;
    value: string;
}
export interface RestoreClusterMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.RestoreClusterMetadata";
    /** ID of the new ClickHouse cluster that is being created from a backup. */
    clusterId: string;
    /** ID of the backup that is being used for creating a cluster. */
    backupId: string;
}
export interface RescheduleMaintenanceRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.RescheduleMaintenanceRequest";
    /** ID of the ClickHouse cluster to reschedule the maintenance operation for. */
    clusterId: string;
    /** The type of reschedule request. */
    rescheduleType: RescheduleMaintenanceRequest_RescheduleType;
    /** The time until which this maintenance operation should be delayed. The value should be ahead of the first time when the maintenance operation has been scheduled for no more than two weeks. The value can also point to the past moment of time if [reschedule_type.IMMEDIATE] reschedule type is chosen. */
    delayedUntil?: Date;
}
export declare enum RescheduleMaintenanceRequest_RescheduleType {
    RESCHEDULE_TYPE_UNSPECIFIED = 0,
    /** IMMEDIATE - Start the maintenance operation immediately. */
    IMMEDIATE = 1,
    /** NEXT_AVAILABLE_WINDOW - Start the maintenance operation within the next available maintenance window. */
    NEXT_AVAILABLE_WINDOW = 2,
    /** SPECIFIC_TIME - Start the maintenance operation at the specific time. */
    SPECIFIC_TIME = 3,
    UNRECOGNIZED = -1
}
export declare function rescheduleMaintenanceRequest_RescheduleTypeFromJSON(object: any): RescheduleMaintenanceRequest_RescheduleType;
export declare function rescheduleMaintenanceRequest_RescheduleTypeToJSON(object: RescheduleMaintenanceRequest_RescheduleType): string;
/** Rescheduled maintenance operation metadata. */
export interface RescheduleMaintenanceMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.RescheduleMaintenanceMetadata";
    /** Required. ID of the ClickHouse cluster. */
    clusterId: string;
    /** Required. The time until which this maintenance operation is to be delayed. */
    delayedUntil?: Date;
}
export interface LogRecord {
    $type: "yandex.cloud.mdb.clickhouse.v1.LogRecord";
    /** Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format. */
    timestamp?: Date;
    /** Contents of the log record. */
    message: {
        [key: string]: string;
    };
}
export interface LogRecord_MessageEntry {
    $type: "yandex.cloud.mdb.clickhouse.v1.LogRecord.MessageEntry";
    key: string;
    value: string;
}
export interface ListClusterLogsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterLogsRequest";
    /**
     * ID of the ClickHouse cluster to request logs for.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * Columns from logs table to request.
     * If no columns are specified, entire log records are returned.
     */
    columnFilter: string[];
    /** Type of the service to request logs about. */
    serviceType: ListClusterLogsRequest_ServiceType;
    /** Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format. */
    fromTime?: Date;
    /** End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format. */
    toTime?: Date;
    /**
     * The maximum number of results per page to return. If the number of available
     * results is larger than [page_size], the service returns a [ListClusterLogsResponse.next_page_token]
     * that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token.  To get the next page of results, set [page_token] to the [ListClusterLogsResponse.next_page_token]
     * returned by the previous list request.
     */
    pageToken: string;
}
export declare enum ListClusterLogsRequest_ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0,
    /** CLICKHOUSE - Logs of ClickHouse activity. */
    CLICKHOUSE = 1,
    UNRECOGNIZED = -1
}
export declare function listClusterLogsRequest_ServiceTypeFromJSON(object: any): ListClusterLogsRequest_ServiceType;
export declare function listClusterLogsRequest_ServiceTypeToJSON(object: ListClusterLogsRequest_ServiceType): string;
export interface ListClusterLogsResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterLogsResponse";
    /** Requested log records. */
    logs: LogRecord[];
    /**
     * This token allows you to get the next page of results for list requests. If the number of results
     * is larger than [ListClusterLogsRequest.page_size], use the [next_page_token] as the value
     * for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
     * Each subsequent list request will have its own [next_page_token] to continue paging through the results.
     * This value is interchangeable with the [StreamLogRecord.next_record_token] from StreamLogs method.
     */
    nextPageToken: string;
}
export interface StreamLogRecord {
    $type: "yandex.cloud.mdb.clickhouse.v1.StreamLogRecord";
    /** One of the requested log records. */
    record?: LogRecord;
    /**
     * This token allows you to continue streaming logs starting from the exact
     * same record. To continue streaming, specify value of [next_record_token[
     * as value for the [StreamClusterLogsRequest.record_token] parameter in the next StreamLogs request.
     * This value is interchangeable with the [ListClusterLogsResponse.next_page_token] from ListLogs method.
     */
    nextRecordToken: string;
}
export interface StreamClusterLogsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.StreamClusterLogsRequest";
    /** Required. ID of the ClickHouse cluster. */
    clusterId: string;
    /** Columns from logs table to get in the response. */
    columnFilter: string[];
    serviceType: StreamClusterLogsRequest_ServiceType;
    /** Start timestamp for the logs request. */
    fromTime?: Date;
    /**
     * End timestamp for the logs request.
     * If this field is not set, all existing logs will be sent and then the new ones as
     * they appear. In essence it has `tail -f` semantics.
     */
    toTime?: Date;
    /**
     * Record token. Set [record_token] to the [StreamLogRecord.next_record_token] returned by a previous StreamLogs
     * request to start streaming from next log record.
     */
    recordToken: string;
    /**
     * A filter expression that filters resources listed in the response.
     * The expression must specify:
     * 1. The field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname], [LogRecord.logs.message.severity] fields.
     * 2. An `=` operator.
     * 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.
     * Examples of a filter:
     * - `message.hostname='node1.db.cloud.yandex.net'`
     * - `message.severity IN ('Error', 'Fatal') AND message.hostname != 'node2.db.cloud.yandex.net'`.
     */
    filter: string;
}
export declare enum StreamClusterLogsRequest_ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0,
    /** CLICKHOUSE - Logs of ClickHouse activity. */
    CLICKHOUSE = 1,
    UNRECOGNIZED = -1
}
export declare function streamClusterLogsRequest_ServiceTypeFromJSON(object: any): StreamClusterLogsRequest_ServiceType;
export declare function streamClusterLogsRequest_ServiceTypeToJSON(object: StreamClusterLogsRequest_ServiceType): string;
export interface ListClusterOperationsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterOperationsRequest";
    /** ID of the ClickHouse Cluster resource to list operations for. */
    clusterId: string;
    /**
     * The maximum number of results per page to return. If the number of available
     * results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
     * that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token.  To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
     * returned by the previous list request.
     */
    pageToken: string;
}
export interface ListClusterOperationsResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterOperationsResponse";
    /** List of Operation resources for the specified ClickHouse cluster. */
    operations: Operation[];
    /**
     * This token allows you to get the next page of results for list requests. If the number of results
     * is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
     * for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
     * Each subsequent list request will have its own [next_page_token] to continue paging through the results.
     */
    nextPageToken: string;
}
export interface ListClusterBackupsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterBackupsRequest";
    /**
     * ID of the ClickHouse cluster.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * The maximum number of results per page to return. If the number of available
     * results is larger than [page_size], the service returns a [ListClusterBackupsResponse.next_page_token]
     * that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token. To get the next page of results, set [page_token] to the
     * [ListClusterBackupsResponse.next_page_token] returned by the previous list request.
     */
    pageToken: string;
}
export interface ListClusterBackupsResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterBackupsResponse";
    /** List of ClickHouse Backup resources. */
    backups: Backup[];
    /**
     * This token allows you to get the next page of results for list requests. If the number of results
     * is larger than [ListClusterBackupsRequest.page_size], use the [next_page_token] as the value
     * for the [ListClusterBackupsRequest.page_token] query parameter in the next list request.
     * Each subsequent list request will have its own [next_page_token] to continue paging through the results.
     */
    nextPageToken: string;
}
export interface ListClusterHostsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterHostsRequest";
    /**
     * ID of the ClickHouse cluster.
     * To get the ClickHouse cluster ID use a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * The maximum number of results per page to return. If the number of available
     * results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
     * that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token.  To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token]
     * returned by the previous list request.
     */
    pageToken: string;
}
export interface ListClusterHostsResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterHostsResponse";
    /** Requested list of hosts for the cluster. */
    hosts: Host[];
    /**
     * This token allows you to get the next page of results for list requests. If the number of results
     * is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value
     * for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
     * Each subsequent list request will have its own [next_page_token] to continue paging through the results.
     */
    nextPageToken: string;
}
export interface AddClusterHostsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterHostsRequest";
    /**
     * ID of the ClickHouse cluster to add hosts to.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /** Configurations for ClickHouse hosts that should be added to the cluster. */
    hostSpecs: HostSpec[];
    /** Whether to copy schema to new ClickHouse hosts from replicas. */
    copySchema?: boolean;
}
export interface AddClusterHostsMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterHostsMetadata";
    /** ID of the ClickHouse cluster to which the hosts are being added. */
    clusterId: string;
    /** Names of hosts that are being added to the cluster. */
    hostNames: string[];
}
export interface UpdateHostSpec {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateHostSpec";
    /**
     * Name of the host to update.
     * To get the ClickHouse host name, use a [ClusterService.ListHosts] request.
     */
    hostName: string;
    /** Field mask that specifies which fields of the ClickHouse host should be updated. */
    updateMask?: FieldMask;
    /** Whether the host should get a public IP address on creation. */
    assignPublicIp?: boolean;
}
export interface UpdateClusterHostsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterHostsRequest";
    /**
     * ID of the ClickHouse cluster to update hosts in.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /** New configurations to apply to hosts. */
    updateHostSpecs: UpdateHostSpec[];
}
export interface UpdateClusterHostsMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterHostsMetadata";
    /** ID of the ClickHouse cluster to modify hosts in. */
    clusterId: string;
    /** Names of hosts that are being modified. */
    hostNames: string[];
}
export interface DeleteClusterHostsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterHostsRequest";
    /**
     * ID of the ClickHouse cluster to remove hosts from.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /** Names of hosts to delete. */
    hostNames: string[];
}
export interface DeleteClusterHostsMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterHostsMetadata";
    /** ID of the ClickHouse cluster to remove hosts from. */
    clusterId: string;
    /** Names of hosts that are being deleted. */
    hostNames: string[];
}
export interface GetClusterShardRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.GetClusterShardRequest";
    /**
     * ID of the cluster that the shard belongs to.
     * To get the cluster ID, use a [ClusterService.List] request.
     * To get the name of the database, use a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * Name of the shard to request information about.
     * To get the name of a shard, use a [ClusterService.ListShards] request.
     */
    shardName: string;
}
export interface ListClusterShardsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardsRequest";
    /**
     * ID of the ClickHouse cluster to list shards in.
     * To get the cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * The maximum number of results per page to return. If the number of available
     * results is larger than [page_size], the service returns a [ListClusterShardsResponse.next_page_token]
     * that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token.  to get the next page of results, set [page_token] to the [ListClusterShardsResponse.next_page_token]
     * returned by the previous list request.
     */
    pageToken: string;
}
export interface ListClusterShardsResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardsResponse";
    /** List of ClickHouse shards. */
    shards: Shard[];
    /**
     * This token allows you to get the next page of results for list requests. If the number of results
     * is larger than [ListClusterShardsRequest.page_size], use the [next_page_token] as the value
     * for the [ListClusterShardsRequest.page_token] parameter in the next list request. Each subsequent
     * list request will have its own [next_page_token] to continue paging through the results.
     */
    nextPageToken: string;
}
export interface AddClusterShardRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterShardRequest";
    /**
     * ID of the ClickHouse cluster to add a shard to.
     * To get the ClickHouse cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /** Name for the new shard. */
    shardName: string;
    /** Configuration of the new shard. */
    configSpec?: ShardConfigSpec;
    /** Configurations for ClickHouse hosts that should be created with the shard. */
    hostSpecs: HostSpec[];
    /** Whether to copy schema to hosts of the shard to be created. The schema is copied from hosts of an existing shard. */
    copySchema?: boolean;
}
export interface AddClusterShardMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterShardMetadata";
    /** ID of the cluster that a shard is being added to. */
    clusterId: string;
    /** Name of the shard being created. */
    shardName: string;
}
export interface UpdateClusterShardRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardRequest";
    /**
     * ID of the ClickHouse cluster the shard belongs to.
     * To get the cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * Name of the shard to be updated.
     * To get the name of a shard, use a [ClusterService.ListShards] request.
     */
    shardName: string;
    /** Field mask that specifies which attributes of the ClickHouse shard should be updated. */
    updateMask?: FieldMask;
    /** New configuration for the specified shard. */
    configSpec?: ShardConfigSpec;
}
export interface UpdateClusterShardMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardMetadata";
    /** ID of the cluster that contains the shard being updated. */
    clusterId: string;
    /** Name of the shard being updated. */
    shardName: string;
}
export interface DeleteClusterShardRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardRequest";
    /**
     * ID of the ClickHouse cluster the shard belongs to.
     * To get the cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * Name of the shard to be deleted.
     * To get the name of a shard, use a [ClusterService.ListShards] request.
     */
    shardName: string;
}
export interface DeleteClusterShardMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardMetadata";
    /** ID of the cluster that contains the shard being deleted. */
    clusterId: string;
    /** Name of the shard being deleted. */
    shardName: string;
}
export interface GetClusterShardGroupRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.GetClusterShardGroupRequest";
    /**
     * ID of the cluster that the shard group belongs to.
     *
     * To get the cluster ID, make a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * Name of the shard group to request information about.
     *
     * To get the name of a shard group, make a [ClusterService.ListShardGroups] request.
     */
    shardGroupName: string;
}
export interface ListClusterShardGroupsRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardGroupsRequest";
    /**
     * ID of the cluster that the shard group belongs to.
     *
     * To get the cluster ID, make a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * The maximum number of results per page to return.
     *
     * If the number of available results is larger than [page_size], the service returns a [ListClusterShardGroupsResponse.next_page_token] that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token.
     *
     * To get the next page of results, set [page_token] to the [ListClusterShardGroupsResponse.next_page_token] returned by the previous list request.
     */
    pageToken: string;
}
export interface ListClusterShardGroupsResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardGroupsResponse";
    /** List of ClickHouse cluster's shard groups. */
    shardGroups: ShardGroup[];
    /**
     * This token allows you to get the next page of results for list requests.
     *
     * If the number of results is larger than [ListClusterShardGroupsRequest.page_size], use the [next_page_token] as the value for the [ListClusterShardGroupsRequest.page_token] parameter in the next list request.
     * Each subsequent list request will have its own [next_page_token] to continue paging through the results.
     */
    nextPageToken: string;
}
export interface CreateClusterShardGroupRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterShardGroupRequest";
    /**
     * ID of the ClickHouse cluster to add a shard group to.
     *
     * To get the cluster ID, make a [ClusterService.List] request.
     */
    clusterId: string;
    /** Name for the new shard group. */
    shardGroupName: string;
    /** Description of the new shard group. 0-256 characters long. */
    description: string;
    /**
     * List of shard names that should be put into the new group.
     *
     * To get the list, make a [ClusterService.ListShardGroups] request.
     */
    shardNames: string[];
}
export interface CreateClusterShardGroupMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterShardGroupMetadata";
    /** ID of the cluster to add a shard group to. */
    clusterId: string;
    /** Name of the shard group that is being added. */
    shardGroupName: string;
}
export interface UpdateClusterShardGroupRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardGroupRequest";
    /**
     * ID of the ClickHouse cluster that contains the shard group to update.
     *
     * To get the cluster ID, make a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * Name of the shard group that should be updated.
     *
     * To get the name, make a [ClusterService.ListShardGroups] request.
     */
    shardGroupName: string;
    updateMask?: FieldMask;
    /** Updated description of the shard group. 0-256 characters long. */
    description: string;
    /** Updated list of shard names that belongs to the shard group. */
    shardNames: string[];
}
export interface UpdateClusterShardGroupMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardGroupMetadata";
    /** ID of the cluster that contains the shard group being updated. */
    clusterId: string;
    /** Name of the shard group that is being updated. */
    shardGroupName: string;
}
export interface DeleteClusterShardGroupRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardGroupRequest";
    /**
     * ID of the ClickHouse cluster that contains the shard group to delete.
     *
     * To get the cluster ID, make a [ClusterService.List] request.
     */
    clusterId: string;
    /**
     * Name of the shard group that should be deleted.
     *
     * To get the name, make a [ClusterService.ListShardGroups] request.
     */
    shardGroupName: string;
}
export interface DeleteClusterShardGroupMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardGroupMetadata";
    /** ID of the cluster that contains the shard group being deleted. */
    clusterId: string;
    /** Name of the shard group that is being deleted. */
    shardGroupName: string;
}
export interface ListClusterExternalDictionariesRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterExternalDictionariesRequest";
    /** ID of the cluster that the external dictionaries belong to. */
    clusterId: string;
    /**
     * The maximum number of results per page to return. If the number of available
     * results is larger than [page_size], the service returns a [ListClusterExternalDictionaryResponse.next_page_token]
     * that can be used to get the next page of results in subsequent list requests.
     */
    pageSize: number;
    /**
     * Page token. To get the next page of results, set [page_token] to the [ListClusterExternalDictionaryResponse.next_page_token]
     * returned by a previous list request.
     */
    pageToken: string;
}
export interface ListClusterExternalDictionariesResponse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterExternalDictionariesResponse";
    /** List of ClickHouse Cluster external dictionaries. */
    externalDictionaries: ClickhouseConfig_ExternalDictionary[];
    /**
     * This token allows you to get the next page of results for list requests. If the number of results
     * is larger than [ListClusterExternalDictionaryRequest.page_size], use the [next_page_token] as the value
     * for the [ListClusterExternalDictionaryRequest.page_token] parameter in the next list request. Each subsequent
     * list request will have its own [next_page_token] to continue paging through the results.
     */
    nextPageToken: string;
}
export interface CreateClusterExternalDictionaryRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterExternalDictionaryRequest";
    /**
     * ID of the ClickHouse cluster to create the external dictionary for.
     * To get the cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /** Configuration of the external dictionary. */
    externalDictionary?: ClickhouseConfig_ExternalDictionary;
}
export interface CreateClusterExternalDictionaryMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterExternalDictionaryMetadata";
    /** ID of the cluster for which an external dictionary is being created. */
    clusterId: string;
}
export interface UpdateClusterExternalDictionaryRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterExternalDictionaryRequest";
    /**
     * ID of the ClickHouse cluster to update the external dictionary for.
     * To get the cluster ID, use a [List] request.
     */
    clusterId: string;
    /** Configuration of the external dictionary. */
    externalDictionary?: ClickhouseConfig_ExternalDictionary;
    /** Field mask that specifies which fields of the External Dictionary should be updated. */
    updateMask?: FieldMask;
}
export interface UpdateClusterExternalDictionaryMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterExternalDictionaryMetadata";
    /** ID of the cluster for which an external dictionary is being updated. */
    clusterId: string;
    /** Name of the external dictionary. */
    externalDictionaryName: string;
}
export interface DeleteClusterExternalDictionaryRequest {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterExternalDictionaryRequest";
    /**
     * ID of the ClickHouse cluster to delete the external dictionary from.
     * To get the cluster ID, use a [ClusterService.List] request.
     */
    clusterId: string;
    /** Name of the external dictionary to delete. */
    externalDictionaryName: string;
}
export interface DeleteClusterExternalDictionaryMetadata {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterExternalDictionaryMetadata";
    /** ID of the cluster where an external dictionary is being deleted. */
    clusterId: string;
}
export interface HostSpec {
    $type: "yandex.cloud.mdb.clickhouse.v1.HostSpec";
    /**
     * ID of the availability zone where the host resides.
     * To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request.
     */
    zoneId: string;
    /** Type of the host to be deployed. */
    type: Host_Type;
    /**
     * ID of the subnet that the host should belong to. This subnet should be a part
     * of the network that the cluster belongs to.
     * The ID of the network is set in the [Cluster.network_id] field.
     */
    subnetId: string;
    /**
     * Whether the host should get a public IP address on creation.
     *
     * After a host has been created, this setting cannot be changed. To remove an assigned public IP, or to assign
     * a public IP to a host without one, recreate the host with [assign_public_ip] set as needed.
     *
     * Possible values:
     * * false - don't assign a public IP to the host.
     * * true - the host should have a public IP address.
     */
    assignPublicIp: boolean;
    /** Name of the shard that the host is assigned to. */
    shardName: string;
}
export interface ConfigSpec {
    $type: "yandex.cloud.mdb.clickhouse.v1.ConfigSpec";
    /** Version of the ClickHouse server software. */
    version: string;
    /** Configuration and resources for a ClickHouse server. */
    clickhouse?: ConfigSpec_Clickhouse;
    /** Configuration and resources for a ZooKeeper server. */
    zookeeper?: ConfigSpec_Zookeeper;
    /** Time to start the daily backup, in the UTC timezone. */
    backupWindowStart?: TimeOfDay;
    /**
     * Access policy for external services.
     *
     * If you want a specific service to access the ClickHouse cluster, then set the necessary values in this policy.
     */
    access?: Access;
    cloudStorage?: CloudStorage;
    /** Whether database management through SQL commands is enabled. */
    sqlDatabaseManagement?: boolean;
    /** Whether user management through SQL commands is enabled. */
    sqlUserManagement?: boolean;
    /** Password for user 'admin' that has SQL user management access. */
    adminPassword: string;
    /** Whether cluster should use embedded Keeper instead of Zookeeper */
    embeddedKeeper?: boolean;
}
export interface ConfigSpec_Clickhouse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ConfigSpec.Clickhouse";
    /** Configuration for a ClickHouse server. */
    config?: ClickhouseConfig;
    /** Resources allocated to ClickHouse hosts. */
    resources?: Resources;
}
export interface ConfigSpec_Zookeeper {
    $type: "yandex.cloud.mdb.clickhouse.v1.ConfigSpec.Zookeeper";
    /**
     * Resources allocated to ZooKeeper hosts. If not set, minimal available resources will be used.
     * All available resource presets can be retrieved with a [ResourcePresetService.List] request.
     */
    resources?: Resources;
}
export interface ShardConfigSpec {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfigSpec";
    /** ClickHouse configuration for a shard. */
    clickhouse?: ShardConfigSpec_Clickhouse;
}
export interface ShardConfigSpec_Clickhouse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfigSpec.Clickhouse";
    /** ClickHouse settings for the shard. */
    config?: ClickhouseConfig;
    /** Computational resources for the shard. */
    resources?: Resources;
    /**
     * Relative weight of the shard considered when writing data to the cluster.
     * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/operations/table_engines/distributed/).
     */
    weight?: number;
}
export declare const GetClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.GetClusterRequest";
    encode(message: GetClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetClusterRequest;
    fromJSON(object: any): GetClusterRequest;
    toJSON(message: GetClusterRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): GetClusterRequest;
};
export declare const ListClustersRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClustersRequest";
    encode(message: ListClustersRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClustersRequest;
    fromJSON(object: any): ListClustersRequest;
    toJSON(message: ListClustersRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        filter?: string | undefined;
        folderId?: string | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        filter?: string | undefined;
        folderId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "filter" | "folderId">, never>>(object: I): ListClustersRequest;
};
export declare const ListClustersResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClustersResponse";
    encode(message: ListClustersResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClustersResponse;
    fromJSON(object: any): ListClustersResponse;
    toJSON(message: ListClustersResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        clusters?: {
            description?: string | undefined;
            id?: string | undefined;
            name?: string | undefined;
            createdAt?: Date | undefined;
            status?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Status | undefined;
            config?: {
                version?: string | undefined;
                zookeeper?: {
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                backupWindowStart?: {
                    seconds?: number | undefined;
                    nanos?: number | undefined;
                    hours?: number | undefined;
                    minutes?: number | undefined;
                } | undefined;
                access?: {
                    dataLens?: boolean | undefined;
                    webSql?: boolean | undefined;
                    metrika?: boolean | undefined;
                    serverless?: boolean | undefined;
                    dataTransfer?: boolean | undefined;
                    yandexQuery?: boolean | undefined;
                } | undefined;
                cloudStorage?: {
                    enabled?: boolean | undefined;
                    moveFactor?: number | undefined;
                    dataCacheEnabled?: boolean | undefined;
                    dataCacheMaxSize?: number | undefined;
                    preferNotToMerge?: boolean | undefined;
                } | undefined;
                sqlDatabaseManagement?: boolean | undefined;
                sqlUserManagement?: boolean | undefined;
                embeddedKeeper?: boolean | undefined;
            } | undefined;
            folderId?: string | undefined;
            labels?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            networkId?: string | undefined;
            securityGroupIds?: string[] | undefined;
            deletionProtection?: boolean | undefined;
            serviceAccountId?: string | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Health | undefined;
            monitoring?: {
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            }[] | undefined;
            maintenanceWindow?: {
                anytime?: {} | undefined;
                weeklyMaintenanceWindow?: {
                    hour?: number | undefined;
                    day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
                } | undefined;
            } | undefined;
            environment?: Cluster_Environment | undefined;
            plannedOperation?: {
                info?: string | undefined;
                delayedUntil?: Date | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        clusters?: ({
            description?: string | undefined;
            id?: string | undefined;
            name?: string | undefined;
            createdAt?: Date | undefined;
            status?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Status | undefined;
            config?: {
                version?: string | undefined;
                zookeeper?: {
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                backupWindowStart?: {
                    seconds?: number | undefined;
                    nanos?: number | undefined;
                    hours?: number | undefined;
                    minutes?: number | undefined;
                } | undefined;
                access?: {
                    dataLens?: boolean | undefined;
                    webSql?: boolean | undefined;
                    metrika?: boolean | undefined;
                    serverless?: boolean | undefined;
                    dataTransfer?: boolean | undefined;
                    yandexQuery?: boolean | undefined;
                } | undefined;
                cloudStorage?: {
                    enabled?: boolean | undefined;
                    moveFactor?: number | undefined;
                    dataCacheEnabled?: boolean | undefined;
                    dataCacheMaxSize?: number | undefined;
                    preferNotToMerge?: boolean | undefined;
                } | undefined;
                sqlDatabaseManagement?: boolean | undefined;
                sqlUserManagement?: boolean | undefined;
                embeddedKeeper?: boolean | undefined;
            } | undefined;
            folderId?: string | undefined;
            labels?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            networkId?: string | undefined;
            securityGroupIds?: string[] | undefined;
            deletionProtection?: boolean | undefined;
            serviceAccountId?: string | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Health | undefined;
            monitoring?: {
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            }[] | undefined;
            maintenanceWindow?: {
                anytime?: {} | undefined;
                weeklyMaintenanceWindow?: {
                    hour?: number | undefined;
                    day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
                } | undefined;
            } | undefined;
            environment?: Cluster_Environment | undefined;
            plannedOperation?: {
                info?: string | undefined;
                delayedUntil?: Date | undefined;
            } | undefined;
        }[] & ({
            description?: string | undefined;
            id?: string | undefined;
            name?: string | undefined;
            createdAt?: Date | undefined;
            status?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Status | undefined;
            config?: {
                version?: string | undefined;
                zookeeper?: {
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                backupWindowStart?: {
                    seconds?: number | undefined;
                    nanos?: number | undefined;
                    hours?: number | undefined;
                    minutes?: number | undefined;
                } | undefined;
                access?: {
                    dataLens?: boolean | undefined;
                    webSql?: boolean | undefined;
                    metrika?: boolean | undefined;
                    serverless?: boolean | undefined;
                    dataTransfer?: boolean | undefined;
                    yandexQuery?: boolean | undefined;
                } | undefined;
                cloudStorage?: {
                    enabled?: boolean | undefined;
                    moveFactor?: number | undefined;
                    dataCacheEnabled?: boolean | undefined;
                    dataCacheMaxSize?: number | undefined;
                    preferNotToMerge?: boolean | undefined;
                } | undefined;
                sqlDatabaseManagement?: boolean | undefined;
                sqlUserManagement?: boolean | undefined;
                embeddedKeeper?: boolean | undefined;
            } | undefined;
            folderId?: string | undefined;
            labels?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            networkId?: string | undefined;
            securityGroupIds?: string[] | undefined;
            deletionProtection?: boolean | undefined;
            serviceAccountId?: string | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Health | undefined;
            monitoring?: {
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            }[] | undefined;
            maintenanceWindow?: {
                anytime?: {} | undefined;
                weeklyMaintenanceWindow?: {
                    hour?: number | undefined;
                    day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
                } | undefined;
            } | undefined;
            environment?: Cluster_Environment | undefined;
            plannedOperation?: {
                info?: string | undefined;
                delayedUntil?: Date | undefined;
            } | undefined;
        } & {
            description?: string | undefined;
            id?: string | undefined;
            name?: string | undefined;
            createdAt?: Date | undefined;
            status?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Status | undefined;
            config?: ({
                version?: string | undefined;
                zookeeper?: {
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                backupWindowStart?: {
                    seconds?: number | undefined;
                    nanos?: number | undefined;
                    hours?: number | undefined;
                    minutes?: number | undefined;
                } | undefined;
                access?: {
                    dataLens?: boolean | undefined;
                    webSql?: boolean | undefined;
                    metrika?: boolean | undefined;
                    serverless?: boolean | undefined;
                    dataTransfer?: boolean | undefined;
                    yandexQuery?: boolean | undefined;
                } | undefined;
                cloudStorage?: {
                    enabled?: boolean | undefined;
                    moveFactor?: number | undefined;
                    dataCacheEnabled?: boolean | undefined;
                    dataCacheMaxSize?: number | undefined;
                    preferNotToMerge?: boolean | undefined;
                } | undefined;
                sqlDatabaseManagement?: boolean | undefined;
                sqlUserManagement?: boolean | undefined;
                embeddedKeeper?: boolean | undefined;
            } & {
                version?: string | undefined;
                zookeeper?: ({
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } & {
                    resources?: ({
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } & {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } & Record<Exclude<keyof I["clusters"][number]["config"]["zookeeper"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
                } & Record<Exclude<keyof I["clusters"][number]["config"]["zookeeper"], "$type" | "resources">, never>) | undefined;
                clickhouse?: ({
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } & {
                    config?: ({
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } & {
                        effectiveConfig?: ({
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & {
                            compression?: ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] & ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[]>, never>) | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: ({
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                            dictionaries?: ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                mysqlSource?: ({
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] & ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[]>, never>) | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                                clickhouseSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                                structure?: ({
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } & {
                                    id?: ({
                                        name?: string | undefined;
                                    } & {
                                        name?: string | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                    key?: ({
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } & {
                                        attributes?: ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] & ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                    rangeMin?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                    rangeMax?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                                layout?: ({
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: ({
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                                httpSource?: ({
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                                mongodbSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                                postgresqlSource?: ({
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & {
                                    port?: number | undefined;
                                    hosts?: (string[] & string[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            graphiteRollup?: ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] & ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            } & {
                                name?: string | undefined;
                                patterns?: ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] & ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                } & {
                                    function?: string | undefined;
                                    retention?: ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] & ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[]>, never>) | undefined;
                                    regexp?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[]>, never>) | undefined;
                            kafka?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            kafkaTopics?: ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                settings?: ({
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            rabbitmq?: ({
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                        userConfig?: ({
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & {
                            compression?: ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] & ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["compression"], "$type" | keyof {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[]>, never>) | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: ({
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                            dictionaries?: ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                mysqlSource?: ({
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] & ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[]>, never>) | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                                clickhouseSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                                structure?: ({
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } & {
                                    id?: ({
                                        name?: string | undefined;
                                    } & {
                                        name?: string | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                    key?: ({
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } & {
                                        attributes?: ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] & ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                    rangeMin?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                    rangeMax?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                                layout?: ({
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: ({
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                                httpSource?: ({
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                                mongodbSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                                postgresqlSource?: ({
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & {
                                    port?: number | undefined;
                                    hosts?: (string[] & string[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            graphiteRollup?: ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] & ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            } & {
                                name?: string | undefined;
                                patterns?: ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] & ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                } & {
                                    function?: string | undefined;
                                    retention?: ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] & ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[]>, never>) | undefined;
                                    regexp?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[]>, never>) | undefined;
                            kafka?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            kafkaTopics?: ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                settings?: ({
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            rabbitmq?: ({
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                        defaultConfig?: ({
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & {
                            compression?: ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] & ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["compression"], "$type" | keyof {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[]>, never>) | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: ({
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                            dictionaries?: ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                mysqlSource?: ({
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] & ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[]>, never>) | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                                clickhouseSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                                structure?: ({
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } & {
                                    id?: ({
                                        name?: string | undefined;
                                    } & {
                                        name?: string | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                    key?: ({
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } & {
                                        attributes?: ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] & ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                    rangeMin?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                    rangeMax?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                                layout?: ({
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: ({
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                                httpSource?: ({
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                                mongodbSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                                postgresqlSource?: ({
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & {
                                    port?: number | undefined;
                                    hosts?: (string[] & string[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            graphiteRollup?: ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] & ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            } & {
                                name?: string | undefined;
                                patterns?: ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] & ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                } & {
                                    function?: string | undefined;
                                    retention?: ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] & ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[]>, never>) | undefined;
                                    regexp?: string | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[]>, never>) | undefined;
                            kafka?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            kafkaTopics?: ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                settings?: ({
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            rabbitmq?: ({
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
                    resources?: ({
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } & {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
                } & Record<Exclude<keyof I["clusters"][number]["config"]["clickhouse"], "$type" | "config" | "resources">, never>) | undefined;
                backupWindowStart?: ({
                    seconds?: number | undefined;
                    nanos?: number | undefined;
                    hours?: number | undefined;
                    minutes?: number | undefined;
                } & {
                    seconds?: number | undefined;
                    nanos?: number | undefined;
                    hours?: number | undefined;
                    minutes?: number | undefined;
                } & Record<Exclude<keyof I["clusters"][number]["config"]["backupWindowStart"], "$type" | "seconds" | "nanos" | "hours" | "minutes">, never>) | undefined;
                access?: ({
                    dataLens?: boolean | undefined;
                    webSql?: boolean | undefined;
                    metrika?: boolean | undefined;
                    serverless?: boolean | undefined;
                    dataTransfer?: boolean | undefined;
                    yandexQuery?: boolean | undefined;
                } & {
                    dataLens?: boolean | undefined;
                    webSql?: boolean | undefined;
                    metrika?: boolean | undefined;
                    serverless?: boolean | undefined;
                    dataTransfer?: boolean | undefined;
                    yandexQuery?: boolean | undefined;
                } & Record<Exclude<keyof I["clusters"][number]["config"]["access"], "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>) | undefined;
                cloudStorage?: ({
                    enabled?: boolean | undefined;
                    moveFactor?: number | undefined;
                    dataCacheEnabled?: boolean | undefined;
                    dataCacheMaxSize?: number | undefined;
                    preferNotToMerge?: boolean | undefined;
                } & {
                    enabled?: boolean | undefined;
                    moveFactor?: number | undefined;
                    dataCacheEnabled?: boolean | undefined;
                    dataCacheMaxSize?: number | undefined;
                    preferNotToMerge?: boolean | undefined;
                } & Record<Exclude<keyof I["clusters"][number]["config"]["cloudStorage"], "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>) | undefined;
                sqlDatabaseManagement?: boolean | undefined;
                sqlUserManagement?: boolean | undefined;
                embeddedKeeper?: boolean | undefined;
            } & Record<Exclude<keyof I["clusters"][number]["config"], "$type" | "version" | "zookeeper" | "clickhouse" | "backupWindowStart" | "access" | "cloudStorage" | "sqlDatabaseManagement" | "sqlUserManagement" | "embeddedKeeper">, never>) | undefined;
            folderId?: string | undefined;
            labels?: ({
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } & {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } & Record<Exclude<keyof I["clusters"][number]["labels"], string | number>, never>) | undefined;
            networkId?: string | undefined;
            securityGroupIds?: (string[] & string[] & Record<Exclude<keyof I["clusters"][number]["securityGroupIds"], "$type" | keyof string[]>, never>) | undefined;
            deletionProtection?: boolean | undefined;
            serviceAccountId?: string | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Health | undefined;
            monitoring?: ({
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            }[] & ({
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            } & {
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            } & Record<Exclude<keyof I["clusters"][number]["monitoring"][number], "$type" | "link" | "description" | "name">, never>)[] & Record<Exclude<keyof I["clusters"][number]["monitoring"], "$type" | keyof {
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            }[]>, never>) | undefined;
            maintenanceWindow?: ({
                anytime?: {} | undefined;
                weeklyMaintenanceWindow?: {
                    hour?: number | undefined;
                    day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
                } | undefined;
            } & {
                anytime?: ({} & {} & Record<Exclude<keyof I["clusters"][number]["maintenanceWindow"]["anytime"], "$type">, never>) | undefined;
                weeklyMaintenanceWindow?: ({
                    hour?: number | undefined;
                    day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
                } & {
                    hour?: number | undefined;
                    day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
                } & Record<Exclude<keyof I["clusters"][number]["maintenanceWindow"]["weeklyMaintenanceWindow"], "$type" | "hour" | "day">, never>) | undefined;
            } & Record<Exclude<keyof I["clusters"][number]["maintenanceWindow"], "$type" | "anytime" | "weeklyMaintenanceWindow">, never>) | undefined;
            environment?: Cluster_Environment | undefined;
            plannedOperation?: ({
                info?: string | undefined;
                delayedUntil?: Date | undefined;
            } & {
                info?: string | undefined;
                delayedUntil?: Date | undefined;
            } & Record<Exclude<keyof I["clusters"][number]["plannedOperation"], "$type" | "info" | "delayedUntil">, never>) | undefined;
        } & Record<Exclude<keyof I["clusters"][number], "$type" | "description" | "id" | "name" | "createdAt" | "status" | "config" | "folderId" | "labels" | "networkId" | "securityGroupIds" | "deletionProtection" | "serviceAccountId" | "health" | "monitoring" | "maintenanceWindow" | "environment" | "plannedOperation">, never>)[] & Record<Exclude<keyof I["clusters"], "$type" | keyof {
            description?: string | undefined;
            id?: string | undefined;
            name?: string | undefined;
            createdAt?: Date | undefined;
            status?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Status | undefined;
            config?: {
                version?: string | undefined;
                zookeeper?: {
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                } | undefined;
                backupWindowStart?: {
                    seconds?: number | undefined;
                    nanos?: number | undefined;
                    hours?: number | undefined;
                    minutes?: number | undefined;
                } | undefined;
                access?: {
                    dataLens?: boolean | undefined;
                    webSql?: boolean | undefined;
                    metrika?: boolean | undefined;
                    serverless?: boolean | undefined;
                    dataTransfer?: boolean | undefined;
                    yandexQuery?: boolean | undefined;
                } | undefined;
                cloudStorage?: {
                    enabled?: boolean | undefined;
                    moveFactor?: number | undefined;
                    dataCacheEnabled?: boolean | undefined;
                    dataCacheMaxSize?: number | undefined;
                    preferNotToMerge?: boolean | undefined;
                } | undefined;
                sqlDatabaseManagement?: boolean | undefined;
                sqlUserManagement?: boolean | undefined;
                embeddedKeeper?: boolean | undefined;
            } | undefined;
            folderId?: string | undefined;
            labels?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            networkId?: string | undefined;
            securityGroupIds?: string[] | undefined;
            deletionProtection?: boolean | undefined;
            serviceAccountId?: string | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Cluster_Health | undefined;
            monitoring?: {
                link?: string | undefined;
                description?: string | undefined;
                name?: string | undefined;
            }[] | undefined;
            maintenanceWindow?: {
                anytime?: {} | undefined;
                weeklyMaintenanceWindow?: {
                    hour?: number | undefined;
                    day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
                } | undefined;
            } | undefined;
            environment?: Cluster_Environment | undefined;
            plannedOperation?: {
                info?: string | undefined;
                delayedUntil?: Date | undefined;
            } | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "clusters">, never>>(object: I): ListClustersResponse;
};
export declare const CreateClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterRequest";
    encode(message: CreateClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateClusterRequest;
    fromJSON(object: any): CreateClusterRequest;
    toJSON(message: CreateClusterRequest): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        name?: string | undefined;
        folderId?: string | undefined;
        labels?: {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } | undefined;
        networkId?: string | undefined;
        securityGroupIds?: string[] | undefined;
        deletionProtection?: boolean | undefined;
        serviceAccountId?: string | undefined;
        configSpec?: {
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } | undefined;
        shardName?: string | undefined;
        maintenanceWindow?: {
            anytime?: {} | undefined;
            weeklyMaintenanceWindow?: {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } | undefined;
        } | undefined;
        environment?: Cluster_Environment | undefined;
        databaseSpecs?: {
            name?: string | undefined;
        }[] | undefined;
        userSpecs?: {
            name?: string | undefined;
            settings?: {
                priority?: number | undefined;
                readonly?: number | undefined;
                allowDdl?: boolean | undefined;
                allowIntrospectionFunctions?: boolean | undefined;
                connectTimeout?: number | undefined;
                connectTimeoutWithFailover?: number | undefined;
                receiveTimeout?: number | undefined;
                sendTimeout?: number | undefined;
                timeoutBeforeCheckingExecutionSpeed?: number | undefined;
                insertQuorum?: number | undefined;
                insertQuorumTimeout?: number | undefined;
                insertQuorumParallel?: boolean | undefined;
                insertNullAsDefault?: boolean | undefined;
                selectSequentialConsistency?: boolean | undefined;
                deduplicateBlocksInDependentMaterializedViews?: boolean | undefined;
                replicationAlterPartitionsSync?: number | undefined;
                maxReplicaDelayForDistributedQueries?: number | undefined;
                fallbackToStaleReplicasForDistributedQueries?: boolean | undefined;
                distributedProductMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DistributedProductMode | undefined;
                distributedAggregationMemoryEfficient?: boolean | undefined;
                distributedDdlTaskTimeout?: number | undefined;
                skipUnavailableShards?: boolean | undefined;
                compileExpressions?: boolean | undefined;
                minCountToCompileExpression?: number | undefined;
                maxBlockSize?: number | undefined;
                minInsertBlockSizeRows?: number | undefined;
                minInsertBlockSizeBytes?: number | undefined;
                maxInsertBlockSize?: number | undefined;
                minBytesToUseDirectIo?: number | undefined;
                useUncompressedCache?: boolean | undefined;
                mergeTreeMaxRowsToUseCache?: number | undefined;
                mergeTreeMaxBytesToUseCache?: number | undefined;
                mergeTreeMinRowsForConcurrentRead?: number | undefined;
                mergeTreeMinBytesForConcurrentRead?: number | undefined;
                maxBytesBeforeExternalGroupBy?: number | undefined;
                maxBytesBeforeExternalSort?: number | undefined;
                groupByTwoLevelThreshold?: number | undefined;
                groupByTwoLevelThresholdBytes?: number | undefined;
                maxThreads?: number | undefined;
                maxMemoryUsage?: number | undefined;
                maxMemoryUsageForUser?: number | undefined;
                maxNetworkBandwidth?: number | undefined;
                maxNetworkBandwidthForUser?: number | undefined;
                maxPartitionsPerInsertBlock?: number | undefined;
                maxConcurrentQueriesForUser?: number | undefined;
                forceIndexByDate?: boolean | undefined;
                forcePrimaryKey?: boolean | undefined;
                maxRowsToRead?: number | undefined;
                maxBytesToRead?: number | undefined;
                readOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToGroupBy?: number | undefined;
                groupByOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_GroupByOverflowMode | undefined;
                maxRowsToSort?: number | undefined;
                maxBytesToSort?: number | undefined;
                sortOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxResultRows?: number | undefined;
                maxResultBytes?: number | undefined;
                resultOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInDistinct?: number | undefined;
                maxBytesInDistinct?: number | undefined;
                distinctOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToTransfer?: number | undefined;
                maxBytesToTransfer?: number | undefined;
                transferOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxExecutionTime?: number | undefined;
                timeoutOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInSet?: number | undefined;
                maxBytesInSet?: number | undefined;
                setOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInJoin?: number | undefined;
                maxBytesInJoin?: number | undefined;
                joinOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                joinAlgorithm?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[] | undefined;
                anyJoinDistinctRightTableKeys?: boolean | undefined;
                maxColumnsToRead?: number | undefined;
                maxTemporaryColumns?: number | undefined;
                maxTemporaryNonConstColumns?: number | undefined;
                maxQuerySize?: number | undefined;
                maxAstDepth?: number | undefined;
                maxAstElements?: number | undefined;
                maxExpandedAstElements?: number | undefined;
                minExecutionSpeed?: number | undefined;
                minExecutionSpeedBytes?: number | undefined;
                countDistinctImplementation?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_CountDistinctImplementation | undefined;
                inputFormatValuesInterpretExpressions?: boolean | undefined;
                inputFormatDefaultsForOmittedFields?: boolean | undefined;
                inputFormatNullAsDefault?: boolean | undefined;
                dateTimeInputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeInputFormat | undefined;
                inputFormatWithNamesUseHeader?: boolean | undefined;
                outputFormatJsonQuote64bitIntegers?: boolean | undefined;
                outputFormatJsonQuoteDenormals?: boolean | undefined;
                dateTimeOutputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeOutputFormat | undefined;
                lowCardinalityAllowInNativeFormat?: boolean | undefined;
                allowSuspiciousLowCardinalityTypes?: boolean | undefined;
                emptyResultForAggregationByEmptySet?: boolean | undefined;
                httpConnectionTimeout?: number | undefined;
                httpReceiveTimeout?: number | undefined;
                httpSendTimeout?: number | undefined;
                enableHttpCompression?: boolean | undefined;
                sendProgressInHttpHeaders?: boolean | undefined;
                httpHeadersProgressInterval?: number | undefined;
                addHttpCorsHeader?: boolean | undefined;
                cancelHttpReadonlyQueriesOnClientClose?: boolean | undefined;
                maxHttpGetRedirects?: number | undefined;
                joinedSubqueryRequiresAlias?: boolean | undefined;
                joinUseNulls?: boolean | undefined;
                transformNullIn?: boolean | undefined;
                quotaMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_QuotaMode | undefined;
                flattenNested?: boolean | undefined;
                formatRegexp?: string | undefined;
                formatRegexpEscapingRule?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_FormatRegexpEscapingRule | undefined;
                formatRegexpSkipUnmatched?: boolean | undefined;
                asyncInsert?: boolean | undefined;
                asyncInsertThreads?: number | undefined;
                waitForAsyncInsert?: boolean | undefined;
                waitForAsyncInsertTimeout?: number | undefined;
                asyncInsertMaxDataSize?: number | undefined;
                asyncInsertBusyTimeout?: number | undefined;
                asyncInsertStaleTimeout?: number | undefined;
                memoryProfilerStep?: number | undefined;
                memoryProfilerSampleProbability?: number | undefined;
                maxFinalThreads?: number | undefined;
                inputFormatParallelParsing?: boolean | undefined;
                inputFormatImportNestedJson?: boolean | undefined;
                localFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_LocalFilesystemReadMethod | undefined;
                maxReadBufferSize?: number | undefined;
                insertKeeperMaxRetries?: number | undefined;
                maxTemporaryDataOnDiskSizeForUser?: number | undefined;
                maxTemporaryDataOnDiskSizeForQuery?: number | undefined;
                maxParserDepth?: number | undefined;
                remoteFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_RemoteFilesystemReadMethod | undefined;
                memoryOvercommitRatioDenominator?: number | undefined;
                memoryOvercommitRatioDenominatorForUser?: number | undefined;
                memoryUsageOvercommitMaxWaitMicroseconds?: number | undefined;
                compile?: boolean | undefined;
                minCountToCompile?: number | undefined;
            } | undefined;
            permissions?: {
                databaseName?: string | undefined;
            }[] | undefined;
            password?: string | undefined;
            quotas?: {
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            }[] | undefined;
        }[] | undefined;
        hostSpecs?: {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] | undefined;
    } & {
        description?: string | undefined;
        name?: string | undefined;
        folderId?: string | undefined;
        labels?: ({
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & Record<Exclude<keyof I["labels"], string | number>, never>) | undefined;
        networkId?: string | undefined;
        securityGroupIds?: (string[] & string[] & Record<Exclude<keyof I["securityGroupIds"], "$type" | keyof string[]>, never>) | undefined;
        deletionProtection?: boolean | undefined;
        serviceAccountId?: string | undefined;
        configSpec?: ({
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } & {
            version?: string | undefined;
            zookeeper?: ({
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["zookeeper"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["configSpec"]["zookeeper"], "$type" | "resources">, never>) | undefined;
            clickhouse?: ({
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                config?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["configSpec"]["clickhouse"], "$type" | "config" | "resources">, never>) | undefined;
            backupWindowStart?: ({
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & Record<Exclude<keyof I["configSpec"]["backupWindowStart"], "$type" | "seconds" | "nanos" | "hours" | "minutes">, never>) | undefined;
            access?: ({
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & Record<Exclude<keyof I["configSpec"]["access"], "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>) | undefined;
            cloudStorage?: ({
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & Record<Exclude<keyof I["configSpec"]["cloudStorage"], "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>) | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } & Record<Exclude<keyof I["configSpec"], "$type" | "version" | "zookeeper" | "clickhouse" | "backupWindowStart" | "access" | "cloudStorage" | "sqlDatabaseManagement" | "sqlUserManagement" | "embeddedKeeper" | "adminPassword">, never>) | undefined;
        shardName?: string | undefined;
        maintenanceWindow?: ({
            anytime?: {} | undefined;
            weeklyMaintenanceWindow?: {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } | undefined;
        } & {
            anytime?: ({} & {} & Record<Exclude<keyof I["maintenanceWindow"]["anytime"], "$type">, never>) | undefined;
            weeklyMaintenanceWindow?: ({
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } & {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } & Record<Exclude<keyof I["maintenanceWindow"]["weeklyMaintenanceWindow"], "$type" | "hour" | "day">, never>) | undefined;
        } & Record<Exclude<keyof I["maintenanceWindow"], "$type" | "anytime" | "weeklyMaintenanceWindow">, never>) | undefined;
        environment?: Cluster_Environment | undefined;
        databaseSpecs?: ({
            name?: string | undefined;
        }[] & ({
            name?: string | undefined;
        } & {
            name?: string | undefined;
        } & Record<Exclude<keyof I["databaseSpecs"][number], "$type" | "name">, never>)[] & Record<Exclude<keyof I["databaseSpecs"], "$type" | keyof {
            name?: string | undefined;
        }[]>, never>) | undefined;
        userSpecs?: ({
            name?: string | undefined;
            settings?: {
                priority?: number | undefined;
                readonly?: number | undefined;
                allowDdl?: boolean | undefined;
                allowIntrospectionFunctions?: boolean | undefined;
                connectTimeout?: number | undefined;
                connectTimeoutWithFailover?: number | undefined;
                receiveTimeout?: number | undefined;
                sendTimeout?: number | undefined;
                timeoutBeforeCheckingExecutionSpeed?: number | undefined;
                insertQuorum?: number | undefined;
                insertQuorumTimeout?: number | undefined;
                insertQuorumParallel?: boolean | undefined;
                insertNullAsDefault?: boolean | undefined;
                selectSequentialConsistency?: boolean | undefined;
                deduplicateBlocksInDependentMaterializedViews?: boolean | undefined;
                replicationAlterPartitionsSync?: number | undefined;
                maxReplicaDelayForDistributedQueries?: number | undefined;
                fallbackToStaleReplicasForDistributedQueries?: boolean | undefined;
                distributedProductMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DistributedProductMode | undefined;
                distributedAggregationMemoryEfficient?: boolean | undefined;
                distributedDdlTaskTimeout?: number | undefined;
                skipUnavailableShards?: boolean | undefined;
                compileExpressions?: boolean | undefined;
                minCountToCompileExpression?: number | undefined;
                maxBlockSize?: number | undefined;
                minInsertBlockSizeRows?: number | undefined;
                minInsertBlockSizeBytes?: number | undefined;
                maxInsertBlockSize?: number | undefined;
                minBytesToUseDirectIo?: number | undefined;
                useUncompressedCache?: boolean | undefined;
                mergeTreeMaxRowsToUseCache?: number | undefined;
                mergeTreeMaxBytesToUseCache?: number | undefined;
                mergeTreeMinRowsForConcurrentRead?: number | undefined;
                mergeTreeMinBytesForConcurrentRead?: number | undefined;
                maxBytesBeforeExternalGroupBy?: number | undefined;
                maxBytesBeforeExternalSort?: number | undefined;
                groupByTwoLevelThreshold?: number | undefined;
                groupByTwoLevelThresholdBytes?: number | undefined;
                maxThreads?: number | undefined;
                maxMemoryUsage?: number | undefined;
                maxMemoryUsageForUser?: number | undefined;
                maxNetworkBandwidth?: number | undefined;
                maxNetworkBandwidthForUser?: number | undefined;
                maxPartitionsPerInsertBlock?: number | undefined;
                maxConcurrentQueriesForUser?: number | undefined;
                forceIndexByDate?: boolean | undefined;
                forcePrimaryKey?: boolean | undefined;
                maxRowsToRead?: number | undefined;
                maxBytesToRead?: number | undefined;
                readOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToGroupBy?: number | undefined;
                groupByOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_GroupByOverflowMode | undefined;
                maxRowsToSort?: number | undefined;
                maxBytesToSort?: number | undefined;
                sortOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxResultRows?: number | undefined;
                maxResultBytes?: number | undefined;
                resultOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInDistinct?: number | undefined;
                maxBytesInDistinct?: number | undefined;
                distinctOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToTransfer?: number | undefined;
                maxBytesToTransfer?: number | undefined;
                transferOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxExecutionTime?: number | undefined;
                timeoutOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInSet?: number | undefined;
                maxBytesInSet?: number | undefined;
                setOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInJoin?: number | undefined;
                maxBytesInJoin?: number | undefined;
                joinOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                joinAlgorithm?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[] | undefined;
                anyJoinDistinctRightTableKeys?: boolean | undefined;
                maxColumnsToRead?: number | undefined;
                maxTemporaryColumns?: number | undefined;
                maxTemporaryNonConstColumns?: number | undefined;
                maxQuerySize?: number | undefined;
                maxAstDepth?: number | undefined;
                maxAstElements?: number | undefined;
                maxExpandedAstElements?: number | undefined;
                minExecutionSpeed?: number | undefined;
                minExecutionSpeedBytes?: number | undefined;
                countDistinctImplementation?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_CountDistinctImplementation | undefined;
                inputFormatValuesInterpretExpressions?: boolean | undefined;
                inputFormatDefaultsForOmittedFields?: boolean | undefined;
                inputFormatNullAsDefault?: boolean | undefined;
                dateTimeInputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeInputFormat | undefined;
                inputFormatWithNamesUseHeader?: boolean | undefined;
                outputFormatJsonQuote64bitIntegers?: boolean | undefined;
                outputFormatJsonQuoteDenormals?: boolean | undefined;
                dateTimeOutputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeOutputFormat | undefined;
                lowCardinalityAllowInNativeFormat?: boolean | undefined;
                allowSuspiciousLowCardinalityTypes?: boolean | undefined;
                emptyResultForAggregationByEmptySet?: boolean | undefined;
                httpConnectionTimeout?: number | undefined;
                httpReceiveTimeout?: number | undefined;
                httpSendTimeout?: number | undefined;
                enableHttpCompression?: boolean | undefined;
                sendProgressInHttpHeaders?: boolean | undefined;
                httpHeadersProgressInterval?: number | undefined;
                addHttpCorsHeader?: boolean | undefined;
                cancelHttpReadonlyQueriesOnClientClose?: boolean | undefined;
                maxHttpGetRedirects?: number | undefined;
                joinedSubqueryRequiresAlias?: boolean | undefined;
                joinUseNulls?: boolean | undefined;
                transformNullIn?: boolean | undefined;
                quotaMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_QuotaMode | undefined;
                flattenNested?: boolean | undefined;
                formatRegexp?: string | undefined;
                formatRegexpEscapingRule?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_FormatRegexpEscapingRule | undefined;
                formatRegexpSkipUnmatched?: boolean | undefined;
                asyncInsert?: boolean | undefined;
                asyncInsertThreads?: number | undefined;
                waitForAsyncInsert?: boolean | undefined;
                waitForAsyncInsertTimeout?: number | undefined;
                asyncInsertMaxDataSize?: number | undefined;
                asyncInsertBusyTimeout?: number | undefined;
                asyncInsertStaleTimeout?: number | undefined;
                memoryProfilerStep?: number | undefined;
                memoryProfilerSampleProbability?: number | undefined;
                maxFinalThreads?: number | undefined;
                inputFormatParallelParsing?: boolean | undefined;
                inputFormatImportNestedJson?: boolean | undefined;
                localFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_LocalFilesystemReadMethod | undefined;
                maxReadBufferSize?: number | undefined;
                insertKeeperMaxRetries?: number | undefined;
                maxTemporaryDataOnDiskSizeForUser?: number | undefined;
                maxTemporaryDataOnDiskSizeForQuery?: number | undefined;
                maxParserDepth?: number | undefined;
                remoteFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_RemoteFilesystemReadMethod | undefined;
                memoryOvercommitRatioDenominator?: number | undefined;
                memoryOvercommitRatioDenominatorForUser?: number | undefined;
                memoryUsageOvercommitMaxWaitMicroseconds?: number | undefined;
                compile?: boolean | undefined;
                minCountToCompile?: number | undefined;
            } | undefined;
            permissions?: {
                databaseName?: string | undefined;
            }[] | undefined;
            password?: string | undefined;
            quotas?: {
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            }[] | undefined;
        }[] & ({
            name?: string | undefined;
            settings?: {
                priority?: number | undefined;
                readonly?: number | undefined;
                allowDdl?: boolean | undefined;
                allowIntrospectionFunctions?: boolean | undefined;
                connectTimeout?: number | undefined;
                connectTimeoutWithFailover?: number | undefined;
                receiveTimeout?: number | undefined;
                sendTimeout?: number | undefined;
                timeoutBeforeCheckingExecutionSpeed?: number | undefined;
                insertQuorum?: number | undefined;
                insertQuorumTimeout?: number | undefined;
                insertQuorumParallel?: boolean | undefined;
                insertNullAsDefault?: boolean | undefined;
                selectSequentialConsistency?: boolean | undefined;
                deduplicateBlocksInDependentMaterializedViews?: boolean | undefined;
                replicationAlterPartitionsSync?: number | undefined;
                maxReplicaDelayForDistributedQueries?: number | undefined;
                fallbackToStaleReplicasForDistributedQueries?: boolean | undefined;
                distributedProductMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DistributedProductMode | undefined;
                distributedAggregationMemoryEfficient?: boolean | undefined;
                distributedDdlTaskTimeout?: number | undefined;
                skipUnavailableShards?: boolean | undefined;
                compileExpressions?: boolean | undefined;
                minCountToCompileExpression?: number | undefined;
                maxBlockSize?: number | undefined;
                minInsertBlockSizeRows?: number | undefined;
                minInsertBlockSizeBytes?: number | undefined;
                maxInsertBlockSize?: number | undefined;
                minBytesToUseDirectIo?: number | undefined;
                useUncompressedCache?: boolean | undefined;
                mergeTreeMaxRowsToUseCache?: number | undefined;
                mergeTreeMaxBytesToUseCache?: number | undefined;
                mergeTreeMinRowsForConcurrentRead?: number | undefined;
                mergeTreeMinBytesForConcurrentRead?: number | undefined;
                maxBytesBeforeExternalGroupBy?: number | undefined;
                maxBytesBeforeExternalSort?: number | undefined;
                groupByTwoLevelThreshold?: number | undefined;
                groupByTwoLevelThresholdBytes?: number | undefined;
                maxThreads?: number | undefined;
                maxMemoryUsage?: number | undefined;
                maxMemoryUsageForUser?: number | undefined;
                maxNetworkBandwidth?: number | undefined;
                maxNetworkBandwidthForUser?: number | undefined;
                maxPartitionsPerInsertBlock?: number | undefined;
                maxConcurrentQueriesForUser?: number | undefined;
                forceIndexByDate?: boolean | undefined;
                forcePrimaryKey?: boolean | undefined;
                maxRowsToRead?: number | undefined;
                maxBytesToRead?: number | undefined;
                readOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToGroupBy?: number | undefined;
                groupByOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_GroupByOverflowMode | undefined;
                maxRowsToSort?: number | undefined;
                maxBytesToSort?: number | undefined;
                sortOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxResultRows?: number | undefined;
                maxResultBytes?: number | undefined;
                resultOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInDistinct?: number | undefined;
                maxBytesInDistinct?: number | undefined;
                distinctOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToTransfer?: number | undefined;
                maxBytesToTransfer?: number | undefined;
                transferOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxExecutionTime?: number | undefined;
                timeoutOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInSet?: number | undefined;
                maxBytesInSet?: number | undefined;
                setOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInJoin?: number | undefined;
                maxBytesInJoin?: number | undefined;
                joinOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                joinAlgorithm?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[] | undefined;
                anyJoinDistinctRightTableKeys?: boolean | undefined;
                maxColumnsToRead?: number | undefined;
                maxTemporaryColumns?: number | undefined;
                maxTemporaryNonConstColumns?: number | undefined;
                maxQuerySize?: number | undefined;
                maxAstDepth?: number | undefined;
                maxAstElements?: number | undefined;
                maxExpandedAstElements?: number | undefined;
                minExecutionSpeed?: number | undefined;
                minExecutionSpeedBytes?: number | undefined;
                countDistinctImplementation?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_CountDistinctImplementation | undefined;
                inputFormatValuesInterpretExpressions?: boolean | undefined;
                inputFormatDefaultsForOmittedFields?: boolean | undefined;
                inputFormatNullAsDefault?: boolean | undefined;
                dateTimeInputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeInputFormat | undefined;
                inputFormatWithNamesUseHeader?: boolean | undefined;
                outputFormatJsonQuote64bitIntegers?: boolean | undefined;
                outputFormatJsonQuoteDenormals?: boolean | undefined;
                dateTimeOutputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeOutputFormat | undefined;
                lowCardinalityAllowInNativeFormat?: boolean | undefined;
                allowSuspiciousLowCardinalityTypes?: boolean | undefined;
                emptyResultForAggregationByEmptySet?: boolean | undefined;
                httpConnectionTimeout?: number | undefined;
                httpReceiveTimeout?: number | undefined;
                httpSendTimeout?: number | undefined;
                enableHttpCompression?: boolean | undefined;
                sendProgressInHttpHeaders?: boolean | undefined;
                httpHeadersProgressInterval?: number | undefined;
                addHttpCorsHeader?: boolean | undefined;
                cancelHttpReadonlyQueriesOnClientClose?: boolean | undefined;
                maxHttpGetRedirects?: number | undefined;
                joinedSubqueryRequiresAlias?: boolean | undefined;
                joinUseNulls?: boolean | undefined;
                transformNullIn?: boolean | undefined;
                quotaMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_QuotaMode | undefined;
                flattenNested?: boolean | undefined;
                formatRegexp?: string | undefined;
                formatRegexpEscapingRule?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_FormatRegexpEscapingRule | undefined;
                formatRegexpSkipUnmatched?: boolean | undefined;
                asyncInsert?: boolean | undefined;
                asyncInsertThreads?: number | undefined;
                waitForAsyncInsert?: boolean | undefined;
                waitForAsyncInsertTimeout?: number | undefined;
                asyncInsertMaxDataSize?: number | undefined;
                asyncInsertBusyTimeout?: number | undefined;
                asyncInsertStaleTimeout?: number | undefined;
                memoryProfilerStep?: number | undefined;
                memoryProfilerSampleProbability?: number | undefined;
                maxFinalThreads?: number | undefined;
                inputFormatParallelParsing?: boolean | undefined;
                inputFormatImportNestedJson?: boolean | undefined;
                localFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_LocalFilesystemReadMethod | undefined;
                maxReadBufferSize?: number | undefined;
                insertKeeperMaxRetries?: number | undefined;
                maxTemporaryDataOnDiskSizeForUser?: number | undefined;
                maxTemporaryDataOnDiskSizeForQuery?: number | undefined;
                maxParserDepth?: number | undefined;
                remoteFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_RemoteFilesystemReadMethod | undefined;
                memoryOvercommitRatioDenominator?: number | undefined;
                memoryOvercommitRatioDenominatorForUser?: number | undefined;
                memoryUsageOvercommitMaxWaitMicroseconds?: number | undefined;
                compile?: boolean | undefined;
                minCountToCompile?: number | undefined;
            } | undefined;
            permissions?: {
                databaseName?: string | undefined;
            }[] | undefined;
            password?: string | undefined;
            quotas?: {
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            }[] | undefined;
        } & {
            name?: string | undefined;
            settings?: ({
                priority?: number | undefined;
                readonly?: number | undefined;
                allowDdl?: boolean | undefined;
                allowIntrospectionFunctions?: boolean | undefined;
                connectTimeout?: number | undefined;
                connectTimeoutWithFailover?: number | undefined;
                receiveTimeout?: number | undefined;
                sendTimeout?: number | undefined;
                timeoutBeforeCheckingExecutionSpeed?: number | undefined;
                insertQuorum?: number | undefined;
                insertQuorumTimeout?: number | undefined;
                insertQuorumParallel?: boolean | undefined;
                insertNullAsDefault?: boolean | undefined;
                selectSequentialConsistency?: boolean | undefined;
                deduplicateBlocksInDependentMaterializedViews?: boolean | undefined;
                replicationAlterPartitionsSync?: number | undefined;
                maxReplicaDelayForDistributedQueries?: number | undefined;
                fallbackToStaleReplicasForDistributedQueries?: boolean | undefined;
                distributedProductMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DistributedProductMode | undefined;
                distributedAggregationMemoryEfficient?: boolean | undefined;
                distributedDdlTaskTimeout?: number | undefined;
                skipUnavailableShards?: boolean | undefined;
                compileExpressions?: boolean | undefined;
                minCountToCompileExpression?: number | undefined;
                maxBlockSize?: number | undefined;
                minInsertBlockSizeRows?: number | undefined;
                minInsertBlockSizeBytes?: number | undefined;
                maxInsertBlockSize?: number | undefined;
                minBytesToUseDirectIo?: number | undefined;
                useUncompressedCache?: boolean | undefined;
                mergeTreeMaxRowsToUseCache?: number | undefined;
                mergeTreeMaxBytesToUseCache?: number | undefined;
                mergeTreeMinRowsForConcurrentRead?: number | undefined;
                mergeTreeMinBytesForConcurrentRead?: number | undefined;
                maxBytesBeforeExternalGroupBy?: number | undefined;
                maxBytesBeforeExternalSort?: number | undefined;
                groupByTwoLevelThreshold?: number | undefined;
                groupByTwoLevelThresholdBytes?: number | undefined;
                maxThreads?: number | undefined;
                maxMemoryUsage?: number | undefined;
                maxMemoryUsageForUser?: number | undefined;
                maxNetworkBandwidth?: number | undefined;
                maxNetworkBandwidthForUser?: number | undefined;
                maxPartitionsPerInsertBlock?: number | undefined;
                maxConcurrentQueriesForUser?: number | undefined;
                forceIndexByDate?: boolean | undefined;
                forcePrimaryKey?: boolean | undefined;
                maxRowsToRead?: number | undefined;
                maxBytesToRead?: number | undefined;
                readOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToGroupBy?: number | undefined;
                groupByOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_GroupByOverflowMode | undefined;
                maxRowsToSort?: number | undefined;
                maxBytesToSort?: number | undefined;
                sortOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxResultRows?: number | undefined;
                maxResultBytes?: number | undefined;
                resultOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInDistinct?: number | undefined;
                maxBytesInDistinct?: number | undefined;
                distinctOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToTransfer?: number | undefined;
                maxBytesToTransfer?: number | undefined;
                transferOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxExecutionTime?: number | undefined;
                timeoutOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInSet?: number | undefined;
                maxBytesInSet?: number | undefined;
                setOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInJoin?: number | undefined;
                maxBytesInJoin?: number | undefined;
                joinOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                joinAlgorithm?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[] | undefined;
                anyJoinDistinctRightTableKeys?: boolean | undefined;
                maxColumnsToRead?: number | undefined;
                maxTemporaryColumns?: number | undefined;
                maxTemporaryNonConstColumns?: number | undefined;
                maxQuerySize?: number | undefined;
                maxAstDepth?: number | undefined;
                maxAstElements?: number | undefined;
                maxExpandedAstElements?: number | undefined;
                minExecutionSpeed?: number | undefined;
                minExecutionSpeedBytes?: number | undefined;
                countDistinctImplementation?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_CountDistinctImplementation | undefined;
                inputFormatValuesInterpretExpressions?: boolean | undefined;
                inputFormatDefaultsForOmittedFields?: boolean | undefined;
                inputFormatNullAsDefault?: boolean | undefined;
                dateTimeInputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeInputFormat | undefined;
                inputFormatWithNamesUseHeader?: boolean | undefined;
                outputFormatJsonQuote64bitIntegers?: boolean | undefined;
                outputFormatJsonQuoteDenormals?: boolean | undefined;
                dateTimeOutputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeOutputFormat | undefined;
                lowCardinalityAllowInNativeFormat?: boolean | undefined;
                allowSuspiciousLowCardinalityTypes?: boolean | undefined;
                emptyResultForAggregationByEmptySet?: boolean | undefined;
                httpConnectionTimeout?: number | undefined;
                httpReceiveTimeout?: number | undefined;
                httpSendTimeout?: number | undefined;
                enableHttpCompression?: boolean | undefined;
                sendProgressInHttpHeaders?: boolean | undefined;
                httpHeadersProgressInterval?: number | undefined;
                addHttpCorsHeader?: boolean | undefined;
                cancelHttpReadonlyQueriesOnClientClose?: boolean | undefined;
                maxHttpGetRedirects?: number | undefined;
                joinedSubqueryRequiresAlias?: boolean | undefined;
                joinUseNulls?: boolean | undefined;
                transformNullIn?: boolean | undefined;
                quotaMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_QuotaMode | undefined;
                flattenNested?: boolean | undefined;
                formatRegexp?: string | undefined;
                formatRegexpEscapingRule?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_FormatRegexpEscapingRule | undefined;
                formatRegexpSkipUnmatched?: boolean | undefined;
                asyncInsert?: boolean | undefined;
                asyncInsertThreads?: number | undefined;
                waitForAsyncInsert?: boolean | undefined;
                waitForAsyncInsertTimeout?: number | undefined;
                asyncInsertMaxDataSize?: number | undefined;
                asyncInsertBusyTimeout?: number | undefined;
                asyncInsertStaleTimeout?: number | undefined;
                memoryProfilerStep?: number | undefined;
                memoryProfilerSampleProbability?: number | undefined;
                maxFinalThreads?: number | undefined;
                inputFormatParallelParsing?: boolean | undefined;
                inputFormatImportNestedJson?: boolean | undefined;
                localFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_LocalFilesystemReadMethod | undefined;
                maxReadBufferSize?: number | undefined;
                insertKeeperMaxRetries?: number | undefined;
                maxTemporaryDataOnDiskSizeForUser?: number | undefined;
                maxTemporaryDataOnDiskSizeForQuery?: number | undefined;
                maxParserDepth?: number | undefined;
                remoteFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_RemoteFilesystemReadMethod | undefined;
                memoryOvercommitRatioDenominator?: number | undefined;
                memoryOvercommitRatioDenominatorForUser?: number | undefined;
                memoryUsageOvercommitMaxWaitMicroseconds?: number | undefined;
                compile?: boolean | undefined;
                minCountToCompile?: number | undefined;
            } & {
                priority?: number | undefined;
                readonly?: number | undefined;
                allowDdl?: boolean | undefined;
                allowIntrospectionFunctions?: boolean | undefined;
                connectTimeout?: number | undefined;
                connectTimeoutWithFailover?: number | undefined;
                receiveTimeout?: number | undefined;
                sendTimeout?: number | undefined;
                timeoutBeforeCheckingExecutionSpeed?: number | undefined;
                insertQuorum?: number | undefined;
                insertQuorumTimeout?: number | undefined;
                insertQuorumParallel?: boolean | undefined;
                insertNullAsDefault?: boolean | undefined;
                selectSequentialConsistency?: boolean | undefined;
                deduplicateBlocksInDependentMaterializedViews?: boolean | undefined;
                replicationAlterPartitionsSync?: number | undefined;
                maxReplicaDelayForDistributedQueries?: number | undefined;
                fallbackToStaleReplicasForDistributedQueries?: boolean | undefined;
                distributedProductMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DistributedProductMode | undefined;
                distributedAggregationMemoryEfficient?: boolean | undefined;
                distributedDdlTaskTimeout?: number | undefined;
                skipUnavailableShards?: boolean | undefined;
                compileExpressions?: boolean | undefined;
                minCountToCompileExpression?: number | undefined;
                maxBlockSize?: number | undefined;
                minInsertBlockSizeRows?: number | undefined;
                minInsertBlockSizeBytes?: number | undefined;
                maxInsertBlockSize?: number | undefined;
                minBytesToUseDirectIo?: number | undefined;
                useUncompressedCache?: boolean | undefined;
                mergeTreeMaxRowsToUseCache?: number | undefined;
                mergeTreeMaxBytesToUseCache?: number | undefined;
                mergeTreeMinRowsForConcurrentRead?: number | undefined;
                mergeTreeMinBytesForConcurrentRead?: number | undefined;
                maxBytesBeforeExternalGroupBy?: number | undefined;
                maxBytesBeforeExternalSort?: number | undefined;
                groupByTwoLevelThreshold?: number | undefined;
                groupByTwoLevelThresholdBytes?: number | undefined;
                maxThreads?: number | undefined;
                maxMemoryUsage?: number | undefined;
                maxMemoryUsageForUser?: number | undefined;
                maxNetworkBandwidth?: number | undefined;
                maxNetworkBandwidthForUser?: number | undefined;
                maxPartitionsPerInsertBlock?: number | undefined;
                maxConcurrentQueriesForUser?: number | undefined;
                forceIndexByDate?: boolean | undefined;
                forcePrimaryKey?: boolean | undefined;
                maxRowsToRead?: number | undefined;
                maxBytesToRead?: number | undefined;
                readOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToGroupBy?: number | undefined;
                groupByOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_GroupByOverflowMode | undefined;
                maxRowsToSort?: number | undefined;
                maxBytesToSort?: number | undefined;
                sortOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxResultRows?: number | undefined;
                maxResultBytes?: number | undefined;
                resultOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInDistinct?: number | undefined;
                maxBytesInDistinct?: number | undefined;
                distinctOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToTransfer?: number | undefined;
                maxBytesToTransfer?: number | undefined;
                transferOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxExecutionTime?: number | undefined;
                timeoutOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInSet?: number | undefined;
                maxBytesInSet?: number | undefined;
                setOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInJoin?: number | undefined;
                maxBytesInJoin?: number | undefined;
                joinOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                joinAlgorithm?: (import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[] & import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[] & Record<Exclude<keyof I["userSpecs"][number]["settings"]["joinAlgorithm"], "$type" | keyof import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[]>, never>) | undefined;
                anyJoinDistinctRightTableKeys?: boolean | undefined;
                maxColumnsToRead?: number | undefined;
                maxTemporaryColumns?: number | undefined;
                maxTemporaryNonConstColumns?: number | undefined;
                maxQuerySize?: number | undefined;
                maxAstDepth?: number | undefined;
                maxAstElements?: number | undefined;
                maxExpandedAstElements?: number | undefined;
                minExecutionSpeed?: number | undefined;
                minExecutionSpeedBytes?: number | undefined;
                countDistinctImplementation?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_CountDistinctImplementation | undefined;
                inputFormatValuesInterpretExpressions?: boolean | undefined;
                inputFormatDefaultsForOmittedFields?: boolean | undefined;
                inputFormatNullAsDefault?: boolean | undefined;
                dateTimeInputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeInputFormat | undefined;
                inputFormatWithNamesUseHeader?: boolean | undefined;
                outputFormatJsonQuote64bitIntegers?: boolean | undefined;
                outputFormatJsonQuoteDenormals?: boolean | undefined;
                dateTimeOutputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeOutputFormat | undefined;
                lowCardinalityAllowInNativeFormat?: boolean | undefined;
                allowSuspiciousLowCardinalityTypes?: boolean | undefined;
                emptyResultForAggregationByEmptySet?: boolean | undefined;
                httpConnectionTimeout?: number | undefined;
                httpReceiveTimeout?: number | undefined;
                httpSendTimeout?: number | undefined;
                enableHttpCompression?: boolean | undefined;
                sendProgressInHttpHeaders?: boolean | undefined;
                httpHeadersProgressInterval?: number | undefined;
                addHttpCorsHeader?: boolean | undefined;
                cancelHttpReadonlyQueriesOnClientClose?: boolean | undefined;
                maxHttpGetRedirects?: number | undefined;
                joinedSubqueryRequiresAlias?: boolean | undefined;
                joinUseNulls?: boolean | undefined;
                transformNullIn?: boolean | undefined;
                quotaMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_QuotaMode | undefined;
                flattenNested?: boolean | undefined;
                formatRegexp?: string | undefined;
                formatRegexpEscapingRule?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_FormatRegexpEscapingRule | undefined;
                formatRegexpSkipUnmatched?: boolean | undefined;
                asyncInsert?: boolean | undefined;
                asyncInsertThreads?: number | undefined;
                waitForAsyncInsert?: boolean | undefined;
                waitForAsyncInsertTimeout?: number | undefined;
                asyncInsertMaxDataSize?: number | undefined;
                asyncInsertBusyTimeout?: number | undefined;
                asyncInsertStaleTimeout?: number | undefined;
                memoryProfilerStep?: number | undefined;
                memoryProfilerSampleProbability?: number | undefined;
                maxFinalThreads?: number | undefined;
                inputFormatParallelParsing?: boolean | undefined;
                inputFormatImportNestedJson?: boolean | undefined;
                localFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_LocalFilesystemReadMethod | undefined;
                maxReadBufferSize?: number | undefined;
                insertKeeperMaxRetries?: number | undefined;
                maxTemporaryDataOnDiskSizeForUser?: number | undefined;
                maxTemporaryDataOnDiskSizeForQuery?: number | undefined;
                maxParserDepth?: number | undefined;
                remoteFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_RemoteFilesystemReadMethod | undefined;
                memoryOvercommitRatioDenominator?: number | undefined;
                memoryOvercommitRatioDenominatorForUser?: number | undefined;
                memoryUsageOvercommitMaxWaitMicroseconds?: number | undefined;
                compile?: boolean | undefined;
                minCountToCompile?: number | undefined;
            } & Record<Exclude<keyof I["userSpecs"][number]["settings"], "$type" | "priority" | "readonly" | "allowDdl" | "allowIntrospectionFunctions" | "connectTimeout" | "connectTimeoutWithFailover" | "receiveTimeout" | "sendTimeout" | "timeoutBeforeCheckingExecutionSpeed" | "insertQuorum" | "insertQuorumTimeout" | "insertQuorumParallel" | "insertNullAsDefault" | "selectSequentialConsistency" | "deduplicateBlocksInDependentMaterializedViews" | "replicationAlterPartitionsSync" | "maxReplicaDelayForDistributedQueries" | "fallbackToStaleReplicasForDistributedQueries" | "distributedProductMode" | "distributedAggregationMemoryEfficient" | "distributedDdlTaskTimeout" | "skipUnavailableShards" | "compileExpressions" | "minCountToCompileExpression" | "maxBlockSize" | "minInsertBlockSizeRows" | "minInsertBlockSizeBytes" | "maxInsertBlockSize" | "minBytesToUseDirectIo" | "useUncompressedCache" | "mergeTreeMaxRowsToUseCache" | "mergeTreeMaxBytesToUseCache" | "mergeTreeMinRowsForConcurrentRead" | "mergeTreeMinBytesForConcurrentRead" | "maxBytesBeforeExternalGroupBy" | "maxBytesBeforeExternalSort" | "groupByTwoLevelThreshold" | "groupByTwoLevelThresholdBytes" | "maxThreads" | "maxMemoryUsage" | "maxMemoryUsageForUser" | "maxNetworkBandwidth" | "maxNetworkBandwidthForUser" | "maxPartitionsPerInsertBlock" | "maxConcurrentQueriesForUser" | "forceIndexByDate" | "forcePrimaryKey" | "maxRowsToRead" | "maxBytesToRead" | "readOverflowMode" | "maxRowsToGroupBy" | "groupByOverflowMode" | "maxRowsToSort" | "maxBytesToSort" | "sortOverflowMode" | "maxResultRows" | "maxResultBytes" | "resultOverflowMode" | "maxRowsInDistinct" | "maxBytesInDistinct" | "distinctOverflowMode" | "maxRowsToTransfer" | "maxBytesToTransfer" | "transferOverflowMode" | "maxExecutionTime" | "timeoutOverflowMode" | "maxRowsInSet" | "maxBytesInSet" | "setOverflowMode" | "maxRowsInJoin" | "maxBytesInJoin" | "joinOverflowMode" | "joinAlgorithm" | "anyJoinDistinctRightTableKeys" | "maxColumnsToRead" | "maxTemporaryColumns" | "maxTemporaryNonConstColumns" | "maxQuerySize" | "maxAstDepth" | "maxAstElements" | "maxExpandedAstElements" | "minExecutionSpeed" | "minExecutionSpeedBytes" | "countDistinctImplementation" | "inputFormatValuesInterpretExpressions" | "inputFormatDefaultsForOmittedFields" | "inputFormatNullAsDefault" | "dateTimeInputFormat" | "inputFormatWithNamesUseHeader" | "outputFormatJsonQuote64bitIntegers" | "outputFormatJsonQuoteDenormals" | "dateTimeOutputFormat" | "lowCardinalityAllowInNativeFormat" | "allowSuspiciousLowCardinalityTypes" | "emptyResultForAggregationByEmptySet" | "httpConnectionTimeout" | "httpReceiveTimeout" | "httpSendTimeout" | "enableHttpCompression" | "sendProgressInHttpHeaders" | "httpHeadersProgressInterval" | "addHttpCorsHeader" | "cancelHttpReadonlyQueriesOnClientClose" | "maxHttpGetRedirects" | "joinedSubqueryRequiresAlias" | "joinUseNulls" | "transformNullIn" | "quotaMode" | "flattenNested" | "formatRegexp" | "formatRegexpEscapingRule" | "formatRegexpSkipUnmatched" | "asyncInsert" | "asyncInsertThreads" | "waitForAsyncInsert" | "waitForAsyncInsertTimeout" | "asyncInsertMaxDataSize" | "asyncInsertBusyTimeout" | "asyncInsertStaleTimeout" | "memoryProfilerStep" | "memoryProfilerSampleProbability" | "maxFinalThreads" | "inputFormatParallelParsing" | "inputFormatImportNestedJson" | "localFilesystemReadMethod" | "maxReadBufferSize" | "insertKeeperMaxRetries" | "maxTemporaryDataOnDiskSizeForUser" | "maxTemporaryDataOnDiskSizeForQuery" | "maxParserDepth" | "remoteFilesystemReadMethod" | "memoryOvercommitRatioDenominator" | "memoryOvercommitRatioDenominatorForUser" | "memoryUsageOvercommitMaxWaitMicroseconds" | "compile" | "minCountToCompile">, never>) | undefined;
            permissions?: ({
                databaseName?: string | undefined;
            }[] & ({
                databaseName?: string | undefined;
            } & {
                databaseName?: string | undefined;
            } & Record<Exclude<keyof I["userSpecs"][number]["permissions"][number], "$type" | "databaseName">, never>)[] & Record<Exclude<keyof I["userSpecs"][number]["permissions"], "$type" | keyof {
                databaseName?: string | undefined;
            }[]>, never>) | undefined;
            password?: string | undefined;
            quotas?: ({
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            }[] & ({
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            } & {
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            } & Record<Exclude<keyof I["userSpecs"][number]["quotas"][number], "$type" | "queries" | "errors" | "intervalDuration" | "resultRows" | "readRows" | "executionTime">, never>)[] & Record<Exclude<keyof I["userSpecs"][number]["quotas"], "$type" | keyof {
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["userSpecs"][number], "$type" | "name" | "settings" | "permissions" | "password" | "quotas">, never>)[] & Record<Exclude<keyof I["userSpecs"], "$type" | keyof {
            name?: string | undefined;
            settings?: {
                priority?: number | undefined;
                readonly?: number | undefined;
                allowDdl?: boolean | undefined;
                allowIntrospectionFunctions?: boolean | undefined;
                connectTimeout?: number | undefined;
                connectTimeoutWithFailover?: number | undefined;
                receiveTimeout?: number | undefined;
                sendTimeout?: number | undefined;
                timeoutBeforeCheckingExecutionSpeed?: number | undefined;
                insertQuorum?: number | undefined;
                insertQuorumTimeout?: number | undefined;
                insertQuorumParallel?: boolean | undefined;
                insertNullAsDefault?: boolean | undefined;
                selectSequentialConsistency?: boolean | undefined;
                deduplicateBlocksInDependentMaterializedViews?: boolean | undefined;
                replicationAlterPartitionsSync?: number | undefined;
                maxReplicaDelayForDistributedQueries?: number | undefined;
                fallbackToStaleReplicasForDistributedQueries?: boolean | undefined;
                distributedProductMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DistributedProductMode | undefined;
                distributedAggregationMemoryEfficient?: boolean | undefined;
                distributedDdlTaskTimeout?: number | undefined;
                skipUnavailableShards?: boolean | undefined;
                compileExpressions?: boolean | undefined;
                minCountToCompileExpression?: number | undefined;
                maxBlockSize?: number | undefined;
                minInsertBlockSizeRows?: number | undefined;
                minInsertBlockSizeBytes?: number | undefined;
                maxInsertBlockSize?: number | undefined;
                minBytesToUseDirectIo?: number | undefined;
                useUncompressedCache?: boolean | undefined;
                mergeTreeMaxRowsToUseCache?: number | undefined;
                mergeTreeMaxBytesToUseCache?: number | undefined;
                mergeTreeMinRowsForConcurrentRead?: number | undefined;
                mergeTreeMinBytesForConcurrentRead?: number | undefined;
                maxBytesBeforeExternalGroupBy?: number | undefined;
                maxBytesBeforeExternalSort?: number | undefined;
                groupByTwoLevelThreshold?: number | undefined;
                groupByTwoLevelThresholdBytes?: number | undefined;
                maxThreads?: number | undefined;
                maxMemoryUsage?: number | undefined;
                maxMemoryUsageForUser?: number | undefined;
                maxNetworkBandwidth?: number | undefined;
                maxNetworkBandwidthForUser?: number | undefined;
                maxPartitionsPerInsertBlock?: number | undefined;
                maxConcurrentQueriesForUser?: number | undefined;
                forceIndexByDate?: boolean | undefined;
                forcePrimaryKey?: boolean | undefined;
                maxRowsToRead?: number | undefined;
                maxBytesToRead?: number | undefined;
                readOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToGroupBy?: number | undefined;
                groupByOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_GroupByOverflowMode | undefined;
                maxRowsToSort?: number | undefined;
                maxBytesToSort?: number | undefined;
                sortOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxResultRows?: number | undefined;
                maxResultBytes?: number | undefined;
                resultOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInDistinct?: number | undefined;
                maxBytesInDistinct?: number | undefined;
                distinctOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsToTransfer?: number | undefined;
                maxBytesToTransfer?: number | undefined;
                transferOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxExecutionTime?: number | undefined;
                timeoutOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInSet?: number | undefined;
                maxBytesInSet?: number | undefined;
                setOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                maxRowsInJoin?: number | undefined;
                maxBytesInJoin?: number | undefined;
                joinOverflowMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_OverflowMode | undefined;
                joinAlgorithm?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_JoinAlgorithm[] | undefined;
                anyJoinDistinctRightTableKeys?: boolean | undefined;
                maxColumnsToRead?: number | undefined;
                maxTemporaryColumns?: number | undefined;
                maxTemporaryNonConstColumns?: number | undefined;
                maxQuerySize?: number | undefined;
                maxAstDepth?: number | undefined;
                maxAstElements?: number | undefined;
                maxExpandedAstElements?: number | undefined;
                minExecutionSpeed?: number | undefined;
                minExecutionSpeedBytes?: number | undefined;
                countDistinctImplementation?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_CountDistinctImplementation | undefined;
                inputFormatValuesInterpretExpressions?: boolean | undefined;
                inputFormatDefaultsForOmittedFields?: boolean | undefined;
                inputFormatNullAsDefault?: boolean | undefined;
                dateTimeInputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeInputFormat | undefined;
                inputFormatWithNamesUseHeader?: boolean | undefined;
                outputFormatJsonQuote64bitIntegers?: boolean | undefined;
                outputFormatJsonQuoteDenormals?: boolean | undefined;
                dateTimeOutputFormat?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_DateTimeOutputFormat | undefined;
                lowCardinalityAllowInNativeFormat?: boolean | undefined;
                allowSuspiciousLowCardinalityTypes?: boolean | undefined;
                emptyResultForAggregationByEmptySet?: boolean | undefined;
                httpConnectionTimeout?: number | undefined;
                httpReceiveTimeout?: number | undefined;
                httpSendTimeout?: number | undefined;
                enableHttpCompression?: boolean | undefined;
                sendProgressInHttpHeaders?: boolean | undefined;
                httpHeadersProgressInterval?: number | undefined;
                addHttpCorsHeader?: boolean | undefined;
                cancelHttpReadonlyQueriesOnClientClose?: boolean | undefined;
                maxHttpGetRedirects?: number | undefined;
                joinedSubqueryRequiresAlias?: boolean | undefined;
                joinUseNulls?: boolean | undefined;
                transformNullIn?: boolean | undefined;
                quotaMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_QuotaMode | undefined;
                flattenNested?: boolean | undefined;
                formatRegexp?: string | undefined;
                formatRegexpEscapingRule?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_FormatRegexpEscapingRule | undefined;
                formatRegexpSkipUnmatched?: boolean | undefined;
                asyncInsert?: boolean | undefined;
                asyncInsertThreads?: number | undefined;
                waitForAsyncInsert?: boolean | undefined;
                waitForAsyncInsertTimeout?: number | undefined;
                asyncInsertMaxDataSize?: number | undefined;
                asyncInsertBusyTimeout?: number | undefined;
                asyncInsertStaleTimeout?: number | undefined;
                memoryProfilerStep?: number | undefined;
                memoryProfilerSampleProbability?: number | undefined;
                maxFinalThreads?: number | undefined;
                inputFormatParallelParsing?: boolean | undefined;
                inputFormatImportNestedJson?: boolean | undefined;
                localFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_LocalFilesystemReadMethod | undefined;
                maxReadBufferSize?: number | undefined;
                insertKeeperMaxRetries?: number | undefined;
                maxTemporaryDataOnDiskSizeForUser?: number | undefined;
                maxTemporaryDataOnDiskSizeForQuery?: number | undefined;
                maxParserDepth?: number | undefined;
                remoteFilesystemReadMethod?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/user").UserSettings_RemoteFilesystemReadMethod | undefined;
                memoryOvercommitRatioDenominator?: number | undefined;
                memoryOvercommitRatioDenominatorForUser?: number | undefined;
                memoryUsageOvercommitMaxWaitMicroseconds?: number | undefined;
                compile?: boolean | undefined;
                minCountToCompile?: number | undefined;
            } | undefined;
            permissions?: {
                databaseName?: string | undefined;
            }[] | undefined;
            password?: string | undefined;
            quotas?: {
                queries?: number | undefined;
                errors?: number | undefined;
                intervalDuration?: number | undefined;
                resultRows?: number | undefined;
                readRows?: number | undefined;
                executionTime?: number | undefined;
            }[] | undefined;
        }[]>, never>) | undefined;
        hostSpecs?: ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] & ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & Record<Exclude<keyof I["hostSpecs"][number], "$type" | "type" | "subnetId" | "zoneId" | "assignPublicIp" | "shardName">, never>)[] & Record<Exclude<keyof I["hostSpecs"], "$type" | keyof {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "name" | "folderId" | "labels" | "networkId" | "securityGroupIds" | "deletionProtection" | "serviceAccountId" | "configSpec" | "shardName" | "maintenanceWindow" | "environment" | "databaseSpecs" | "userSpecs" | "hostSpecs">, never>>(object: I): CreateClusterRequest;
};
export declare const CreateClusterRequest_LabelsEntry: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterRequest.LabelsEntry";
    encode(message: CreateClusterRequest_LabelsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateClusterRequest_LabelsEntry;
    fromJSON(object: any): CreateClusterRequest_LabelsEntry;
    toJSON(message: CreateClusterRequest_LabelsEntry): unknown;
    fromPartial<I extends {
        value?: string | undefined;
        key?: string | undefined;
    } & {
        value?: string | undefined;
        key?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "value" | "key">, never>>(object: I): CreateClusterRequest_LabelsEntry;
};
export declare const CreateClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterMetadata";
    encode(message: CreateClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateClusterMetadata;
    fromJSON(object: any): CreateClusterMetadata;
    toJSON(message: CreateClusterMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): CreateClusterMetadata;
};
export declare const UpdateClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterRequest";
    encode(message: UpdateClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterRequest;
    fromJSON(object: any): UpdateClusterRequest;
    toJSON(message: UpdateClusterRequest): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        name?: string | undefined;
        labels?: {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } | undefined;
        updateMask?: {
            paths?: string[] | undefined;
        } | undefined;
        securityGroupIds?: string[] | undefined;
        deletionProtection?: boolean | undefined;
        serviceAccountId?: string | undefined;
        clusterId?: string | undefined;
        configSpec?: {
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } | undefined;
        maintenanceWindow?: {
            anytime?: {} | undefined;
            weeklyMaintenanceWindow?: {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } | undefined;
        } | undefined;
    } & {
        description?: string | undefined;
        name?: string | undefined;
        labels?: ({
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & Record<Exclude<keyof I["labels"], string | number>, never>) | undefined;
        updateMask?: ({
            paths?: string[] | undefined;
        } & {
            paths?: (string[] & string[] & Record<Exclude<keyof I["updateMask"]["paths"], "$type" | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["updateMask"], "$type" | "paths">, never>) | undefined;
        securityGroupIds?: (string[] & string[] & Record<Exclude<keyof I["securityGroupIds"], "$type" | keyof string[]>, never>) | undefined;
        deletionProtection?: boolean | undefined;
        serviceAccountId?: string | undefined;
        clusterId?: string | undefined;
        configSpec?: ({
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } & {
            version?: string | undefined;
            zookeeper?: ({
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["zookeeper"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["configSpec"]["zookeeper"], "$type" | "resources">, never>) | undefined;
            clickhouse?: ({
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                config?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["configSpec"]["clickhouse"], "$type" | "config" | "resources">, never>) | undefined;
            backupWindowStart?: ({
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & Record<Exclude<keyof I["configSpec"]["backupWindowStart"], "$type" | "seconds" | "nanos" | "hours" | "minutes">, never>) | undefined;
            access?: ({
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & Record<Exclude<keyof I["configSpec"]["access"], "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>) | undefined;
            cloudStorage?: ({
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & Record<Exclude<keyof I["configSpec"]["cloudStorage"], "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>) | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } & Record<Exclude<keyof I["configSpec"], "$type" | "version" | "zookeeper" | "clickhouse" | "backupWindowStart" | "access" | "cloudStorage" | "sqlDatabaseManagement" | "sqlUserManagement" | "embeddedKeeper" | "adminPassword">, never>) | undefined;
        maintenanceWindow?: ({
            anytime?: {} | undefined;
            weeklyMaintenanceWindow?: {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } | undefined;
        } & {
            anytime?: ({} & {} & Record<Exclude<keyof I["maintenanceWindow"]["anytime"], "$type">, never>) | undefined;
            weeklyMaintenanceWindow?: ({
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } & {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } & Record<Exclude<keyof I["maintenanceWindow"]["weeklyMaintenanceWindow"], "$type" | "hour" | "day">, never>) | undefined;
        } & Record<Exclude<keyof I["maintenanceWindow"], "$type" | "anytime" | "weeklyMaintenanceWindow">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "name" | "labels" | "updateMask" | "securityGroupIds" | "deletionProtection" | "serviceAccountId" | "clusterId" | "configSpec" | "maintenanceWindow">, never>>(object: I): UpdateClusterRequest;
};
export declare const UpdateClusterRequest_LabelsEntry: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterRequest.LabelsEntry";
    encode(message: UpdateClusterRequest_LabelsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterRequest_LabelsEntry;
    fromJSON(object: any): UpdateClusterRequest_LabelsEntry;
    toJSON(message: UpdateClusterRequest_LabelsEntry): unknown;
    fromPartial<I extends {
        value?: string | undefined;
        key?: string | undefined;
    } & {
        value?: string | undefined;
        key?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "value" | "key">, never>>(object: I): UpdateClusterRequest_LabelsEntry;
};
export declare const UpdateClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterMetadata";
    encode(message: UpdateClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterMetadata;
    fromJSON(object: any): UpdateClusterMetadata;
    toJSON(message: UpdateClusterMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): UpdateClusterMetadata;
};
export declare const DeleteClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterRequest";
    encode(message: DeleteClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterRequest;
    fromJSON(object: any): DeleteClusterRequest;
    toJSON(message: DeleteClusterRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): DeleteClusterRequest;
};
export declare const DeleteClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterMetadata";
    encode(message: DeleteClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterMetadata;
    fromJSON(object: any): DeleteClusterMetadata;
    toJSON(message: DeleteClusterMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): DeleteClusterMetadata;
};
export declare const StartClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.StartClusterRequest";
    encode(message: StartClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StartClusterRequest;
    fromJSON(object: any): StartClusterRequest;
    toJSON(message: StartClusterRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): StartClusterRequest;
};
export declare const StartClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.StartClusterMetadata";
    encode(message: StartClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StartClusterMetadata;
    fromJSON(object: any): StartClusterMetadata;
    toJSON(message: StartClusterMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): StartClusterMetadata;
};
export declare const StopClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.StopClusterRequest";
    encode(message: StopClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StopClusterRequest;
    fromJSON(object: any): StopClusterRequest;
    toJSON(message: StopClusterRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): StopClusterRequest;
};
export declare const StopClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.StopClusterMetadata";
    encode(message: StopClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StopClusterMetadata;
    fromJSON(object: any): StopClusterMetadata;
    toJSON(message: StopClusterMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): StopClusterMetadata;
};
export declare const MoveClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.MoveClusterRequest";
    encode(message: MoveClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): MoveClusterRequest;
    fromJSON(object: any): MoveClusterRequest;
    toJSON(message: MoveClusterRequest): unknown;
    fromPartial<I extends {
        destinationFolderId?: string | undefined;
        clusterId?: string | undefined;
    } & {
        destinationFolderId?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "destinationFolderId" | "clusterId">, never>>(object: I): MoveClusterRequest;
};
export declare const MoveClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.MoveClusterMetadata";
    encode(message: MoveClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): MoveClusterMetadata;
    fromJSON(object: any): MoveClusterMetadata;
    toJSON(message: MoveClusterMetadata): unknown;
    fromPartial<I extends {
        destinationFolderId?: string | undefined;
        sourceFolderId?: string | undefined;
        clusterId?: string | undefined;
    } & {
        destinationFolderId?: string | undefined;
        sourceFolderId?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "destinationFolderId" | "sourceFolderId" | "clusterId">, never>>(object: I): MoveClusterMetadata;
};
export declare const AddClusterZookeeperRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterZookeeperRequest";
    encode(message: AddClusterZookeeperRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AddClusterZookeeperRequest;
    fromJSON(object: any): AddClusterZookeeperRequest;
    toJSON(message: AddClusterZookeeperRequest): unknown;
    fromPartial<I extends {
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
        clusterId?: string | undefined;
        hostSpecs?: {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] | undefined;
    } & {
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        clusterId?: string | undefined;
        hostSpecs?: ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] & ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & Record<Exclude<keyof I["hostSpecs"][number], "$type" | "type" | "subnetId" | "zoneId" | "assignPublicIp" | "shardName">, never>)[] & Record<Exclude<keyof I["hostSpecs"], "$type" | keyof {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "resources" | "clusterId" | "hostSpecs">, never>>(object: I): AddClusterZookeeperRequest;
};
export declare const AddClusterZookeeperMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterZookeeperMetadata";
    encode(message: AddClusterZookeeperMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AddClusterZookeeperMetadata;
    fromJSON(object: any): AddClusterZookeeperMetadata;
    toJSON(message: AddClusterZookeeperMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): AddClusterZookeeperMetadata;
};
export declare const BackupClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.BackupClusterRequest";
    encode(message: BackupClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): BackupClusterRequest;
    fromJSON(object: any): BackupClusterRequest;
    toJSON(message: BackupClusterRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): BackupClusterRequest;
};
export declare const BackupClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.BackupClusterMetadata";
    encode(message: BackupClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): BackupClusterMetadata;
    fromJSON(object: any): BackupClusterMetadata;
    toJSON(message: BackupClusterMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): BackupClusterMetadata;
};
export declare const RestoreClusterRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.RestoreClusterRequest";
    encode(message: RestoreClusterRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RestoreClusterRequest;
    fromJSON(object: any): RestoreClusterRequest;
    toJSON(message: RestoreClusterRequest): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        name?: string | undefined;
        folderId?: string | undefined;
        labels?: {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } | undefined;
        networkId?: string | undefined;
        securityGroupIds?: string[] | undefined;
        backupId?: string | undefined;
        serviceAccountId?: string | undefined;
        configSpec?: {
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } | undefined;
        environment?: Cluster_Environment | undefined;
        hostSpecs?: {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] | undefined;
        additionalBackupIds?: string[] | undefined;
    } & {
        description?: string | undefined;
        name?: string | undefined;
        folderId?: string | undefined;
        labels?: ({
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & Record<Exclude<keyof I["labels"], string | number>, never>) | undefined;
        networkId?: string | undefined;
        securityGroupIds?: (string[] & string[] & Record<Exclude<keyof I["securityGroupIds"], "$type" | keyof string[]>, never>) | undefined;
        backupId?: string | undefined;
        serviceAccountId?: string | undefined;
        configSpec?: ({
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } & {
            version?: string | undefined;
            zookeeper?: ({
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["zookeeper"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["configSpec"]["zookeeper"], "$type" | "resources">, never>) | undefined;
            clickhouse?: ({
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                config?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["configSpec"]["clickhouse"], "$type" | "config" | "resources">, never>) | undefined;
            backupWindowStart?: ({
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & Record<Exclude<keyof I["configSpec"]["backupWindowStart"], "$type" | "seconds" | "nanos" | "hours" | "minutes">, never>) | undefined;
            access?: ({
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & Record<Exclude<keyof I["configSpec"]["access"], "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>) | undefined;
            cloudStorage?: ({
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & Record<Exclude<keyof I["configSpec"]["cloudStorage"], "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>) | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
            adminPassword?: string | undefined;
        } & Record<Exclude<keyof I["configSpec"], "$type" | "version" | "zookeeper" | "clickhouse" | "backupWindowStart" | "access" | "cloudStorage" | "sqlDatabaseManagement" | "sqlUserManagement" | "embeddedKeeper" | "adminPassword">, never>) | undefined;
        environment?: Cluster_Environment | undefined;
        hostSpecs?: ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] & ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & Record<Exclude<keyof I["hostSpecs"][number], "$type" | "type" | "subnetId" | "zoneId" | "assignPublicIp" | "shardName">, never>)[] & Record<Exclude<keyof I["hostSpecs"], "$type" | keyof {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[]>, never>) | undefined;
        additionalBackupIds?: (string[] & string[] & Record<Exclude<keyof I["additionalBackupIds"], "$type" | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "name" | "folderId" | "labels" | "networkId" | "securityGroupIds" | "backupId" | "serviceAccountId" | "configSpec" | "environment" | "hostSpecs" | "additionalBackupIds">, never>>(object: I): RestoreClusterRequest;
};
export declare const RestoreClusterRequest_LabelsEntry: {
    $type: "yandex.cloud.mdb.clickhouse.v1.RestoreClusterRequest.LabelsEntry";
    encode(message: RestoreClusterRequest_LabelsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RestoreClusterRequest_LabelsEntry;
    fromJSON(object: any): RestoreClusterRequest_LabelsEntry;
    toJSON(message: RestoreClusterRequest_LabelsEntry): unknown;
    fromPartial<I extends {
        value?: string | undefined;
        key?: string | undefined;
    } & {
        value?: string | undefined;
        key?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "value" | "key">, never>>(object: I): RestoreClusterRequest_LabelsEntry;
};
export declare const RestoreClusterMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.RestoreClusterMetadata";
    encode(message: RestoreClusterMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RestoreClusterMetadata;
    fromJSON(object: any): RestoreClusterMetadata;
    toJSON(message: RestoreClusterMetadata): unknown;
    fromPartial<I extends {
        backupId?: string | undefined;
        clusterId?: string | undefined;
    } & {
        backupId?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "backupId" | "clusterId">, never>>(object: I): RestoreClusterMetadata;
};
export declare const RescheduleMaintenanceRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.RescheduleMaintenanceRequest";
    encode(message: RescheduleMaintenanceRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RescheduleMaintenanceRequest;
    fromJSON(object: any): RescheduleMaintenanceRequest;
    toJSON(message: RescheduleMaintenanceRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        delayedUntil?: Date | undefined;
        rescheduleType?: RescheduleMaintenanceRequest_RescheduleType | undefined;
    } & {
        clusterId?: string | undefined;
        delayedUntil?: Date | undefined;
        rescheduleType?: RescheduleMaintenanceRequest_RescheduleType | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "delayedUntil" | "rescheduleType">, never>>(object: I): RescheduleMaintenanceRequest;
};
export declare const RescheduleMaintenanceMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.RescheduleMaintenanceMetadata";
    encode(message: RescheduleMaintenanceMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RescheduleMaintenanceMetadata;
    fromJSON(object: any): RescheduleMaintenanceMetadata;
    toJSON(message: RescheduleMaintenanceMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        delayedUntil?: Date | undefined;
    } & {
        clusterId?: string | undefined;
        delayedUntil?: Date | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "delayedUntil">, never>>(object: I): RescheduleMaintenanceMetadata;
};
export declare const LogRecord: {
    $type: "yandex.cloud.mdb.clickhouse.v1.LogRecord";
    encode(message: LogRecord, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): LogRecord;
    fromJSON(object: any): LogRecord;
    toJSON(message: LogRecord): unknown;
    fromPartial<I extends {
        message?: {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } | undefined;
        timestamp?: Date | undefined;
    } & {
        message?: ({
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & Record<Exclude<keyof I["message"], string | number>, never>) | undefined;
        timestamp?: Date | undefined;
    } & Record<Exclude<keyof I, "$type" | "message" | "timestamp">, never>>(object: I): LogRecord;
};
export declare const LogRecord_MessageEntry: {
    $type: "yandex.cloud.mdb.clickhouse.v1.LogRecord.MessageEntry";
    encode(message: LogRecord_MessageEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): LogRecord_MessageEntry;
    fromJSON(object: any): LogRecord_MessageEntry;
    toJSON(message: LogRecord_MessageEntry): unknown;
    fromPartial<I extends {
        value?: string | undefined;
        key?: string | undefined;
    } & {
        value?: string | undefined;
        key?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "value" | "key">, never>>(object: I): LogRecord_MessageEntry;
};
export declare const ListClusterLogsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterLogsRequest";
    encode(message: ListClusterLogsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterLogsRequest;
    fromJSON(object: any): ListClusterLogsRequest;
    toJSON(message: ListClusterLogsRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
        columnFilter?: string[] | undefined;
        serviceType?: ListClusterLogsRequest_ServiceType | undefined;
        fromTime?: Date | undefined;
        toTime?: Date | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
        columnFilter?: (string[] & string[] & Record<Exclude<keyof I["columnFilter"], "$type" | keyof string[]>, never>) | undefined;
        serviceType?: ListClusterLogsRequest_ServiceType | undefined;
        fromTime?: Date | undefined;
        toTime?: Date | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "clusterId" | "columnFilter" | "serviceType" | "fromTime" | "toTime">, never>>(object: I): ListClusterLogsRequest;
};
export declare const ListClusterLogsResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterLogsResponse";
    encode(message: ListClusterLogsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterLogsResponse;
    fromJSON(object: any): ListClusterLogsResponse;
    toJSON(message: ListClusterLogsResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        logs?: {
            message?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            timestamp?: Date | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        logs?: ({
            message?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            timestamp?: Date | undefined;
        }[] & ({
            message?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            timestamp?: Date | undefined;
        } & {
            message?: ({
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } & {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } & Record<Exclude<keyof I["logs"][number]["message"], string | number>, never>) | undefined;
            timestamp?: Date | undefined;
        } & Record<Exclude<keyof I["logs"][number], "$type" | "message" | "timestamp">, never>)[] & Record<Exclude<keyof I["logs"], "$type" | keyof {
            message?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            timestamp?: Date | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "logs">, never>>(object: I): ListClusterLogsResponse;
};
export declare const StreamLogRecord: {
    $type: "yandex.cloud.mdb.clickhouse.v1.StreamLogRecord";
    encode(message: StreamLogRecord, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StreamLogRecord;
    fromJSON(object: any): StreamLogRecord;
    toJSON(message: StreamLogRecord): unknown;
    fromPartial<I extends {
        nextRecordToken?: string | undefined;
        record?: {
            message?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            timestamp?: Date | undefined;
        } | undefined;
    } & {
        nextRecordToken?: string | undefined;
        record?: ({
            message?: {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } | undefined;
            timestamp?: Date | undefined;
        } & {
            message?: ({
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } & {
                [x: string]: string | undefined;
                [x: number]: string | undefined;
            } & Record<Exclude<keyof I["record"]["message"], string | number>, never>) | undefined;
            timestamp?: Date | undefined;
        } & Record<Exclude<keyof I["record"], "$type" | "message" | "timestamp">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextRecordToken" | "record">, never>>(object: I): StreamLogRecord;
};
export declare const StreamClusterLogsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.StreamClusterLogsRequest";
    encode(message: StreamClusterLogsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StreamClusterLogsRequest;
    fromJSON(object: any): StreamClusterLogsRequest;
    toJSON(message: StreamClusterLogsRequest): unknown;
    fromPartial<I extends {
        filter?: string | undefined;
        clusterId?: string | undefined;
        columnFilter?: string[] | undefined;
        serviceType?: StreamClusterLogsRequest_ServiceType | undefined;
        fromTime?: Date | undefined;
        toTime?: Date | undefined;
        recordToken?: string | undefined;
    } & {
        filter?: string | undefined;
        clusterId?: string | undefined;
        columnFilter?: (string[] & string[] & Record<Exclude<keyof I["columnFilter"], "$type" | keyof string[]>, never>) | undefined;
        serviceType?: StreamClusterLogsRequest_ServiceType | undefined;
        fromTime?: Date | undefined;
        toTime?: Date | undefined;
        recordToken?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "filter" | "clusterId" | "columnFilter" | "serviceType" | "fromTime" | "toTime" | "recordToken">, never>>(object: I): StreamClusterLogsRequest;
};
export declare const ListClusterOperationsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterOperationsRequest";
    encode(message: ListClusterOperationsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterOperationsRequest;
    fromJSON(object: any): ListClusterOperationsRequest;
    toJSON(message: ListClusterOperationsRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "clusterId">, never>>(object: I): ListClusterOperationsRequest;
};
export declare const ListClusterOperationsResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterOperationsResponse";
    encode(message: ListClusterOperationsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterOperationsResponse;
    fromJSON(object: any): ListClusterOperationsResponse;
    toJSON(message: ListClusterOperationsResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        operations?: {
            description?: string | undefined;
            id?: string | undefined;
            createdBy?: string | undefined;
            done?: boolean | undefined;
            createdAt?: Date | undefined;
            modifiedAt?: Date | undefined;
            metadata?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
            error?: {
                code?: number | undefined;
                message?: string | undefined;
                details?: {
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                }[] | undefined;
            } | undefined;
            response?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        operations?: ({
            description?: string | undefined;
            id?: string | undefined;
            createdBy?: string | undefined;
            done?: boolean | undefined;
            createdAt?: Date | undefined;
            modifiedAt?: Date | undefined;
            metadata?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
            error?: {
                code?: number | undefined;
                message?: string | undefined;
                details?: {
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                }[] | undefined;
            } | undefined;
            response?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
        }[] & ({
            description?: string | undefined;
            id?: string | undefined;
            createdBy?: string | undefined;
            done?: boolean | undefined;
            createdAt?: Date | undefined;
            modifiedAt?: Date | undefined;
            metadata?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
            error?: {
                code?: number | undefined;
                message?: string | undefined;
                details?: {
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                }[] | undefined;
            } | undefined;
            response?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
        } & {
            description?: string | undefined;
            id?: string | undefined;
            createdBy?: string | undefined;
            done?: boolean | undefined;
            createdAt?: Date | undefined;
            modifiedAt?: Date | undefined;
            metadata?: ({
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } & Record<Exclude<keyof I["operations"][number]["metadata"], "$type" | "typeUrl" | "value">, never>) | undefined;
            error?: ({
                code?: number | undefined;
                message?: string | undefined;
                details?: {
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                }[] | undefined;
            } & {
                code?: number | undefined;
                message?: string | undefined;
                details?: ({
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                }[] & ({
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                } & Record<Exclude<keyof I["operations"][number]["error"]["details"][number], "$type" | "typeUrl" | "value">, never>)[] & Record<Exclude<keyof I["operations"][number]["error"]["details"], "$type" | keyof {
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["operations"][number]["error"], "$type" | "code" | "message" | "details">, never>) | undefined;
            response?: ({
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } & Record<Exclude<keyof I["operations"][number]["response"], "$type" | "typeUrl" | "value">, never>) | undefined;
        } & Record<Exclude<keyof I["operations"][number], "$type" | "description" | "id" | "createdBy" | "done" | "createdAt" | "modifiedAt" | "metadata" | "error" | "response">, never>)[] & Record<Exclude<keyof I["operations"], "$type" | keyof {
            description?: string | undefined;
            id?: string | undefined;
            createdBy?: string | undefined;
            done?: boolean | undefined;
            createdAt?: Date | undefined;
            modifiedAt?: Date | undefined;
            metadata?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
            error?: {
                code?: number | undefined;
                message?: string | undefined;
                details?: {
                    typeUrl?: string | undefined;
                    value?: Buffer | undefined;
                }[] | undefined;
            } | undefined;
            response?: {
                typeUrl?: string | undefined;
                value?: Buffer | undefined;
            } | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "operations">, never>>(object: I): ListClusterOperationsResponse;
};
export declare const ListClusterBackupsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterBackupsRequest";
    encode(message: ListClusterBackupsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterBackupsRequest;
    fromJSON(object: any): ListClusterBackupsRequest;
    toJSON(message: ListClusterBackupsRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "clusterId">, never>>(object: I): ListClusterBackupsRequest;
};
export declare const ListClusterBackupsResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterBackupsResponse";
    encode(message: ListClusterBackupsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterBackupsResponse;
    fromJSON(object: any): ListClusterBackupsResponse;
    toJSON(message: ListClusterBackupsResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        backups?: {
            id?: string | undefined;
            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/backup").Backup_BackupType | undefined;
            createdAt?: Date | undefined;
            folderId?: string | undefined;
            size?: number | undefined;
            startedAt?: Date | undefined;
            sourceClusterId?: string | undefined;
            sourceShardNames?: string[] | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        backups?: ({
            id?: string | undefined;
            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/backup").Backup_BackupType | undefined;
            createdAt?: Date | undefined;
            folderId?: string | undefined;
            size?: number | undefined;
            startedAt?: Date | undefined;
            sourceClusterId?: string | undefined;
            sourceShardNames?: string[] | undefined;
        }[] & ({
            id?: string | undefined;
            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/backup").Backup_BackupType | undefined;
            createdAt?: Date | undefined;
            folderId?: string | undefined;
            size?: number | undefined;
            startedAt?: Date | undefined;
            sourceClusterId?: string | undefined;
            sourceShardNames?: string[] | undefined;
        } & {
            id?: string | undefined;
            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/backup").Backup_BackupType | undefined;
            createdAt?: Date | undefined;
            folderId?: string | undefined;
            size?: number | undefined;
            startedAt?: Date | undefined;
            sourceClusterId?: string | undefined;
            sourceShardNames?: (string[] & string[] & Record<Exclude<keyof I["backups"][number]["sourceShardNames"], "$type" | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["backups"][number], "$type" | "id" | "type" | "createdAt" | "folderId" | "size" | "startedAt" | "sourceClusterId" | "sourceShardNames">, never>)[] & Record<Exclude<keyof I["backups"], "$type" | keyof {
            id?: string | undefined;
            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/backup").Backup_BackupType | undefined;
            createdAt?: Date | undefined;
            folderId?: string | undefined;
            size?: number | undefined;
            startedAt?: Date | undefined;
            sourceClusterId?: string | undefined;
            sourceShardNames?: string[] | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "backups">, never>>(object: I): ListClusterBackupsResponse;
};
export declare const ListClusterHostsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterHostsRequest";
    encode(message: ListClusterHostsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterHostsRequest;
    fromJSON(object: any): ListClusterHostsRequest;
    toJSON(message: ListClusterHostsRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "clusterId">, never>>(object: I): ListClusterHostsRequest;
};
export declare const ListClusterHostsResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterHostsResponse";
    encode(message: ListClusterHostsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterHostsResponse;
    fromJSON(object: any): ListClusterHostsResponse;
    toJSON(message: ListClusterHostsResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        hosts?: {
            type?: Host_Type | undefined;
            name?: string | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            services?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            }[] | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Host_Health | undefined;
            clusterId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        hosts?: ({
            type?: Host_Type | undefined;
            name?: string | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            services?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            }[] | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Host_Health | undefined;
            clusterId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] & ({
            type?: Host_Type | undefined;
            name?: string | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            services?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            }[] | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Host_Health | undefined;
            clusterId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & {
            type?: Host_Type | undefined;
            name?: string | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            resources?: ({
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & Record<Exclude<keyof I["hosts"][number]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            services?: ({
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            }[] & ({
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            } & {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            } & Record<Exclude<keyof I["hosts"][number]["services"][number], "$type" | "type" | "health">, never>)[] & Record<Exclude<keyof I["hosts"][number]["services"], "$type" | keyof {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            }[]>, never>) | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Host_Health | undefined;
            clusterId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & Record<Exclude<keyof I["hosts"][number], "$type" | "type" | "name" | "subnetId" | "zoneId" | "resources" | "services" | "health" | "clusterId" | "assignPublicIp" | "shardName">, never>)[] & Record<Exclude<keyof I["hosts"], "$type" | keyof {
            type?: Host_Type | undefined;
            name?: string | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            services?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Type | undefined;
                health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Service_Health | undefined;
            }[] | undefined;
            health?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/cluster").Host_Health | undefined;
            clusterId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "hosts">, never>>(object: I): ListClusterHostsResponse;
};
export declare const AddClusterHostsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterHostsRequest";
    encode(message: AddClusterHostsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AddClusterHostsRequest;
    fromJSON(object: any): AddClusterHostsRequest;
    toJSON(message: AddClusterHostsRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        hostSpecs?: {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] | undefined;
        copySchema?: boolean | undefined;
    } & {
        clusterId?: string | undefined;
        hostSpecs?: ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] & ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & Record<Exclude<keyof I["hostSpecs"][number], "$type" | "type" | "subnetId" | "zoneId" | "assignPublicIp" | "shardName">, never>)[] & Record<Exclude<keyof I["hostSpecs"], "$type" | keyof {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[]>, never>) | undefined;
        copySchema?: boolean | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "hostSpecs" | "copySchema">, never>>(object: I): AddClusterHostsRequest;
};
export declare const AddClusterHostsMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterHostsMetadata";
    encode(message: AddClusterHostsMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AddClusterHostsMetadata;
    fromJSON(object: any): AddClusterHostsMetadata;
    toJSON(message: AddClusterHostsMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        hostNames?: string[] | undefined;
    } & {
        clusterId?: string | undefined;
        hostNames?: (string[] & string[] & Record<Exclude<keyof I["hostNames"], "$type" | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "hostNames">, never>>(object: I): AddClusterHostsMetadata;
};
export declare const UpdateHostSpec: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateHostSpec";
    encode(message: UpdateHostSpec, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateHostSpec;
    fromJSON(object: any): UpdateHostSpec;
    toJSON(message: UpdateHostSpec): unknown;
    fromPartial<I extends {
        updateMask?: {
            paths?: string[] | undefined;
        } | undefined;
        assignPublicIp?: boolean | undefined;
        hostName?: string | undefined;
    } & {
        updateMask?: ({
            paths?: string[] | undefined;
        } & {
            paths?: (string[] & string[] & Record<Exclude<keyof I["updateMask"]["paths"], "$type" | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["updateMask"], "$type" | "paths">, never>) | undefined;
        assignPublicIp?: boolean | undefined;
        hostName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "updateMask" | "assignPublicIp" | "hostName">, never>>(object: I): UpdateHostSpec;
};
export declare const UpdateClusterHostsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterHostsRequest";
    encode(message: UpdateClusterHostsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterHostsRequest;
    fromJSON(object: any): UpdateClusterHostsRequest;
    toJSON(message: UpdateClusterHostsRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        updateHostSpecs?: {
            updateMask?: {
                paths?: string[] | undefined;
            } | undefined;
            assignPublicIp?: boolean | undefined;
            hostName?: string | undefined;
        }[] | undefined;
    } & {
        clusterId?: string | undefined;
        updateHostSpecs?: ({
            updateMask?: {
                paths?: string[] | undefined;
            } | undefined;
            assignPublicIp?: boolean | undefined;
            hostName?: string | undefined;
        }[] & ({
            updateMask?: {
                paths?: string[] | undefined;
            } | undefined;
            assignPublicIp?: boolean | undefined;
            hostName?: string | undefined;
        } & {
            updateMask?: ({
                paths?: string[] | undefined;
            } & {
                paths?: (string[] & string[] & Record<Exclude<keyof I["updateHostSpecs"][number]["updateMask"]["paths"], "$type" | keyof string[]>, never>) | undefined;
            } & Record<Exclude<keyof I["updateHostSpecs"][number]["updateMask"], "$type" | "paths">, never>) | undefined;
            assignPublicIp?: boolean | undefined;
            hostName?: string | undefined;
        } & Record<Exclude<keyof I["updateHostSpecs"][number], "$type" | "updateMask" | "assignPublicIp" | "hostName">, never>)[] & Record<Exclude<keyof I["updateHostSpecs"], "$type" | keyof {
            updateMask?: {
                paths?: string[] | undefined;
            } | undefined;
            assignPublicIp?: boolean | undefined;
            hostName?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "updateHostSpecs">, never>>(object: I): UpdateClusterHostsRequest;
};
export declare const UpdateClusterHostsMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterHostsMetadata";
    encode(message: UpdateClusterHostsMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterHostsMetadata;
    fromJSON(object: any): UpdateClusterHostsMetadata;
    toJSON(message: UpdateClusterHostsMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        hostNames?: string[] | undefined;
    } & {
        clusterId?: string | undefined;
        hostNames?: (string[] & string[] & Record<Exclude<keyof I["hostNames"], "$type" | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "hostNames">, never>>(object: I): UpdateClusterHostsMetadata;
};
export declare const DeleteClusterHostsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterHostsRequest";
    encode(message: DeleteClusterHostsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterHostsRequest;
    fromJSON(object: any): DeleteClusterHostsRequest;
    toJSON(message: DeleteClusterHostsRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        hostNames?: string[] | undefined;
    } & {
        clusterId?: string | undefined;
        hostNames?: (string[] & string[] & Record<Exclude<keyof I["hostNames"], "$type" | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "hostNames">, never>>(object: I): DeleteClusterHostsRequest;
};
export declare const DeleteClusterHostsMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterHostsMetadata";
    encode(message: DeleteClusterHostsMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterHostsMetadata;
    fromJSON(object: any): DeleteClusterHostsMetadata;
    toJSON(message: DeleteClusterHostsMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        hostNames?: string[] | undefined;
    } & {
        clusterId?: string | undefined;
        hostNames?: (string[] & string[] & Record<Exclude<keyof I["hostNames"], "$type" | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "hostNames">, never>>(object: I): DeleteClusterHostsMetadata;
};
export declare const GetClusterShardRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.GetClusterShardRequest";
    encode(message: GetClusterShardRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetClusterShardRequest;
    fromJSON(object: any): GetClusterShardRequest;
    toJSON(message: GetClusterShardRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardName">, never>>(object: I): GetClusterShardRequest;
};
export declare const ListClusterShardsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardsRequest";
    encode(message: ListClusterShardsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterShardsRequest;
    fromJSON(object: any): ListClusterShardsRequest;
    toJSON(message: ListClusterShardsRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "clusterId">, never>>(object: I): ListClusterShardsRequest;
};
export declare const ListClusterShardsResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardsResponse";
    encode(message: ListClusterShardsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterShardsResponse;
    fromJSON(object: any): ListClusterShardsResponse;
    toJSON(message: ListClusterShardsResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        shards?: {
            name?: string | undefined;
            config?: {
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                    weight?: number | undefined;
                } | undefined;
            } | undefined;
            clusterId?: string | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        shards?: ({
            name?: string | undefined;
            config?: {
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                    weight?: number | undefined;
                } | undefined;
            } | undefined;
            clusterId?: string | undefined;
        }[] & ({
            name?: string | undefined;
            config?: {
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                    weight?: number | undefined;
                } | undefined;
            } | undefined;
            clusterId?: string | undefined;
        } & {
            name?: string | undefined;
            config?: ({
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                    weight?: number | undefined;
                } | undefined;
            } & {
                clickhouse?: ({
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                    weight?: number | undefined;
                } & {
                    config?: ({
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } & {
                        effectiveConfig?: ({
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & {
                            compression?: ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] & ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[]>, never>) | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: ({
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                            dictionaries?: ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                mysqlSource?: ({
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] & ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[]>, never>) | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                                clickhouseSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                                structure?: ({
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } & {
                                    id?: ({
                                        name?: string | undefined;
                                    } & {
                                        name?: string | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                    key?: ({
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } & {
                                        attributes?: ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] & ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                    rangeMin?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                    rangeMax?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                                layout?: ({
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: ({
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                                httpSource?: ({
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                                mongodbSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                                postgresqlSource?: ({
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & {
                                    port?: number | undefined;
                                    hosts?: (string[] & string[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            graphiteRollup?: ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] & ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            } & {
                                name?: string | undefined;
                                patterns?: ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] & ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                } & {
                                    function?: string | undefined;
                                    retention?: ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] & ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[]>, never>) | undefined;
                                    regexp?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[]>, never>) | undefined;
                            kafka?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            kafkaTopics?: ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                settings?: ({
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            rabbitmq?: ({
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                        userConfig?: ({
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & {
                            compression?: ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] & ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["compression"], "$type" | keyof {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[]>, never>) | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: ({
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                            dictionaries?: ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                mysqlSource?: ({
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] & ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[]>, never>) | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                                clickhouseSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                                structure?: ({
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } & {
                                    id?: ({
                                        name?: string | undefined;
                                    } & {
                                        name?: string | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                    key?: ({
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } & {
                                        attributes?: ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] & ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                    rangeMin?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                    rangeMax?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                                layout?: ({
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: ({
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                                httpSource?: ({
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                                mongodbSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                                postgresqlSource?: ({
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & {
                                    port?: number | undefined;
                                    hosts?: (string[] & string[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            graphiteRollup?: ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] & ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            } & {
                                name?: string | undefined;
                                patterns?: ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] & ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                } & {
                                    function?: string | undefined;
                                    retention?: ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] & ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[]>, never>) | undefined;
                                    regexp?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[]>, never>) | undefined;
                            kafka?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            kafkaTopics?: ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                settings?: ({
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            rabbitmq?: ({
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                        defaultConfig?: ({
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & {
                            compression?: ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] & ({
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["compression"], "$type" | keyof {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[]>, never>) | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: ({
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                            dictionaries?: ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                mysqlSource?: ({
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] & ({
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[]>, never>) | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                                clickhouseSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                                structure?: ({
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } & {
                                    id?: ({
                                        name?: string | undefined;
                                    } & {
                                        name?: string | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                    key?: ({
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } & {
                                        attributes?: ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] & ({
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[]>, never>) | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                    rangeMin?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                    rangeMax?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                                layout?: ({
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: ({
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                                httpSource?: ({
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                                mongodbSource?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                                postgresqlSource?: ({
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & {
                                    port?: number | undefined;
                                    hosts?: (string[] & string[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            graphiteRollup?: ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] & ({
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            } & {
                                name?: string | undefined;
                                patterns?: ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] & ({
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                } & {
                                    function?: string | undefined;
                                    retention?: ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] & ({
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[]>, never>) | undefined;
                                    regexp?: string | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[]>, never>) | undefined;
                            kafka?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            kafkaTopics?: ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] & ({
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            } & {
                                name?: string | undefined;
                                settings?: ({
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[]>, never>) | undefined;
                            rabbitmq?: ({
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
                    resources?: ({
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } & {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
                    weight?: number | undefined;
                } & Record<Exclude<keyof I["shards"][number]["config"]["clickhouse"], "$type" | "config" | "resources" | "weight">, never>) | undefined;
            } & Record<Exclude<keyof I["shards"][number]["config"], "$type" | "clickhouse">, never>) | undefined;
            clusterId?: string | undefined;
        } & Record<Exclude<keyof I["shards"][number], "$type" | "name" | "config" | "clusterId">, never>)[] & Record<Exclude<keyof I["shards"], "$type" | keyof {
            name?: string | undefined;
            config?: {
                clickhouse?: {
                    config?: {
                        effectiveConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        userConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                        defaultConfig?: {
                            compression?: {
                                level?: number | undefined;
                                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                                minPartSize?: number | undefined;
                                minPartSizeRatio?: number | undefined;
                            }[] | undefined;
                            timezone?: string | undefined;
                            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            geobaseUri?: string | undefined;
                            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                            mergeTree?: {
                                replicatedDeduplicationWindow?: number | undefined;
                                replicatedDeduplicationWindowSeconds?: number | undefined;
                                partsToDelayInsert?: number | undefined;
                                partsToThrowInsert?: number | undefined;
                                inactivePartsToDelayInsert?: number | undefined;
                                inactivePartsToThrowInsert?: number | undefined;
                                maxReplicatedMergesInQueue?: number | undefined;
                                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                                minBytesForWidePart?: number | undefined;
                                minRowsForWidePart?: number | undefined;
                                ttlOnlyDropParts?: boolean | undefined;
                                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                                mergeWithTtlTimeout?: number | undefined;
                                mergeWithRecompressionTtlTimeout?: number | undefined;
                                maxPartsInTotal?: number | undefined;
                                maxNumberOfMergesWithTtlInPool?: number | undefined;
                                cleanupDelayPeriod?: number | undefined;
                                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                                maxAvgPartSizeForTooManyParts?: number | undefined;
                                minAgeToForceMergeSeconds?: number | undefined;
                                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                                mergeSelectingSleepMs?: number | undefined;
                            } | undefined;
                            dictionaries?: {
                                name?: string | undefined;
                                mysqlSource?: {
                                    port?: number | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    replicas?: {
                                        port?: number | undefined;
                                        host?: string | undefined;
                                        user?: string | undefined;
                                        password?: string | undefined;
                                        priority?: number | undefined;
                                    }[] | undefined;
                                    where?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                } | undefined;
                                clickhouseSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    where?: string | undefined;
                                } | undefined;
                                structure?: {
                                    id?: {
                                        name?: string | undefined;
                                    } | undefined;
                                    key?: {
                                        attributes?: {
                                            type?: string | undefined;
                                            name?: string | undefined;
                                            expression?: string | undefined;
                                            nullValue?: string | undefined;
                                            hierarchical?: boolean | undefined;
                                            injective?: boolean | undefined;
                                        }[] | undefined;
                                    } | undefined;
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                    rangeMin?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                    rangeMax?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } | undefined;
                                } | undefined;
                                layout?: {
                                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                    sizeInCells?: number | undefined;
                                } | undefined;
                                fixedLifetime?: number | undefined;
                                lifetimeRange?: {
                                    min?: number | undefined;
                                    max?: number | undefined;
                                } | undefined;
                                httpSource?: {
                                    format?: string | undefined;
                                    url?: string | undefined;
                                } | undefined;
                                mongodbSource?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    options?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    db?: string | undefined;
                                    collection?: string | undefined;
                                } | undefined;
                                postgresqlSource?: {
                                    port?: number | undefined;
                                    hosts?: string[] | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    table?: string | undefined;
                                    db?: string | undefined;
                                    invalidateQuery?: string | undefined;
                                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                                } | undefined;
                            }[] | undefined;
                            graphiteRollup?: {
                                name?: string | undefined;
                                patterns?: {
                                    function?: string | undefined;
                                    retention?: {
                                        age?: number | undefined;
                                        precision?: number | undefined;
                                    }[] | undefined;
                                    regexp?: string | undefined;
                                }[] | undefined;
                            }[] | undefined;
                            kafka?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                            kafkaTopics?: {
                                name?: string | undefined;
                                settings?: {
                                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                    saslUsername?: string | undefined;
                                    saslPassword?: string | undefined;
                                    enableSslCertificateVerification?: boolean | undefined;
                                    maxPollIntervalMs?: number | undefined;
                                    sessionTimeoutMs?: number | undefined;
                                } | undefined;
                            }[] | undefined;
                            rabbitmq?: {
                                password?: string | undefined;
                                username?: string | undefined;
                                vhost?: string | undefined;
                            } | undefined;
                            maxConnections?: number | undefined;
                            maxConcurrentQueries?: number | undefined;
                            keepAliveTimeout?: number | undefined;
                            uncompressedCacheSize?: number | undefined;
                            markCacheSize?: number | undefined;
                            maxTableSizeToDrop?: number | undefined;
                            maxPartitionSizeToDrop?: number | undefined;
                            builtinDictionariesReloadInterval?: number | undefined;
                            queryLogRetentionSize?: number | undefined;
                            queryLogRetentionTime?: number | undefined;
                            queryThreadLogEnabled?: boolean | undefined;
                            queryThreadLogRetentionSize?: number | undefined;
                            queryThreadLogRetentionTime?: number | undefined;
                            partLogRetentionSize?: number | undefined;
                            partLogRetentionTime?: number | undefined;
                            metricLogEnabled?: boolean | undefined;
                            metricLogRetentionSize?: number | undefined;
                            metricLogRetentionTime?: number | undefined;
                            traceLogEnabled?: boolean | undefined;
                            traceLogRetentionSize?: number | undefined;
                            traceLogRetentionTime?: number | undefined;
                            textLogEnabled?: boolean | undefined;
                            textLogRetentionSize?: number | undefined;
                            textLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogEnabled?: boolean | undefined;
                            backgroundPoolSize?: number | undefined;
                            backgroundSchedulePoolSize?: number | undefined;
                            backgroundFetchesPoolSize?: number | undefined;
                            backgroundMovePoolSize?: number | undefined;
                            backgroundDistributedSchedulePoolSize?: number | undefined;
                            backgroundBufferFlushSchedulePoolSize?: number | undefined;
                            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                            defaultDatabase?: string | undefined;
                            totalMemoryProfilerStep?: number | undefined;
                            totalMemoryTrackerSampleProbability?: number | undefined;
                            backgroundCommonPoolSize?: number | undefined;
                            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                            queryViewsLogEnabled?: boolean | undefined;
                            queryViewsLogRetentionSize?: number | undefined;
                            queryViewsLogRetentionTime?: number | undefined;
                            asynchronousMetricLogEnabled?: boolean | undefined;
                            asynchronousMetricLogRetentionSize?: number | undefined;
                            asynchronousMetricLogRetentionTime?: number | undefined;
                            opentelemetrySpanLogRetentionSize?: number | undefined;
                            opentelemetrySpanLogRetentionTime?: number | undefined;
                            sessionLogEnabled?: boolean | undefined;
                            sessionLogRetentionSize?: number | undefined;
                            sessionLogRetentionTime?: number | undefined;
                            zookeeperLogEnabled?: boolean | undefined;
                            zookeeperLogRetentionSize?: number | undefined;
                            zookeeperLogRetentionTime?: number | undefined;
                            asynchronousInsertLogEnabled?: boolean | undefined;
                            asynchronousInsertLogRetentionSize?: number | undefined;
                            asynchronousInsertLogRetentionTime?: number | undefined;
                            geobaseEnabled?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    resources?: {
                        diskTypeId?: string | undefined;
                        diskSize?: number | undefined;
                        resourcePresetId?: string | undefined;
                    } | undefined;
                    weight?: number | undefined;
                } | undefined;
            } | undefined;
            clusterId?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "shards">, never>>(object: I): ListClusterShardsResponse;
};
export declare const AddClusterShardRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterShardRequest";
    encode(message: AddClusterShardRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AddClusterShardRequest;
    fromJSON(object: any): AddClusterShardRequest;
    toJSON(message: AddClusterShardRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        configSpec?: {
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } | undefined;
        } | undefined;
        shardName?: string | undefined;
        hostSpecs?: {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] | undefined;
        copySchema?: boolean | undefined;
    } & {
        clusterId?: string | undefined;
        configSpec?: ({
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } | undefined;
        } & {
            clickhouse?: ({
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } & {
                config?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
                weight?: number | undefined;
            } & Record<Exclude<keyof I["configSpec"]["clickhouse"], "$type" | "config" | "resources" | "weight">, never>) | undefined;
        } & Record<Exclude<keyof I["configSpec"], "$type" | "clickhouse">, never>) | undefined;
        shardName?: string | undefined;
        hostSpecs?: ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[] & ({
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        } & Record<Exclude<keyof I["hostSpecs"][number], "$type" | "type" | "subnetId" | "zoneId" | "assignPublicIp" | "shardName">, never>)[] & Record<Exclude<keyof I["hostSpecs"], "$type" | keyof {
            type?: Host_Type | undefined;
            subnetId?: string | undefined;
            zoneId?: string | undefined;
            assignPublicIp?: boolean | undefined;
            shardName?: string | undefined;
        }[]>, never>) | undefined;
        copySchema?: boolean | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "configSpec" | "shardName" | "hostSpecs" | "copySchema">, never>>(object: I): AddClusterShardRequest;
};
export declare const AddClusterShardMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.AddClusterShardMetadata";
    encode(message: AddClusterShardMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AddClusterShardMetadata;
    fromJSON(object: any): AddClusterShardMetadata;
    toJSON(message: AddClusterShardMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardName">, never>>(object: I): AddClusterShardMetadata;
};
export declare const UpdateClusterShardRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardRequest";
    encode(message: UpdateClusterShardRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterShardRequest;
    fromJSON(object: any): UpdateClusterShardRequest;
    toJSON(message: UpdateClusterShardRequest): unknown;
    fromPartial<I extends {
        updateMask?: {
            paths?: string[] | undefined;
        } | undefined;
        clusterId?: string | undefined;
        configSpec?: {
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } | undefined;
        } | undefined;
        shardName?: string | undefined;
    } & {
        updateMask?: ({
            paths?: string[] | undefined;
        } & {
            paths?: (string[] & string[] & Record<Exclude<keyof I["updateMask"]["paths"], "$type" | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["updateMask"], "$type" | "paths">, never>) | undefined;
        clusterId?: string | undefined;
        configSpec?: ({
            clickhouse?: {
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } | undefined;
        } & {
            clickhouse?: ({
                config?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } & {
                config?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["configSpec"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
                weight?: number | undefined;
            } & Record<Exclude<keyof I["configSpec"]["clickhouse"], "$type" | "config" | "resources" | "weight">, never>) | undefined;
        } & Record<Exclude<keyof I["configSpec"], "$type" | "clickhouse">, never>) | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "updateMask" | "clusterId" | "configSpec" | "shardName">, never>>(object: I): UpdateClusterShardRequest;
};
export declare const UpdateClusterShardMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardMetadata";
    encode(message: UpdateClusterShardMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterShardMetadata;
    fromJSON(object: any): UpdateClusterShardMetadata;
    toJSON(message: UpdateClusterShardMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardName">, never>>(object: I): UpdateClusterShardMetadata;
};
export declare const DeleteClusterShardRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardRequest";
    encode(message: DeleteClusterShardRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterShardRequest;
    fromJSON(object: any): DeleteClusterShardRequest;
    toJSON(message: DeleteClusterShardRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardName">, never>>(object: I): DeleteClusterShardRequest;
};
export declare const DeleteClusterShardMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardMetadata";
    encode(message: DeleteClusterShardMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterShardMetadata;
    fromJSON(object: any): DeleteClusterShardMetadata;
    toJSON(message: DeleteClusterShardMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardName">, never>>(object: I): DeleteClusterShardMetadata;
};
export declare const GetClusterShardGroupRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.GetClusterShardGroupRequest";
    encode(message: GetClusterShardGroupRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetClusterShardGroupRequest;
    fromJSON(object: any): GetClusterShardGroupRequest;
    toJSON(message: GetClusterShardGroupRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardGroupName">, never>>(object: I): GetClusterShardGroupRequest;
};
export declare const ListClusterShardGroupsRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardGroupsRequest";
    encode(message: ListClusterShardGroupsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterShardGroupsRequest;
    fromJSON(object: any): ListClusterShardGroupsRequest;
    toJSON(message: ListClusterShardGroupsRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "clusterId">, never>>(object: I): ListClusterShardGroupsRequest;
};
export declare const ListClusterShardGroupsResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterShardGroupsResponse";
    encode(message: ListClusterShardGroupsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterShardGroupsResponse;
    fromJSON(object: any): ListClusterShardGroupsResponse;
    toJSON(message: ListClusterShardGroupsResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        shardGroups?: {
            description?: string | undefined;
            name?: string | undefined;
            clusterId?: string | undefined;
            shardNames?: string[] | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        shardGroups?: ({
            description?: string | undefined;
            name?: string | undefined;
            clusterId?: string | undefined;
            shardNames?: string[] | undefined;
        }[] & ({
            description?: string | undefined;
            name?: string | undefined;
            clusterId?: string | undefined;
            shardNames?: string[] | undefined;
        } & {
            description?: string | undefined;
            name?: string | undefined;
            clusterId?: string | undefined;
            shardNames?: (string[] & string[] & Record<Exclude<keyof I["shardGroups"][number]["shardNames"], "$type" | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["shardGroups"][number], "$type" | "description" | "name" | "clusterId" | "shardNames">, never>)[] & Record<Exclude<keyof I["shardGroups"], "$type" | keyof {
            description?: string | undefined;
            name?: string | undefined;
            clusterId?: string | undefined;
            shardNames?: string[] | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "shardGroups">, never>>(object: I): ListClusterShardGroupsResponse;
};
export declare const CreateClusterShardGroupRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterShardGroupRequest";
    encode(message: CreateClusterShardGroupRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateClusterShardGroupRequest;
    fromJSON(object: any): CreateClusterShardGroupRequest;
    toJSON(message: CreateClusterShardGroupRequest): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        clusterId?: string | undefined;
        shardNames?: string[] | undefined;
        shardGroupName?: string | undefined;
    } & {
        description?: string | undefined;
        clusterId?: string | undefined;
        shardNames?: (string[] & string[] & Record<Exclude<keyof I["shardNames"], "$type" | keyof string[]>, never>) | undefined;
        shardGroupName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "clusterId" | "shardNames" | "shardGroupName">, never>>(object: I): CreateClusterShardGroupRequest;
};
export declare const CreateClusterShardGroupMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterShardGroupMetadata";
    encode(message: CreateClusterShardGroupMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateClusterShardGroupMetadata;
    fromJSON(object: any): CreateClusterShardGroupMetadata;
    toJSON(message: CreateClusterShardGroupMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardGroupName">, never>>(object: I): CreateClusterShardGroupMetadata;
};
export declare const UpdateClusterShardGroupRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardGroupRequest";
    encode(message: UpdateClusterShardGroupRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterShardGroupRequest;
    fromJSON(object: any): UpdateClusterShardGroupRequest;
    toJSON(message: UpdateClusterShardGroupRequest): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        updateMask?: {
            paths?: string[] | undefined;
        } | undefined;
        clusterId?: string | undefined;
        shardNames?: string[] | undefined;
        shardGroupName?: string | undefined;
    } & {
        description?: string | undefined;
        updateMask?: ({
            paths?: string[] | undefined;
        } & {
            paths?: (string[] & string[] & Record<Exclude<keyof I["updateMask"]["paths"], "$type" | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["updateMask"], "$type" | "paths">, never>) | undefined;
        clusterId?: string | undefined;
        shardNames?: (string[] & string[] & Record<Exclude<keyof I["shardNames"], "$type" | keyof string[]>, never>) | undefined;
        shardGroupName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "updateMask" | "clusterId" | "shardNames" | "shardGroupName">, never>>(object: I): UpdateClusterShardGroupRequest;
};
export declare const UpdateClusterShardGroupMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterShardGroupMetadata";
    encode(message: UpdateClusterShardGroupMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterShardGroupMetadata;
    fromJSON(object: any): UpdateClusterShardGroupMetadata;
    toJSON(message: UpdateClusterShardGroupMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardGroupName">, never>>(object: I): UpdateClusterShardGroupMetadata;
};
export declare const DeleteClusterShardGroupRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardGroupRequest";
    encode(message: DeleteClusterShardGroupRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterShardGroupRequest;
    fromJSON(object: any): DeleteClusterShardGroupRequest;
    toJSON(message: DeleteClusterShardGroupRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardGroupName">, never>>(object: I): DeleteClusterShardGroupRequest;
};
export declare const DeleteClusterShardGroupMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterShardGroupMetadata";
    encode(message: DeleteClusterShardGroupMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterShardGroupMetadata;
    fromJSON(object: any): DeleteClusterShardGroupMetadata;
    toJSON(message: DeleteClusterShardGroupMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        shardGroupName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "shardGroupName">, never>>(object: I): DeleteClusterShardGroupMetadata;
};
export declare const ListClusterExternalDictionariesRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterExternalDictionariesRequest";
    encode(message: ListClusterExternalDictionariesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterExternalDictionariesRequest;
    fromJSON(object: any): ListClusterExternalDictionariesRequest;
    toJSON(message: ListClusterExternalDictionariesRequest): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & {
        pageSize?: number | undefined;
        pageToken?: string | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "pageSize" | "pageToken" | "clusterId">, never>>(object: I): ListClusterExternalDictionariesRequest;
};
export declare const ListClusterExternalDictionariesResponse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ListClusterExternalDictionariesResponse";
    encode(message: ListClusterExternalDictionariesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListClusterExternalDictionariesResponse;
    fromJSON(object: any): ListClusterExternalDictionariesResponse;
    toJSON(message: ListClusterExternalDictionariesResponse): unknown;
    fromPartial<I extends {
        nextPageToken?: string | undefined;
        externalDictionaries?: {
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        nextPageToken?: string | undefined;
        externalDictionaries?: ({
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        }[] & ({
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        } & {
            name?: string | undefined;
            mysqlSource?: ({
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } & {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] & ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                } & {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                } & Record<Exclude<keyof I["externalDictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["externalDictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[]>, never>) | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
            clickhouseSource?: ({
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } & {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
            structure?: ({
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } & {
                id?: ({
                    name?: string | undefined;
                } & {
                    name?: string | undefined;
                } & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                key?: ({
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } & {
                    attributes?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] & ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                attributes?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] & ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[]>, never>) | undefined;
                rangeMin?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                rangeMax?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
            layout?: ({
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } & {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: ({
                min?: number | undefined;
                max?: number | undefined;
            } & {
                min?: number | undefined;
                max?: number | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
            httpSource?: ({
                format?: string | undefined;
                url?: string | undefined;
            } & {
                format?: string | undefined;
                url?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
            mongodbSource?: ({
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } & {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
            postgresqlSource?: ({
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } & {
                port?: number | undefined;
                hosts?: (string[] & string[] & Record<Exclude<keyof I["externalDictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } & Record<Exclude<keyof I["externalDictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
        } & Record<Exclude<keyof I["externalDictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["externalDictionaries"], "$type" | keyof {
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "nextPageToken" | "externalDictionaries">, never>>(object: I): ListClusterExternalDictionariesResponse;
};
export declare const CreateClusterExternalDictionaryRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterExternalDictionaryRequest";
    encode(message: CreateClusterExternalDictionaryRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateClusterExternalDictionaryRequest;
    fromJSON(object: any): CreateClusterExternalDictionaryRequest;
    toJSON(message: CreateClusterExternalDictionaryRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        externalDictionary?: {
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        } | undefined;
    } & {
        clusterId?: string | undefined;
        externalDictionary?: ({
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        } & {
            name?: string | undefined;
            mysqlSource?: ({
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } & {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] & ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                } & {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["externalDictionary"]["mysqlSource"]["replicas"], "$type" | keyof {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[]>, never>) | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
            clickhouseSource?: ({
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } & {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
            structure?: ({
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } & {
                id?: ({
                    name?: string | undefined;
                } & {
                    name?: string | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["id"], "$type" | "name">, never>) | undefined;
                key?: ({
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } & {
                    attributes?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] & ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["externalDictionary"]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["externalDictionary"]["structure"]["key"]["attributes"], "$type" | keyof {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                attributes?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] & ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["externalDictionary"]["structure"]["attributes"], "$type" | keyof {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[]>, never>) | undefined;
                rangeMin?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                rangeMax?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
            layout?: ({
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } & {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: ({
                min?: number | undefined;
                max?: number | undefined;
            } & {
                min?: number | undefined;
                max?: number | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
            httpSource?: ({
                format?: string | undefined;
                url?: string | undefined;
            } & {
                format?: string | undefined;
                url?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
            mongodbSource?: ({
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } & {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
            postgresqlSource?: ({
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } & {
                port?: number | undefined;
                hosts?: (string[] & string[] & Record<Exclude<keyof I["externalDictionary"]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
        } & Record<Exclude<keyof I["externalDictionary"], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "externalDictionary">, never>>(object: I): CreateClusterExternalDictionaryRequest;
};
export declare const CreateClusterExternalDictionaryMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CreateClusterExternalDictionaryMetadata";
    encode(message: CreateClusterExternalDictionaryMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CreateClusterExternalDictionaryMetadata;
    fromJSON(object: any): CreateClusterExternalDictionaryMetadata;
    toJSON(message: CreateClusterExternalDictionaryMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): CreateClusterExternalDictionaryMetadata;
};
export declare const UpdateClusterExternalDictionaryRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterExternalDictionaryRequest";
    encode(message: UpdateClusterExternalDictionaryRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterExternalDictionaryRequest;
    fromJSON(object: any): UpdateClusterExternalDictionaryRequest;
    toJSON(message: UpdateClusterExternalDictionaryRequest): unknown;
    fromPartial<I extends {
        updateMask?: {
            paths?: string[] | undefined;
        } | undefined;
        clusterId?: string | undefined;
        externalDictionary?: {
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        } | undefined;
    } & {
        updateMask?: ({
            paths?: string[] | undefined;
        } & {
            paths?: (string[] & string[] & Record<Exclude<keyof I["updateMask"]["paths"], "$type" | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["updateMask"], "$type" | "paths">, never>) | undefined;
        clusterId?: string | undefined;
        externalDictionary?: ({
            name?: string | undefined;
            mysqlSource?: {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } | undefined;
            clickhouseSource?: {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } | undefined;
            structure?: {
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } | undefined;
            layout?: {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: {
                min?: number | undefined;
                max?: number | undefined;
            } | undefined;
            httpSource?: {
                format?: string | undefined;
                url?: string | undefined;
            } | undefined;
            mongodbSource?: {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } | undefined;
            postgresqlSource?: {
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } | undefined;
        } & {
            name?: string | undefined;
            mysqlSource?: ({
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } & {
                port?: number | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                replicas?: ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[] & ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                } & {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["externalDictionary"]["mysqlSource"]["replicas"], "$type" | keyof {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    priority?: number | undefined;
                }[]>, never>) | undefined;
                where?: string | undefined;
                invalidateQuery?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
            clickhouseSource?: ({
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } & {
                port?: number | undefined;
                host?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                where?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
            structure?: ({
                id?: {
                    name?: string | undefined;
                } | undefined;
                key?: {
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                attributes?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] | undefined;
                rangeMin?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
                rangeMax?: {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } | undefined;
            } & {
                id?: ({
                    name?: string | undefined;
                } & {
                    name?: string | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["id"], "$type" | "name">, never>) | undefined;
                key?: ({
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                } & {
                    attributes?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] & ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["externalDictionary"]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["externalDictionary"]["structure"]["key"]["attributes"], "$type" | keyof {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                attributes?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[] & ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["externalDictionary"]["structure"]["attributes"], "$type" | keyof {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                }[]>, never>) | undefined;
                rangeMin?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                rangeMax?: ({
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & {
                    type?: string | undefined;
                    name?: string | undefined;
                    expression?: string | undefined;
                    nullValue?: string | undefined;
                    hierarchical?: boolean | undefined;
                    injective?: boolean | undefined;
                } & Record<Exclude<keyof I["externalDictionary"]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
            layout?: ({
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } & {
                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                sizeInCells?: number | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
            fixedLifetime?: number | undefined;
            lifetimeRange?: ({
                min?: number | undefined;
                max?: number | undefined;
            } & {
                min?: number | undefined;
                max?: number | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
            httpSource?: ({
                format?: string | undefined;
                url?: string | undefined;
            } & {
                format?: string | undefined;
                url?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
            mongodbSource?: ({
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } & {
                port?: number | undefined;
                host?: string | undefined;
                options?: string | undefined;
                user?: string | undefined;
                password?: string | undefined;
                db?: string | undefined;
                collection?: string | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
            postgresqlSource?: ({
                port?: number | undefined;
                hosts?: string[] | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } & {
                port?: number | undefined;
                hosts?: (string[] & string[] & Record<Exclude<keyof I["externalDictionary"]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                user?: string | undefined;
                password?: string | undefined;
                table?: string | undefined;
                db?: string | undefined;
                invalidateQuery?: string | undefined;
                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
            } & Record<Exclude<keyof I["externalDictionary"]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
        } & Record<Exclude<keyof I["externalDictionary"], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "updateMask" | "clusterId" | "externalDictionary">, never>>(object: I): UpdateClusterExternalDictionaryRequest;
};
export declare const UpdateClusterExternalDictionaryMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.UpdateClusterExternalDictionaryMetadata";
    encode(message: UpdateClusterExternalDictionaryMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateClusterExternalDictionaryMetadata;
    fromJSON(object: any): UpdateClusterExternalDictionaryMetadata;
    toJSON(message: UpdateClusterExternalDictionaryMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        externalDictionaryName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        externalDictionaryName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "externalDictionaryName">, never>>(object: I): UpdateClusterExternalDictionaryMetadata;
};
export declare const DeleteClusterExternalDictionaryRequest: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterExternalDictionaryRequest";
    encode(message: DeleteClusterExternalDictionaryRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterExternalDictionaryRequest;
    fromJSON(object: any): DeleteClusterExternalDictionaryRequest;
    toJSON(message: DeleteClusterExternalDictionaryRequest): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
        externalDictionaryName?: string | undefined;
    } & {
        clusterId?: string | undefined;
        externalDictionaryName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId" | "externalDictionaryName">, never>>(object: I): DeleteClusterExternalDictionaryRequest;
};
export declare const DeleteClusterExternalDictionaryMetadata: {
    $type: "yandex.cloud.mdb.clickhouse.v1.DeleteClusterExternalDictionaryMetadata";
    encode(message: DeleteClusterExternalDictionaryMetadata, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): DeleteClusterExternalDictionaryMetadata;
    fromJSON(object: any): DeleteClusterExternalDictionaryMetadata;
    toJSON(message: DeleteClusterExternalDictionaryMetadata): unknown;
    fromPartial<I extends {
        clusterId?: string | undefined;
    } & {
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "clusterId">, never>>(object: I): DeleteClusterExternalDictionaryMetadata;
};
export declare const HostSpec: {
    $type: "yandex.cloud.mdb.clickhouse.v1.HostSpec";
    encode(message: HostSpec, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): HostSpec;
    fromJSON(object: any): HostSpec;
    toJSON(message: HostSpec): unknown;
    fromPartial<I extends {
        type?: Host_Type | undefined;
        subnetId?: string | undefined;
        zoneId?: string | undefined;
        assignPublicIp?: boolean | undefined;
        shardName?: string | undefined;
    } & {
        type?: Host_Type | undefined;
        subnetId?: string | undefined;
        zoneId?: string | undefined;
        assignPublicIp?: boolean | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "type" | "subnetId" | "zoneId" | "assignPublicIp" | "shardName">, never>>(object: I): HostSpec;
};
export declare const ConfigSpec: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ConfigSpec";
    encode(message: ConfigSpec, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ConfigSpec;
    fromJSON(object: any): ConfigSpec;
    toJSON(message: ConfigSpec): unknown;
    fromPartial<I extends {
        version?: string | undefined;
        zookeeper?: {
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } | undefined;
        clickhouse?: {
            config?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } | undefined;
        backupWindowStart?: {
            seconds?: number | undefined;
            nanos?: number | undefined;
            hours?: number | undefined;
            minutes?: number | undefined;
        } | undefined;
        access?: {
            dataLens?: boolean | undefined;
            webSql?: boolean | undefined;
            metrika?: boolean | undefined;
            serverless?: boolean | undefined;
            dataTransfer?: boolean | undefined;
            yandexQuery?: boolean | undefined;
        } | undefined;
        cloudStorage?: {
            enabled?: boolean | undefined;
            moveFactor?: number | undefined;
            dataCacheEnabled?: boolean | undefined;
            dataCacheMaxSize?: number | undefined;
            preferNotToMerge?: boolean | undefined;
        } | undefined;
        sqlDatabaseManagement?: boolean | undefined;
        sqlUserManagement?: boolean | undefined;
        embeddedKeeper?: boolean | undefined;
        adminPassword?: string | undefined;
    } & {
        version?: string | undefined;
        zookeeper?: ({
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } & {
            resources?: ({
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & Record<Exclude<keyof I["zookeeper"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        } & Record<Exclude<keyof I["zookeeper"], "$type" | "resources">, never>) | undefined;
        clickhouse?: ({
            config?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } & {
            config?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            resources?: ({
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        } & Record<Exclude<keyof I["clickhouse"], "$type" | "config" | "resources">, never>) | undefined;
        backupWindowStart?: ({
            seconds?: number | undefined;
            nanos?: number | undefined;
            hours?: number | undefined;
            minutes?: number | undefined;
        } & {
            seconds?: number | undefined;
            nanos?: number | undefined;
            hours?: number | undefined;
            minutes?: number | undefined;
        } & Record<Exclude<keyof I["backupWindowStart"], "$type" | "seconds" | "nanos" | "hours" | "minutes">, never>) | undefined;
        access?: ({
            dataLens?: boolean | undefined;
            webSql?: boolean | undefined;
            metrika?: boolean | undefined;
            serverless?: boolean | undefined;
            dataTransfer?: boolean | undefined;
            yandexQuery?: boolean | undefined;
        } & {
            dataLens?: boolean | undefined;
            webSql?: boolean | undefined;
            metrika?: boolean | undefined;
            serverless?: boolean | undefined;
            dataTransfer?: boolean | undefined;
            yandexQuery?: boolean | undefined;
        } & Record<Exclude<keyof I["access"], "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>) | undefined;
        cloudStorage?: ({
            enabled?: boolean | undefined;
            moveFactor?: number | undefined;
            dataCacheEnabled?: boolean | undefined;
            dataCacheMaxSize?: number | undefined;
            preferNotToMerge?: boolean | undefined;
        } & {
            enabled?: boolean | undefined;
            moveFactor?: number | undefined;
            dataCacheEnabled?: boolean | undefined;
            dataCacheMaxSize?: number | undefined;
            preferNotToMerge?: boolean | undefined;
        } & Record<Exclude<keyof I["cloudStorage"], "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>) | undefined;
        sqlDatabaseManagement?: boolean | undefined;
        sqlUserManagement?: boolean | undefined;
        embeddedKeeper?: boolean | undefined;
        adminPassword?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "version" | "zookeeper" | "clickhouse" | "backupWindowStart" | "access" | "cloudStorage" | "sqlDatabaseManagement" | "sqlUserManagement" | "embeddedKeeper" | "adminPassword">, never>>(object: I): ConfigSpec;
};
export declare const ConfigSpec_Clickhouse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ConfigSpec.Clickhouse";
    encode(message: ConfigSpec_Clickhouse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ConfigSpec_Clickhouse;
    fromJSON(object: any): ConfigSpec_Clickhouse;
    toJSON(message: ConfigSpec_Clickhouse): unknown;
    fromPartial<I extends {
        config?: {
            compression?: {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[] | undefined;
            timezone?: string | undefined;
            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            geobaseUri?: string | undefined;
            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            mergeTree?: {
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } | undefined;
            dictionaries?: {
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[] | undefined;
            graphiteRollup?: {
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            kafka?: {
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } | undefined;
            kafkaTopics?: {
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[] | undefined;
            rabbitmq?: {
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } | undefined;
            maxConnections?: number | undefined;
            maxConcurrentQueries?: number | undefined;
            keepAliveTimeout?: number | undefined;
            uncompressedCacheSize?: number | undefined;
            markCacheSize?: number | undefined;
            maxTableSizeToDrop?: number | undefined;
            maxPartitionSizeToDrop?: number | undefined;
            builtinDictionariesReloadInterval?: number | undefined;
            queryLogRetentionSize?: number | undefined;
            queryLogRetentionTime?: number | undefined;
            queryThreadLogEnabled?: boolean | undefined;
            queryThreadLogRetentionSize?: number | undefined;
            queryThreadLogRetentionTime?: number | undefined;
            partLogRetentionSize?: number | undefined;
            partLogRetentionTime?: number | undefined;
            metricLogEnabled?: boolean | undefined;
            metricLogRetentionSize?: number | undefined;
            metricLogRetentionTime?: number | undefined;
            traceLogEnabled?: boolean | undefined;
            traceLogRetentionSize?: number | undefined;
            traceLogRetentionTime?: number | undefined;
            textLogEnabled?: boolean | undefined;
            textLogRetentionSize?: number | undefined;
            textLogRetentionTime?: number | undefined;
            opentelemetrySpanLogEnabled?: boolean | undefined;
            backgroundPoolSize?: number | undefined;
            backgroundSchedulePoolSize?: number | undefined;
            backgroundFetchesPoolSize?: number | undefined;
            backgroundMovePoolSize?: number | undefined;
            backgroundDistributedSchedulePoolSize?: number | undefined;
            backgroundBufferFlushSchedulePoolSize?: number | undefined;
            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
            defaultDatabase?: string | undefined;
            totalMemoryProfilerStep?: number | undefined;
            totalMemoryTrackerSampleProbability?: number | undefined;
            backgroundCommonPoolSize?: number | undefined;
            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
            queryViewsLogEnabled?: boolean | undefined;
            queryViewsLogRetentionSize?: number | undefined;
            queryViewsLogRetentionTime?: number | undefined;
            asynchronousMetricLogEnabled?: boolean | undefined;
            asynchronousMetricLogRetentionSize?: number | undefined;
            asynchronousMetricLogRetentionTime?: number | undefined;
            opentelemetrySpanLogRetentionSize?: number | undefined;
            opentelemetrySpanLogRetentionTime?: number | undefined;
            sessionLogEnabled?: boolean | undefined;
            sessionLogRetentionSize?: number | undefined;
            sessionLogRetentionTime?: number | undefined;
            zookeeperLogEnabled?: boolean | undefined;
            zookeeperLogRetentionSize?: number | undefined;
            zookeeperLogRetentionTime?: number | undefined;
            asynchronousInsertLogEnabled?: boolean | undefined;
            asynchronousInsertLogRetentionSize?: number | undefined;
            asynchronousInsertLogRetentionTime?: number | undefined;
            geobaseEnabled?: boolean | undefined;
        } | undefined;
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
    } & {
        config?: ({
            compression?: {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[] | undefined;
            timezone?: string | undefined;
            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            geobaseUri?: string | undefined;
            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            mergeTree?: {
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } | undefined;
            dictionaries?: {
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[] | undefined;
            graphiteRollup?: {
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            kafka?: {
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } | undefined;
            kafkaTopics?: {
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[] | undefined;
            rabbitmq?: {
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } | undefined;
            maxConnections?: number | undefined;
            maxConcurrentQueries?: number | undefined;
            keepAliveTimeout?: number | undefined;
            uncompressedCacheSize?: number | undefined;
            markCacheSize?: number | undefined;
            maxTableSizeToDrop?: number | undefined;
            maxPartitionSizeToDrop?: number | undefined;
            builtinDictionariesReloadInterval?: number | undefined;
            queryLogRetentionSize?: number | undefined;
            queryLogRetentionTime?: number | undefined;
            queryThreadLogEnabled?: boolean | undefined;
            queryThreadLogRetentionSize?: number | undefined;
            queryThreadLogRetentionTime?: number | undefined;
            partLogRetentionSize?: number | undefined;
            partLogRetentionTime?: number | undefined;
            metricLogEnabled?: boolean | undefined;
            metricLogRetentionSize?: number | undefined;
            metricLogRetentionTime?: number | undefined;
            traceLogEnabled?: boolean | undefined;
            traceLogRetentionSize?: number | undefined;
            traceLogRetentionTime?: number | undefined;
            textLogEnabled?: boolean | undefined;
            textLogRetentionSize?: number | undefined;
            textLogRetentionTime?: number | undefined;
            opentelemetrySpanLogEnabled?: boolean | undefined;
            backgroundPoolSize?: number | undefined;
            backgroundSchedulePoolSize?: number | undefined;
            backgroundFetchesPoolSize?: number | undefined;
            backgroundMovePoolSize?: number | undefined;
            backgroundDistributedSchedulePoolSize?: number | undefined;
            backgroundBufferFlushSchedulePoolSize?: number | undefined;
            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
            defaultDatabase?: string | undefined;
            totalMemoryProfilerStep?: number | undefined;
            totalMemoryTrackerSampleProbability?: number | undefined;
            backgroundCommonPoolSize?: number | undefined;
            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
            queryViewsLogEnabled?: boolean | undefined;
            queryViewsLogRetentionSize?: number | undefined;
            queryViewsLogRetentionTime?: number | undefined;
            asynchronousMetricLogEnabled?: boolean | undefined;
            asynchronousMetricLogRetentionSize?: number | undefined;
            asynchronousMetricLogRetentionTime?: number | undefined;
            opentelemetrySpanLogRetentionSize?: number | undefined;
            opentelemetrySpanLogRetentionTime?: number | undefined;
            sessionLogEnabled?: boolean | undefined;
            sessionLogRetentionSize?: number | undefined;
            sessionLogRetentionTime?: number | undefined;
            zookeeperLogEnabled?: boolean | undefined;
            zookeeperLogRetentionSize?: number | undefined;
            zookeeperLogRetentionTime?: number | undefined;
            asynchronousInsertLogEnabled?: boolean | undefined;
            asynchronousInsertLogRetentionSize?: number | undefined;
            asynchronousInsertLogRetentionTime?: number | undefined;
            geobaseEnabled?: boolean | undefined;
        } & {
            compression?: ({
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[] & ({
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            } & {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            } & Record<Exclude<keyof I["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["compression"], "$type" | keyof {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[]>, never>) | undefined;
            timezone?: string | undefined;
            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            geobaseUri?: string | undefined;
            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            mergeTree?: ({
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } & {
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } & Record<Exclude<keyof I["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
            dictionaries?: ({
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[] & ({
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            } & {
                name?: string | undefined;
                mysqlSource?: ({
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } & {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] & ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[]>, never>) | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                clickhouseSource?: ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } & {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                structure?: ({
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } & {
                    id?: ({
                        name?: string | undefined;
                    } & {
                        name?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                    key?: ({
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } & {
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                    attributes?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] & ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[]>, never>) | undefined;
                    rangeMin?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    rangeMax?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                layout?: ({
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } & {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: ({
                    min?: number | undefined;
                    max?: number | undefined;
                } & {
                    min?: number | undefined;
                    max?: number | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                httpSource?: ({
                    format?: string | undefined;
                    url?: string | undefined;
                } & {
                    format?: string | undefined;
                    url?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                mongodbSource?: ({
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } & {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                postgresqlSource?: ({
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } & {
                    port?: number | undefined;
                    hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"], "$type" | keyof {
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[]>, never>) | undefined;
            graphiteRollup?: ({
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[] & ({
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            } & {
                name?: string | undefined;
                patterns?: ({
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] & ({
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                } & {
                    function?: string | undefined;
                    retention?: ({
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] & ({
                        age?: number | undefined;
                        precision?: number | undefined;
                    } & {
                        age?: number | undefined;
                        precision?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[]>, never>) | undefined;
                    regexp?: string | undefined;
                } & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["graphiteRollup"], "$type" | keyof {
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            kafka?: ({
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } & {
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } & Record<Exclude<keyof I["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
            kafkaTopics?: ({
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[] & ({
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            } & {
                name?: string | undefined;
                settings?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["kafkaTopics"], "$type" | keyof {
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[]>, never>) | undefined;
            rabbitmq?: ({
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } & {
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } & Record<Exclude<keyof I["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
            maxConnections?: number | undefined;
            maxConcurrentQueries?: number | undefined;
            keepAliveTimeout?: number | undefined;
            uncompressedCacheSize?: number | undefined;
            markCacheSize?: number | undefined;
            maxTableSizeToDrop?: number | undefined;
            maxPartitionSizeToDrop?: number | undefined;
            builtinDictionariesReloadInterval?: number | undefined;
            queryLogRetentionSize?: number | undefined;
            queryLogRetentionTime?: number | undefined;
            queryThreadLogEnabled?: boolean | undefined;
            queryThreadLogRetentionSize?: number | undefined;
            queryThreadLogRetentionTime?: number | undefined;
            partLogRetentionSize?: number | undefined;
            partLogRetentionTime?: number | undefined;
            metricLogEnabled?: boolean | undefined;
            metricLogRetentionSize?: number | undefined;
            metricLogRetentionTime?: number | undefined;
            traceLogEnabled?: boolean | undefined;
            traceLogRetentionSize?: number | undefined;
            traceLogRetentionTime?: number | undefined;
            textLogEnabled?: boolean | undefined;
            textLogRetentionSize?: number | undefined;
            textLogRetentionTime?: number | undefined;
            opentelemetrySpanLogEnabled?: boolean | undefined;
            backgroundPoolSize?: number | undefined;
            backgroundSchedulePoolSize?: number | undefined;
            backgroundFetchesPoolSize?: number | undefined;
            backgroundMovePoolSize?: number | undefined;
            backgroundDistributedSchedulePoolSize?: number | undefined;
            backgroundBufferFlushSchedulePoolSize?: number | undefined;
            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
            defaultDatabase?: string | undefined;
            totalMemoryProfilerStep?: number | undefined;
            totalMemoryTrackerSampleProbability?: number | undefined;
            backgroundCommonPoolSize?: number | undefined;
            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
            queryViewsLogEnabled?: boolean | undefined;
            queryViewsLogRetentionSize?: number | undefined;
            queryViewsLogRetentionTime?: number | undefined;
            asynchronousMetricLogEnabled?: boolean | undefined;
            asynchronousMetricLogRetentionSize?: number | undefined;
            asynchronousMetricLogRetentionTime?: number | undefined;
            opentelemetrySpanLogRetentionSize?: number | undefined;
            opentelemetrySpanLogRetentionTime?: number | undefined;
            sessionLogEnabled?: boolean | undefined;
            sessionLogRetentionSize?: number | undefined;
            sessionLogRetentionTime?: number | undefined;
            zookeeperLogEnabled?: boolean | undefined;
            zookeeperLogRetentionSize?: number | undefined;
            zookeeperLogRetentionTime?: number | undefined;
            asynchronousInsertLogEnabled?: boolean | undefined;
            asynchronousInsertLogRetentionSize?: number | undefined;
            asynchronousInsertLogRetentionTime?: number | undefined;
            geobaseEnabled?: boolean | undefined;
        } & Record<Exclude<keyof I["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "config" | "resources">, never>>(object: I): ConfigSpec_Clickhouse;
};
export declare const ConfigSpec_Zookeeper: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ConfigSpec.Zookeeper";
    encode(message: ConfigSpec_Zookeeper, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ConfigSpec_Zookeeper;
    fromJSON(object: any): ConfigSpec_Zookeeper;
    toJSON(message: ConfigSpec_Zookeeper): unknown;
    fromPartial<I extends {
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
    } & {
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "resources">, never>>(object: I): ConfigSpec_Zookeeper;
};
export declare const ShardConfigSpec: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfigSpec";
    encode(message: ShardConfigSpec, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ShardConfigSpec;
    fromJSON(object: any): ShardConfigSpec;
    toJSON(message: ShardConfigSpec): unknown;
    fromPartial<I extends {
        clickhouse?: {
            config?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            weight?: number | undefined;
        } | undefined;
    } & {
        clickhouse?: ({
            config?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            weight?: number | undefined;
        } & {
            config?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            resources?: ({
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            weight?: number | undefined;
        } & Record<Exclude<keyof I["clickhouse"], "$type" | "config" | "resources" | "weight">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clickhouse">, never>>(object: I): ShardConfigSpec;
};
export declare const ShardConfigSpec_Clickhouse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfigSpec.Clickhouse";
    encode(message: ShardConfigSpec_Clickhouse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ShardConfigSpec_Clickhouse;
    fromJSON(object: any): ShardConfigSpec_Clickhouse;
    toJSON(message: ShardConfigSpec_Clickhouse): unknown;
    fromPartial<I extends {
        config?: {
            compression?: {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[] | undefined;
            timezone?: string | undefined;
            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            geobaseUri?: string | undefined;
            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            mergeTree?: {
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } | undefined;
            dictionaries?: {
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[] | undefined;
            graphiteRollup?: {
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            kafka?: {
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } | undefined;
            kafkaTopics?: {
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[] | undefined;
            rabbitmq?: {
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } | undefined;
            maxConnections?: number | undefined;
            maxConcurrentQueries?: number | undefined;
            keepAliveTimeout?: number | undefined;
            uncompressedCacheSize?: number | undefined;
            markCacheSize?: number | undefined;
            maxTableSizeToDrop?: number | undefined;
            maxPartitionSizeToDrop?: number | undefined;
            builtinDictionariesReloadInterval?: number | undefined;
            queryLogRetentionSize?: number | undefined;
            queryLogRetentionTime?: number | undefined;
            queryThreadLogEnabled?: boolean | undefined;
            queryThreadLogRetentionSize?: number | undefined;
            queryThreadLogRetentionTime?: number | undefined;
            partLogRetentionSize?: number | undefined;
            partLogRetentionTime?: number | undefined;
            metricLogEnabled?: boolean | undefined;
            metricLogRetentionSize?: number | undefined;
            metricLogRetentionTime?: number | undefined;
            traceLogEnabled?: boolean | undefined;
            traceLogRetentionSize?: number | undefined;
            traceLogRetentionTime?: number | undefined;
            textLogEnabled?: boolean | undefined;
            textLogRetentionSize?: number | undefined;
            textLogRetentionTime?: number | undefined;
            opentelemetrySpanLogEnabled?: boolean | undefined;
            backgroundPoolSize?: number | undefined;
            backgroundSchedulePoolSize?: number | undefined;
            backgroundFetchesPoolSize?: number | undefined;
            backgroundMovePoolSize?: number | undefined;
            backgroundDistributedSchedulePoolSize?: number | undefined;
            backgroundBufferFlushSchedulePoolSize?: number | undefined;
            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
            defaultDatabase?: string | undefined;
            totalMemoryProfilerStep?: number | undefined;
            totalMemoryTrackerSampleProbability?: number | undefined;
            backgroundCommonPoolSize?: number | undefined;
            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
            queryViewsLogEnabled?: boolean | undefined;
            queryViewsLogRetentionSize?: number | undefined;
            queryViewsLogRetentionTime?: number | undefined;
            asynchronousMetricLogEnabled?: boolean | undefined;
            asynchronousMetricLogRetentionSize?: number | undefined;
            asynchronousMetricLogRetentionTime?: number | undefined;
            opentelemetrySpanLogRetentionSize?: number | undefined;
            opentelemetrySpanLogRetentionTime?: number | undefined;
            sessionLogEnabled?: boolean | undefined;
            sessionLogRetentionSize?: number | undefined;
            sessionLogRetentionTime?: number | undefined;
            zookeeperLogEnabled?: boolean | undefined;
            zookeeperLogRetentionSize?: number | undefined;
            zookeeperLogRetentionTime?: number | undefined;
            asynchronousInsertLogEnabled?: boolean | undefined;
            asynchronousInsertLogRetentionSize?: number | undefined;
            asynchronousInsertLogRetentionTime?: number | undefined;
            geobaseEnabled?: boolean | undefined;
        } | undefined;
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
        weight?: number | undefined;
    } & {
        config?: ({
            compression?: {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[] | undefined;
            timezone?: string | undefined;
            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            geobaseUri?: string | undefined;
            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            mergeTree?: {
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } | undefined;
            dictionaries?: {
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[] | undefined;
            graphiteRollup?: {
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[] | undefined;
            kafka?: {
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } | undefined;
            kafkaTopics?: {
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[] | undefined;
            rabbitmq?: {
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } | undefined;
            maxConnections?: number | undefined;
            maxConcurrentQueries?: number | undefined;
            keepAliveTimeout?: number | undefined;
            uncompressedCacheSize?: number | undefined;
            markCacheSize?: number | undefined;
            maxTableSizeToDrop?: number | undefined;
            maxPartitionSizeToDrop?: number | undefined;
            builtinDictionariesReloadInterval?: number | undefined;
            queryLogRetentionSize?: number | undefined;
            queryLogRetentionTime?: number | undefined;
            queryThreadLogEnabled?: boolean | undefined;
            queryThreadLogRetentionSize?: number | undefined;
            queryThreadLogRetentionTime?: number | undefined;
            partLogRetentionSize?: number | undefined;
            partLogRetentionTime?: number | undefined;
            metricLogEnabled?: boolean | undefined;
            metricLogRetentionSize?: number | undefined;
            metricLogRetentionTime?: number | undefined;
            traceLogEnabled?: boolean | undefined;
            traceLogRetentionSize?: number | undefined;
            traceLogRetentionTime?: number | undefined;
            textLogEnabled?: boolean | undefined;
            textLogRetentionSize?: number | undefined;
            textLogRetentionTime?: number | undefined;
            opentelemetrySpanLogEnabled?: boolean | undefined;
            backgroundPoolSize?: number | undefined;
            backgroundSchedulePoolSize?: number | undefined;
            backgroundFetchesPoolSize?: number | undefined;
            backgroundMovePoolSize?: number | undefined;
            backgroundDistributedSchedulePoolSize?: number | undefined;
            backgroundBufferFlushSchedulePoolSize?: number | undefined;
            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
            defaultDatabase?: string | undefined;
            totalMemoryProfilerStep?: number | undefined;
            totalMemoryTrackerSampleProbability?: number | undefined;
            backgroundCommonPoolSize?: number | undefined;
            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
            queryViewsLogEnabled?: boolean | undefined;
            queryViewsLogRetentionSize?: number | undefined;
            queryViewsLogRetentionTime?: number | undefined;
            asynchronousMetricLogEnabled?: boolean | undefined;
            asynchronousMetricLogRetentionSize?: number | undefined;
            asynchronousMetricLogRetentionTime?: number | undefined;
            opentelemetrySpanLogRetentionSize?: number | undefined;
            opentelemetrySpanLogRetentionTime?: number | undefined;
            sessionLogEnabled?: boolean | undefined;
            sessionLogRetentionSize?: number | undefined;
            sessionLogRetentionTime?: number | undefined;
            zookeeperLogEnabled?: boolean | undefined;
            zookeeperLogRetentionSize?: number | undefined;
            zookeeperLogRetentionTime?: number | undefined;
            asynchronousInsertLogEnabled?: boolean | undefined;
            asynchronousInsertLogRetentionSize?: number | undefined;
            asynchronousInsertLogRetentionTime?: number | undefined;
            geobaseEnabled?: boolean | undefined;
        } & {
            compression?: ({
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[] & ({
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            } & {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            } & Record<Exclude<keyof I["config"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["compression"], "$type" | keyof {
                level?: number | undefined;
                method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                minPartSize?: number | undefined;
                minPartSizeRatio?: number | undefined;
            }[]>, never>) | undefined;
            timezone?: string | undefined;
            logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            geobaseUri?: string | undefined;
            textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
            mergeTree?: ({
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } & {
                replicatedDeduplicationWindow?: number | undefined;
                replicatedDeduplicationWindowSeconds?: number | undefined;
                partsToDelayInsert?: number | undefined;
                partsToThrowInsert?: number | undefined;
                inactivePartsToDelayInsert?: number | undefined;
                inactivePartsToThrowInsert?: number | undefined;
                maxReplicatedMergesInQueue?: number | undefined;
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                minBytesForWidePart?: number | undefined;
                minRowsForWidePart?: number | undefined;
                ttlOnlyDropParts?: boolean | undefined;
                allowRemoteFsZeroCopyReplication?: boolean | undefined;
                mergeWithTtlTimeout?: number | undefined;
                mergeWithRecompressionTtlTimeout?: number | undefined;
                maxPartsInTotal?: number | undefined;
                maxNumberOfMergesWithTtlInPool?: number | undefined;
                cleanupDelayPeriod?: number | undefined;
                numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                maxAvgPartSizeForTooManyParts?: number | undefined;
                minAgeToForceMergeSeconds?: number | undefined;
                minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                mergeSelectingSleepMs?: number | undefined;
            } & Record<Exclude<keyof I["config"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
            dictionaries?: ({
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[] & ({
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            } & {
                name?: string | undefined;
                mysqlSource?: ({
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } & {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] & ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[]>, never>) | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                clickhouseSource?: ({
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } & {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                structure?: ({
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } & {
                    id?: ({
                        name?: string | undefined;
                    } & {
                        name?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                    key?: ({
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } & {
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                    attributes?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] & ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[]>, never>) | undefined;
                    rangeMin?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    rangeMax?: ({
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                layout?: ({
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } & {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: ({
                    min?: number | undefined;
                    max?: number | undefined;
                } & {
                    min?: number | undefined;
                    max?: number | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                httpSource?: ({
                    format?: string | undefined;
                    url?: string | undefined;
                } & {
                    format?: string | undefined;
                    url?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                mongodbSource?: ({
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } & {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                postgresqlSource?: ({
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } & {
                    port?: number | undefined;
                    hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } & Record<Exclude<keyof I["config"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["dictionaries"], "$type" | keyof {
                name?: string | undefined;
                mysqlSource?: {
                    port?: number | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    replicas?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        priority?: number | undefined;
                    }[] | undefined;
                    where?: string | undefined;
                    invalidateQuery?: string | undefined;
                } | undefined;
                clickhouseSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    where?: string | undefined;
                } | undefined;
                structure?: {
                    id?: {
                        name?: string | undefined;
                    } | undefined;
                    key?: {
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                    } | undefined;
                    attributes?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    }[] | undefined;
                    rangeMin?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                    rangeMax?: {
                        type?: string | undefined;
                        name?: string | undefined;
                        expression?: string | undefined;
                        nullValue?: string | undefined;
                        hierarchical?: boolean | undefined;
                        injective?: boolean | undefined;
                    } | undefined;
                } | undefined;
                layout?: {
                    type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                    sizeInCells?: number | undefined;
                } | undefined;
                fixedLifetime?: number | undefined;
                lifetimeRange?: {
                    min?: number | undefined;
                    max?: number | undefined;
                } | undefined;
                httpSource?: {
                    format?: string | undefined;
                    url?: string | undefined;
                } | undefined;
                mongodbSource?: {
                    port?: number | undefined;
                    host?: string | undefined;
                    options?: string | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    db?: string | undefined;
                    collection?: string | undefined;
                } | undefined;
                postgresqlSource?: {
                    port?: number | undefined;
                    hosts?: string[] | undefined;
                    user?: string | undefined;
                    password?: string | undefined;
                    table?: string | undefined;
                    db?: string | undefined;
                    invalidateQuery?: string | undefined;
                    sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                } | undefined;
            }[]>, never>) | undefined;
            graphiteRollup?: ({
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[] & ({
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            } & {
                name?: string | undefined;
                patterns?: ({
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] & ({
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                } & {
                    function?: string | undefined;
                    retention?: ({
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] & ({
                        age?: number | undefined;
                        precision?: number | undefined;
                    } & {
                        age?: number | undefined;
                        precision?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[]>, never>) | undefined;
                    regexp?: string | undefined;
                } & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["graphiteRollup"], "$type" | keyof {
                name?: string | undefined;
                patterns?: {
                    function?: string | undefined;
                    retention?: {
                        age?: number | undefined;
                        precision?: number | undefined;
                    }[] | undefined;
                    regexp?: string | undefined;
                }[] | undefined;
            }[]>, never>) | undefined;
            kafka?: ({
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } & {
                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                saslUsername?: string | undefined;
                saslPassword?: string | undefined;
                enableSslCertificateVerification?: boolean | undefined;
                maxPollIntervalMs?: number | undefined;
                sessionTimeoutMs?: number | undefined;
            } & Record<Exclude<keyof I["config"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
            kafkaTopics?: ({
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[] & ({
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            } & {
                name?: string | undefined;
                settings?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["kafkaTopics"], "$type" | keyof {
                name?: string | undefined;
                settings?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
            }[]>, never>) | undefined;
            rabbitmq?: ({
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } & {
                password?: string | undefined;
                username?: string | undefined;
                vhost?: string | undefined;
            } & Record<Exclude<keyof I["config"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
            maxConnections?: number | undefined;
            maxConcurrentQueries?: number | undefined;
            keepAliveTimeout?: number | undefined;
            uncompressedCacheSize?: number | undefined;
            markCacheSize?: number | undefined;
            maxTableSizeToDrop?: number | undefined;
            maxPartitionSizeToDrop?: number | undefined;
            builtinDictionariesReloadInterval?: number | undefined;
            queryLogRetentionSize?: number | undefined;
            queryLogRetentionTime?: number | undefined;
            queryThreadLogEnabled?: boolean | undefined;
            queryThreadLogRetentionSize?: number | undefined;
            queryThreadLogRetentionTime?: number | undefined;
            partLogRetentionSize?: number | undefined;
            partLogRetentionTime?: number | undefined;
            metricLogEnabled?: boolean | undefined;
            metricLogRetentionSize?: number | undefined;
            metricLogRetentionTime?: number | undefined;
            traceLogEnabled?: boolean | undefined;
            traceLogRetentionSize?: number | undefined;
            traceLogRetentionTime?: number | undefined;
            textLogEnabled?: boolean | undefined;
            textLogRetentionSize?: number | undefined;
            textLogRetentionTime?: number | undefined;
            opentelemetrySpanLogEnabled?: boolean | undefined;
            backgroundPoolSize?: number | undefined;
            backgroundSchedulePoolSize?: number | undefined;
            backgroundFetchesPoolSize?: number | undefined;
            backgroundMovePoolSize?: number | undefined;
            backgroundDistributedSchedulePoolSize?: number | undefined;
            backgroundBufferFlushSchedulePoolSize?: number | undefined;
            backgroundMessageBrokerSchedulePoolSize?: number | undefined;
            defaultDatabase?: string | undefined;
            totalMemoryProfilerStep?: number | undefined;
            totalMemoryTrackerSampleProbability?: number | undefined;
            backgroundCommonPoolSize?: number | undefined;
            backgroundMergesMutationsConcurrencyRatio?: number | undefined;
            queryViewsLogEnabled?: boolean | undefined;
            queryViewsLogRetentionSize?: number | undefined;
            queryViewsLogRetentionTime?: number | undefined;
            asynchronousMetricLogEnabled?: boolean | undefined;
            asynchronousMetricLogRetentionSize?: number | undefined;
            asynchronousMetricLogRetentionTime?: number | undefined;
            opentelemetrySpanLogRetentionSize?: number | undefined;
            opentelemetrySpanLogRetentionTime?: number | undefined;
            sessionLogEnabled?: boolean | undefined;
            sessionLogRetentionSize?: number | undefined;
            sessionLogRetentionTime?: number | undefined;
            zookeeperLogEnabled?: boolean | undefined;
            zookeeperLogRetentionSize?: number | undefined;
            zookeeperLogRetentionTime?: number | undefined;
            asynchronousInsertLogEnabled?: boolean | undefined;
            asynchronousInsertLogRetentionSize?: number | undefined;
            asynchronousInsertLogRetentionTime?: number | undefined;
            geobaseEnabled?: boolean | undefined;
        } & Record<Exclude<keyof I["config"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        weight?: number | undefined;
    } & Record<Exclude<keyof I, "$type" | "config" | "resources" | "weight">, never>>(object: I): ShardConfigSpec_Clickhouse;
};
/** A set of methods for managing ClickHouse clusters. */
export declare const ClusterServiceService: {
    /**
     * Returns the specified ClickHouse cluster.
     *
     * To get the list of available ClickHouse clusters, make a [List] request.
     */
    readonly get: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Get";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetClusterRequest;
        readonly responseSerialize: (value: Cluster) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Cluster;
    };
    /**
     * Retrieves a list of ClickHouse clusters that belong
     * to the specified folder.
     */
    readonly list: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/List";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClustersRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClustersRequest;
        readonly responseSerialize: (value: ListClustersResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClustersResponse;
    };
    /** Creates a ClickHouse cluster in the specified folder. */
    readonly create: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Create";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Updates the specified ClickHouse cluster. */
    readonly update: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Update";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: UpdateClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => UpdateClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Deletes the specified ClickHouse cluster. */
    readonly delete: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Delete";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Starts the specified ClickHouse cluster. */
    readonly start: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Start";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: StartClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => StartClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Stops the specified ClickHouse cluster. */
    readonly stop: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Stop";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: StopClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => StopClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Moves a ClickHouse cluster to the specified folder. */
    readonly move: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Move";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: MoveClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => MoveClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Adds a ZooKeeper subcluster to the specified ClickHouse cluster. */
    readonly addZookeeper: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/AddZookeeper";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: AddClusterZookeeperRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => AddClusterZookeeperRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Creates a backup for the specified ClickHouse cluster. */
    readonly backup: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Backup";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: BackupClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => BackupClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Creates a new ClickHouse cluster using the specified backup. */
    readonly restore: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/Restore";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: RestoreClusterRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => RestoreClusterRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Reschedules planned maintenance operation. */
    readonly rescheduleMaintenance: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/RescheduleMaintenance";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: RescheduleMaintenanceRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => RescheduleMaintenanceRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Retrieves logs for the specified ClickHouse cluster. */
    readonly listLogs: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/ListLogs";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClusterLogsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClusterLogsRequest;
        readonly responseSerialize: (value: ListClusterLogsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClusterLogsResponse;
    };
    /** Same as ListLogs but using server-side streaming. Also allows for `tail -f` semantics. */
    readonly streamLogs: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/StreamLogs";
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestSerialize: (value: StreamClusterLogsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => StreamClusterLogsRequest;
        readonly responseSerialize: (value: StreamLogRecord) => Buffer;
        readonly responseDeserialize: (value: Buffer) => StreamLogRecord;
    };
    /** Retrieves the list of Operation resources for the specified cluster. */
    readonly listOperations: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/ListOperations";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClusterOperationsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClusterOperationsRequest;
        readonly responseSerialize: (value: ListClusterOperationsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClusterOperationsResponse;
    };
    /** Retrieves the list of available backups for the specified ClickHouse cluster. */
    readonly listBackups: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/ListBackups";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClusterBackupsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClusterBackupsRequest;
        readonly responseSerialize: (value: ListClusterBackupsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClusterBackupsResponse;
    };
    /** Retrieves a list of hosts for the specified cluster. */
    readonly listHosts: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/ListHosts";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClusterHostsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClusterHostsRequest;
        readonly responseSerialize: (value: ListClusterHostsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClusterHostsResponse;
    };
    /** Creates new hosts for a cluster. */
    readonly addHosts: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/AddHosts";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: AddClusterHostsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => AddClusterHostsRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Updates the specified hosts. */
    readonly updateHosts: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/UpdateHosts";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: UpdateClusterHostsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => UpdateClusterHostsRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Deletes the specified hosts for a cluster. */
    readonly deleteHosts: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/DeleteHosts";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteClusterHostsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteClusterHostsRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Returns the specified shard. */
    readonly getShard: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/GetShard";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetClusterShardRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetClusterShardRequest;
        readonly responseSerialize: (value: Shard) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Shard;
    };
    /** Retrieves a list of shards that belong to the specified cluster. */
    readonly listShards: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/ListShards";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClusterShardsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClusterShardsRequest;
        readonly responseSerialize: (value: ListClusterShardsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClusterShardsResponse;
    };
    /** Creates a new shard in the specified cluster. */
    readonly addShard: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/AddShard";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: AddClusterShardRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => AddClusterShardRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Modifies the specified shard. */
    readonly updateShard: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/UpdateShard";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: UpdateClusterShardRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => UpdateClusterShardRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Deletes the specified shard. */
    readonly deleteShard: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/DeleteShard";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteClusterShardRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteClusterShardRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Returns the specified shard group. */
    readonly getShardGroup: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/GetShardGroup";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: GetClusterShardGroupRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => GetClusterShardGroupRequest;
        readonly responseSerialize: (value: ShardGroup) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ShardGroup;
    };
    /** Retrieves a list of shard groups that belong to specified cluster. */
    readonly listShardGroups: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/ListShardGroups";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClusterShardGroupsRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClusterShardGroupsRequest;
        readonly responseSerialize: (value: ListClusterShardGroupsResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClusterShardGroupsResponse;
    };
    /** Creates a new shard group in the specified cluster. */
    readonly createShardGroup: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/CreateShardGroup";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateClusterShardGroupRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateClusterShardGroupRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Updates the specified shard group. */
    readonly updateShardGroup: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/UpdateShardGroup";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: UpdateClusterShardGroupRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => UpdateClusterShardGroupRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Deletes the specified shard group. */
    readonly deleteShardGroup: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/DeleteShardGroup";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteClusterShardGroupRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteClusterShardGroupRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Retrieves a list of external dictionaries that belong to specified cluster. */
    readonly listExternalDictionaries: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/ListExternalDictionaries";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: ListClusterExternalDictionariesRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => ListClusterExternalDictionariesRequest;
        readonly responseSerialize: (value: ListClusterExternalDictionariesResponse) => Buffer;
        readonly responseDeserialize: (value: Buffer) => ListClusterExternalDictionariesResponse;
    };
    /** Creates an external dictionary for the specified ClickHouse cluster. */
    readonly createExternalDictionary: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/CreateExternalDictionary";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: CreateClusterExternalDictionaryRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => CreateClusterExternalDictionaryRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Updates an external dictionary for the specified ClickHouse cluster. */
    readonly updateExternalDictionary: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/UpdateExternalDictionary";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: UpdateClusterExternalDictionaryRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => UpdateClusterExternalDictionaryRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
    /** Deletes the specified external dictionary. */
    readonly deleteExternalDictionary: {
        readonly path: "/yandex.cloud.mdb.clickhouse.v1.ClusterService/DeleteExternalDictionary";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: DeleteClusterExternalDictionaryRequest) => Buffer;
        readonly requestDeserialize: (value: Buffer) => DeleteClusterExternalDictionaryRequest;
        readonly responseSerialize: (value: Operation) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Operation;
    };
};
export interface ClusterServiceServer extends UntypedServiceImplementation {
    /**
     * Returns the specified ClickHouse cluster.
     *
     * To get the list of available ClickHouse clusters, make a [List] request.
     */
    get: handleUnaryCall<GetClusterRequest, Cluster>;
    /**
     * Retrieves a list of ClickHouse clusters that belong
     * to the specified folder.
     */
    list: handleUnaryCall<ListClustersRequest, ListClustersResponse>;
    /** Creates a ClickHouse cluster in the specified folder. */
    create: handleUnaryCall<CreateClusterRequest, Operation>;
    /** Updates the specified ClickHouse cluster. */
    update: handleUnaryCall<UpdateClusterRequest, Operation>;
    /** Deletes the specified ClickHouse cluster. */
    delete: handleUnaryCall<DeleteClusterRequest, Operation>;
    /** Starts the specified ClickHouse cluster. */
    start: handleUnaryCall<StartClusterRequest, Operation>;
    /** Stops the specified ClickHouse cluster. */
    stop: handleUnaryCall<StopClusterRequest, Operation>;
    /** Moves a ClickHouse cluster to the specified folder. */
    move: handleUnaryCall<MoveClusterRequest, Operation>;
    /** Adds a ZooKeeper subcluster to the specified ClickHouse cluster. */
    addZookeeper: handleUnaryCall<AddClusterZookeeperRequest, Operation>;
    /** Creates a backup for the specified ClickHouse cluster. */
    backup: handleUnaryCall<BackupClusterRequest, Operation>;
    /** Creates a new ClickHouse cluster using the specified backup. */
    restore: handleUnaryCall<RestoreClusterRequest, Operation>;
    /** Reschedules planned maintenance operation. */
    rescheduleMaintenance: handleUnaryCall<RescheduleMaintenanceRequest, Operation>;
    /** Retrieves logs for the specified ClickHouse cluster. */
    listLogs: handleUnaryCall<ListClusterLogsRequest, ListClusterLogsResponse>;
    /** Same as ListLogs but using server-side streaming. Also allows for `tail -f` semantics. */
    streamLogs: handleServerStreamingCall<StreamClusterLogsRequest, StreamLogRecord>;
    /** Retrieves the list of Operation resources for the specified cluster. */
    listOperations: handleUnaryCall<ListClusterOperationsRequest, ListClusterOperationsResponse>;
    /** Retrieves the list of available backups for the specified ClickHouse cluster. */
    listBackups: handleUnaryCall<ListClusterBackupsRequest, ListClusterBackupsResponse>;
    /** Retrieves a list of hosts for the specified cluster. */
    listHosts: handleUnaryCall<ListClusterHostsRequest, ListClusterHostsResponse>;
    /** Creates new hosts for a cluster. */
    addHosts: handleUnaryCall<AddClusterHostsRequest, Operation>;
    /** Updates the specified hosts. */
    updateHosts: handleUnaryCall<UpdateClusterHostsRequest, Operation>;
    /** Deletes the specified hosts for a cluster. */
    deleteHosts: handleUnaryCall<DeleteClusterHostsRequest, Operation>;
    /** Returns the specified shard. */
    getShard: handleUnaryCall<GetClusterShardRequest, Shard>;
    /** Retrieves a list of shards that belong to the specified cluster. */
    listShards: handleUnaryCall<ListClusterShardsRequest, ListClusterShardsResponse>;
    /** Creates a new shard in the specified cluster. */
    addShard: handleUnaryCall<AddClusterShardRequest, Operation>;
    /** Modifies the specified shard. */
    updateShard: handleUnaryCall<UpdateClusterShardRequest, Operation>;
    /** Deletes the specified shard. */
    deleteShard: handleUnaryCall<DeleteClusterShardRequest, Operation>;
    /** Returns the specified shard group. */
    getShardGroup: handleUnaryCall<GetClusterShardGroupRequest, ShardGroup>;
    /** Retrieves a list of shard groups that belong to specified cluster. */
    listShardGroups: handleUnaryCall<ListClusterShardGroupsRequest, ListClusterShardGroupsResponse>;
    /** Creates a new shard group in the specified cluster. */
    createShardGroup: handleUnaryCall<CreateClusterShardGroupRequest, Operation>;
    /** Updates the specified shard group. */
    updateShardGroup: handleUnaryCall<UpdateClusterShardGroupRequest, Operation>;
    /** Deletes the specified shard group. */
    deleteShardGroup: handleUnaryCall<DeleteClusterShardGroupRequest, Operation>;
    /** Retrieves a list of external dictionaries that belong to specified cluster. */
    listExternalDictionaries: handleUnaryCall<ListClusterExternalDictionariesRequest, ListClusterExternalDictionariesResponse>;
    /** Creates an external dictionary for the specified ClickHouse cluster. */
    createExternalDictionary: handleUnaryCall<CreateClusterExternalDictionaryRequest, Operation>;
    /** Updates an external dictionary for the specified ClickHouse cluster. */
    updateExternalDictionary: handleUnaryCall<UpdateClusterExternalDictionaryRequest, Operation>;
    /** Deletes the specified external dictionary. */
    deleteExternalDictionary: handleUnaryCall<DeleteClusterExternalDictionaryRequest, Operation>;
}
export interface ClusterServiceClient extends Client {
    /**
     * Returns the specified ClickHouse cluster.
     *
     * To get the list of available ClickHouse clusters, make a [List] request.
     */
    get(request: GetClusterRequest, callback: (error: ServiceError | null, response: Cluster) => void): ClientUnaryCall;
    get(request: GetClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Cluster) => void): ClientUnaryCall;
    get(request: GetClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Cluster) => void): ClientUnaryCall;
    /**
     * Retrieves a list of ClickHouse clusters that belong
     * to the specified folder.
     */
    list(request: ListClustersRequest, callback: (error: ServiceError | null, response: ListClustersResponse) => void): ClientUnaryCall;
    list(request: ListClustersRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClustersResponse) => void): ClientUnaryCall;
    list(request: ListClustersRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClustersResponse) => void): ClientUnaryCall;
    /** Creates a ClickHouse cluster in the specified folder. */
    create(request: CreateClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    create(request: CreateClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    create(request: CreateClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Updates the specified ClickHouse cluster. */
    update(request: UpdateClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    update(request: UpdateClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    update(request: UpdateClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Deletes the specified ClickHouse cluster. */
    delete(request: DeleteClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    delete(request: DeleteClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    delete(request: DeleteClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Starts the specified ClickHouse cluster. */
    start(request: StartClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    start(request: StartClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    start(request: StartClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Stops the specified ClickHouse cluster. */
    stop(request: StopClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    stop(request: StopClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    stop(request: StopClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Moves a ClickHouse cluster to the specified folder. */
    move(request: MoveClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    move(request: MoveClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    move(request: MoveClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Adds a ZooKeeper subcluster to the specified ClickHouse cluster. */
    addZookeeper(request: AddClusterZookeeperRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    addZookeeper(request: AddClusterZookeeperRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    addZookeeper(request: AddClusterZookeeperRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Creates a backup for the specified ClickHouse cluster. */
    backup(request: BackupClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    backup(request: BackupClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    backup(request: BackupClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Creates a new ClickHouse cluster using the specified backup. */
    restore(request: RestoreClusterRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    restore(request: RestoreClusterRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    restore(request: RestoreClusterRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Reschedules planned maintenance operation. */
    rescheduleMaintenance(request: RescheduleMaintenanceRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    rescheduleMaintenance(request: RescheduleMaintenanceRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    rescheduleMaintenance(request: RescheduleMaintenanceRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Retrieves logs for the specified ClickHouse cluster. */
    listLogs(request: ListClusterLogsRequest, callback: (error: ServiceError | null, response: ListClusterLogsResponse) => void): ClientUnaryCall;
    listLogs(request: ListClusterLogsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClusterLogsResponse) => void): ClientUnaryCall;
    listLogs(request: ListClusterLogsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClusterLogsResponse) => void): ClientUnaryCall;
    /** Same as ListLogs but using server-side streaming. Also allows for `tail -f` semantics. */
    streamLogs(request: StreamClusterLogsRequest, options?: Partial<CallOptions>): ClientReadableStream<StreamLogRecord>;
    streamLogs(request: StreamClusterLogsRequest, metadata?: Metadata, options?: Partial<CallOptions>): ClientReadableStream<StreamLogRecord>;
    /** Retrieves the list of Operation resources for the specified cluster. */
    listOperations(request: ListClusterOperationsRequest, callback: (error: ServiceError | null, response: ListClusterOperationsResponse) => void): ClientUnaryCall;
    listOperations(request: ListClusterOperationsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClusterOperationsResponse) => void): ClientUnaryCall;
    listOperations(request: ListClusterOperationsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClusterOperationsResponse) => void): ClientUnaryCall;
    /** Retrieves the list of available backups for the specified ClickHouse cluster. */
    listBackups(request: ListClusterBackupsRequest, callback: (error: ServiceError | null, response: ListClusterBackupsResponse) => void): ClientUnaryCall;
    listBackups(request: ListClusterBackupsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClusterBackupsResponse) => void): ClientUnaryCall;
    listBackups(request: ListClusterBackupsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClusterBackupsResponse) => void): ClientUnaryCall;
    /** Retrieves a list of hosts for the specified cluster. */
    listHosts(request: ListClusterHostsRequest, callback: (error: ServiceError | null, response: ListClusterHostsResponse) => void): ClientUnaryCall;
    listHosts(request: ListClusterHostsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClusterHostsResponse) => void): ClientUnaryCall;
    listHosts(request: ListClusterHostsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClusterHostsResponse) => void): ClientUnaryCall;
    /** Creates new hosts for a cluster. */
    addHosts(request: AddClusterHostsRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    addHosts(request: AddClusterHostsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    addHosts(request: AddClusterHostsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Updates the specified hosts. */
    updateHosts(request: UpdateClusterHostsRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateHosts(request: UpdateClusterHostsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateHosts(request: UpdateClusterHostsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Deletes the specified hosts for a cluster. */
    deleteHosts(request: DeleteClusterHostsRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteHosts(request: DeleteClusterHostsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteHosts(request: DeleteClusterHostsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Returns the specified shard. */
    getShard(request: GetClusterShardRequest, callback: (error: ServiceError | null, response: Shard) => void): ClientUnaryCall;
    getShard(request: GetClusterShardRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Shard) => void): ClientUnaryCall;
    getShard(request: GetClusterShardRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Shard) => void): ClientUnaryCall;
    /** Retrieves a list of shards that belong to the specified cluster. */
    listShards(request: ListClusterShardsRequest, callback: (error: ServiceError | null, response: ListClusterShardsResponse) => void): ClientUnaryCall;
    listShards(request: ListClusterShardsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClusterShardsResponse) => void): ClientUnaryCall;
    listShards(request: ListClusterShardsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClusterShardsResponse) => void): ClientUnaryCall;
    /** Creates a new shard in the specified cluster. */
    addShard(request: AddClusterShardRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    addShard(request: AddClusterShardRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    addShard(request: AddClusterShardRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Modifies the specified shard. */
    updateShard(request: UpdateClusterShardRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateShard(request: UpdateClusterShardRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateShard(request: UpdateClusterShardRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Deletes the specified shard. */
    deleteShard(request: DeleteClusterShardRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteShard(request: DeleteClusterShardRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteShard(request: DeleteClusterShardRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Returns the specified shard group. */
    getShardGroup(request: GetClusterShardGroupRequest, callback: (error: ServiceError | null, response: ShardGroup) => void): ClientUnaryCall;
    getShardGroup(request: GetClusterShardGroupRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ShardGroup) => void): ClientUnaryCall;
    getShardGroup(request: GetClusterShardGroupRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ShardGroup) => void): ClientUnaryCall;
    /** Retrieves a list of shard groups that belong to specified cluster. */
    listShardGroups(request: ListClusterShardGroupsRequest, callback: (error: ServiceError | null, response: ListClusterShardGroupsResponse) => void): ClientUnaryCall;
    listShardGroups(request: ListClusterShardGroupsRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClusterShardGroupsResponse) => void): ClientUnaryCall;
    listShardGroups(request: ListClusterShardGroupsRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClusterShardGroupsResponse) => void): ClientUnaryCall;
    /** Creates a new shard group in the specified cluster. */
    createShardGroup(request: CreateClusterShardGroupRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    createShardGroup(request: CreateClusterShardGroupRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    createShardGroup(request: CreateClusterShardGroupRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Updates the specified shard group. */
    updateShardGroup(request: UpdateClusterShardGroupRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateShardGroup(request: UpdateClusterShardGroupRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateShardGroup(request: UpdateClusterShardGroupRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Deletes the specified shard group. */
    deleteShardGroup(request: DeleteClusterShardGroupRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteShardGroup(request: DeleteClusterShardGroupRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteShardGroup(request: DeleteClusterShardGroupRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Retrieves a list of external dictionaries that belong to specified cluster. */
    listExternalDictionaries(request: ListClusterExternalDictionariesRequest, callback: (error: ServiceError | null, response: ListClusterExternalDictionariesResponse) => void): ClientUnaryCall;
    listExternalDictionaries(request: ListClusterExternalDictionariesRequest, metadata: Metadata, callback: (error: ServiceError | null, response: ListClusterExternalDictionariesResponse) => void): ClientUnaryCall;
    listExternalDictionaries(request: ListClusterExternalDictionariesRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: ListClusterExternalDictionariesResponse) => void): ClientUnaryCall;
    /** Creates an external dictionary for the specified ClickHouse cluster. */
    createExternalDictionary(request: CreateClusterExternalDictionaryRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    createExternalDictionary(request: CreateClusterExternalDictionaryRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    createExternalDictionary(request: CreateClusterExternalDictionaryRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Updates an external dictionary for the specified ClickHouse cluster. */
    updateExternalDictionary(request: UpdateClusterExternalDictionaryRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateExternalDictionary(request: UpdateClusterExternalDictionaryRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    updateExternalDictionary(request: UpdateClusterExternalDictionaryRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    /** Deletes the specified external dictionary. */
    deleteExternalDictionary(request: DeleteClusterExternalDictionaryRequest, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteExternalDictionary(request: DeleteClusterExternalDictionaryRequest, metadata: Metadata, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
    deleteExternalDictionary(request: DeleteClusterExternalDictionaryRequest, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Operation) => void): ClientUnaryCall;
}
export declare const ClusterServiceClient: {
    new (address: string, credentials: ChannelCredentials, options?: Partial<ChannelOptions> | undefined): ClusterServiceClient;
    service: typeof ClusterServiceService;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in Exclude<keyof T, "$type">]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P> | "$type">, never>;
export {};
