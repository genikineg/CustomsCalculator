import _m0 from "protobufjs/minimal";
import { MaintenanceWindow, MaintenanceOperation } from "../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance";
import { TimeOfDay } from "../../../../../google/type/timeofday";
import { ClickhouseConfigSet } from "../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse";
export declare const protobufPackage = "yandex.cloud.mdb.clickhouse.v1";
/**
 * A ClickHouse Cluster resource. For more information, see the
 * [Cluster](/docs/managed-clickhouse/concepts) section in the Developer's Guide.
 */
export interface Cluster {
    $type: "yandex.cloud.mdb.clickhouse.v1.Cluster";
    /**
     * ID of the ClickHouse cluster.
     * This ID is assigned by MDB at creation time.
     */
    id: string;
    /** ID of the folder that the ClickHouse cluster belongs to. */
    folderId: string;
    /** Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format. */
    createdAt?: Date;
    /**
     * Name of the ClickHouse cluster.
     * The name is unique within the folder. 1-63 characters long.
     */
    name: string;
    /** Description of the ClickHouse cluster. 0-256 characters long. */
    description: string;
    /** Custom labels for the ClickHouse cluster as `key:value` pairs. Maximum 64 per resource. */
    labels: {
        [key: string]: string;
    };
    /** Deployment environment of the ClickHouse cluster. */
    environment: Cluster_Environment;
    /** Description of monitoring systems relevant to the ClickHouse cluster. */
    monitoring: Monitoring[];
    /** Configuration of the ClickHouse cluster. */
    config?: ClusterConfig;
    /** ID of the network that the cluster belongs to. */
    networkId: string;
    /** Aggregated cluster health. */
    health: Cluster_Health;
    /** Current state of the cluster. */
    status: Cluster_Status;
    /** ID of the service account used for access to Object Storage. */
    serviceAccountId: string;
    /** Maintenance window for the cluster. */
    maintenanceWindow?: MaintenanceWindow;
    /** Planned maintenance operation to be started for the cluster within the nearest [maintenance_window]. */
    plannedOperation?: MaintenanceOperation;
    /** User security groups */
    securityGroupIds: string[];
    /** Deletion Protection inhibits deletion of the cluster */
    deletionProtection: boolean;
}
export declare enum Cluster_Environment {
    ENVIRONMENT_UNSPECIFIED = 0,
    /**
     * PRODUCTION - Stable environment with a conservative update policy:
     * only hotfixes are applied during regular maintenance.
     */
    PRODUCTION = 1,
    /**
     * PRESTABLE - Environment with more aggressive update policy: new versions
     * are rolled out irrespective of backward compatibility.
     */
    PRESTABLE = 2,
    UNRECOGNIZED = -1
}
export declare function cluster_EnvironmentFromJSON(object: any): Cluster_Environment;
export declare function cluster_EnvironmentToJSON(object: Cluster_Environment): string;
export declare enum Cluster_Health {
    /** HEALTH_UNKNOWN - State of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN). */
    HEALTH_UNKNOWN = 0,
    /** ALIVE - Cluster is alive and well ([Host.health] for every host in the cluster is ALIVE). */
    ALIVE = 1,
    /** DEAD - Cluster is inoperable ([Host.health] for every host in the cluster is DEAD). */
    DEAD = 2,
    /** DEGRADED - Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE). */
    DEGRADED = 3,
    UNRECOGNIZED = -1
}
export declare function cluster_HealthFromJSON(object: any): Cluster_Health;
export declare function cluster_HealthToJSON(object: Cluster_Health): string;
export declare enum Cluster_Status {
    /** STATUS_UNKNOWN - Cluster state is unknown. */
    STATUS_UNKNOWN = 0,
    /** CREATING - Cluster is being created. */
    CREATING = 1,
    /** RUNNING - Cluster is running normally. */
    RUNNING = 2,
    /** ERROR - Cluster encountered a problem and cannot operate. */
    ERROR = 3,
    /** UPDATING - Cluster is being updated. */
    UPDATING = 4,
    /** STOPPING - Cluster is stopping. */
    STOPPING = 5,
    /** STOPPED - Cluster stopped. */
    STOPPED = 6,
    /** STARTING - Cluster is starting. */
    STARTING = 7,
    UNRECOGNIZED = -1
}
export declare function cluster_StatusFromJSON(object: any): Cluster_Status;
export declare function cluster_StatusToJSON(object: Cluster_Status): string;
export interface Cluster_LabelsEntry {
    $type: "yandex.cloud.mdb.clickhouse.v1.Cluster.LabelsEntry";
    key: string;
    value: string;
}
/** Monitoring system metadata. */
export interface Monitoring {
    $type: "yandex.cloud.mdb.clickhouse.v1.Monitoring";
    /** Name of the monitoring system. */
    name: string;
    /** Description of the monitoring system. */
    description: string;
    /** Link to the monitoring system charts for the ClickHouse cluster. */
    link: string;
}
export interface ClusterConfig {
    $type: "yandex.cloud.mdb.clickhouse.v1.ClusterConfig";
    /** Version of the ClickHouse server software. */
    version: string;
    /** Configuration and resource allocation for ClickHouse hosts. */
    clickhouse?: ClusterConfig_Clickhouse;
    /** Configuration and resource allocation for ZooKeeper hosts. */
    zookeeper?: ClusterConfig_Zookeeper;
    /** Time to start the daily backup, in the UTC timezone. */
    backupWindowStart?: TimeOfDay;
    /** Access policy for external services. */
    access?: Access;
    cloudStorage?: CloudStorage;
    /** Whether database management through SQL commands is enabled. */
    sqlDatabaseManagement?: boolean;
    /** Whether user management through SQL commands is enabled. */
    sqlUserManagement?: boolean;
    /** Whether cluster should use embedded Keeper instead of Zookeeper. */
    embeddedKeeper?: boolean;
}
export interface ClusterConfig_Clickhouse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ClusterConfig.Clickhouse";
    /** Configuration settings of a ClickHouse server. */
    config?: ClickhouseConfigSet;
    /** Resources allocated to ClickHouse hosts. */
    resources?: Resources;
}
export interface ClusterConfig_Zookeeper {
    $type: "yandex.cloud.mdb.clickhouse.v1.ClusterConfig.Zookeeper";
    /** Resources allocated to ZooKeeper hosts. */
    resources?: Resources;
}
export interface Shard {
    $type: "yandex.cloud.mdb.clickhouse.v1.Shard";
    /** Name of the shard. */
    name: string;
    /** ID of the cluster that the shard belongs to. */
    clusterId: string;
    /** Configuration of the shard. */
    config?: ShardConfig;
}
export interface ShardGroup {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardGroup";
    /** Name of the shard group. */
    name: string;
    /** ID of the ClickHouse cluster that the shard group belongs to. */
    clusterId: string;
    /** Description of the shard group. 0-256 characters long. */
    description: string;
    /** List of shard names contained in the shard group. */
    shardNames: string[];
}
export interface ShardConfig {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfig";
    /** ClickHouse configuration for a shard. */
    clickhouse?: ShardConfig_Clickhouse;
}
export interface ShardConfig_Clickhouse {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfig.Clickhouse";
    /** ClickHouse settings for a shard. */
    config?: ClickhouseConfigSet;
    /** Computational resources for a shard. */
    resources?: Resources;
    /**
     * Relative weight of a shard considered when writing data to the cluster.
     * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/operations/table_engines/distributed/).
     */
    weight?: number;
}
export interface Host {
    $type: "yandex.cloud.mdb.clickhouse.v1.Host";
    /**
     * Name of the ClickHouse host. The host name is assigned by MDB at creation time, and cannot be changed.
     * 1-63 characters long.
     *
     * The name is unique across all MDB hosts that exist on the platform, as it defines the FQDN of the host.
     */
    name: string;
    /** ID of the ClickHouse host. The ID is assigned by MDB at creation time. */
    clusterId: string;
    /** ID of the availability zone where the ClickHouse host resides. */
    zoneId: string;
    /** Type of the host. */
    type: Host_Type;
    /** Resources allocated to the ClickHouse host. */
    resources?: Resources;
    /** Status code of the aggregated health of the host. */
    health: Host_Health;
    /** Services provided by the host. */
    services: Service[];
    /** ID of the subnet that the host belongs to. */
    subnetId: string;
    /** Flag showing public IP assignment status to this host. */
    assignPublicIp: boolean;
    shardName: string;
}
export declare enum Host_Type {
    TYPE_UNSPECIFIED = 0,
    /** CLICKHOUSE - ClickHouse host. */
    CLICKHOUSE = 1,
    /** ZOOKEEPER - ZooKeeper host. */
    ZOOKEEPER = 2,
    UNRECOGNIZED = -1
}
export declare function host_TypeFromJSON(object: any): Host_Type;
export declare function host_TypeToJSON(object: Host_Type): string;
export declare enum Host_Health {
    /** UNKNOWN - Health of the host is unknown. */
    UNKNOWN = 0,
    /** ALIVE - The host is performing all its functions normally. */
    ALIVE = 1,
    /** DEAD - The host is inoperable, and cannot perform any of its essential functions. */
    DEAD = 2,
    /** DEGRADED - The host is degraded, and can perform only some of its essential functions. */
    DEGRADED = 3,
    UNRECOGNIZED = -1
}
export declare function host_HealthFromJSON(object: any): Host_Health;
export declare function host_HealthToJSON(object: Host_Health): string;
export interface Service {
    $type: "yandex.cloud.mdb.clickhouse.v1.Service";
    /** Type of the service provided by the host. */
    type: Service_Type;
    /** Status code of server availability. */
    health: Service_Health;
}
export declare enum Service_Type {
    TYPE_UNSPECIFIED = 0,
    /** CLICKHOUSE - The host is a ClickHouse server. */
    CLICKHOUSE = 1,
    /** ZOOKEEPER - The host is a ZooKeeper server. */
    ZOOKEEPER = 2,
    UNRECOGNIZED = -1
}
export declare function service_TypeFromJSON(object: any): Service_Type;
export declare function service_TypeToJSON(object: Service_Type): string;
export declare enum Service_Health {
    /** UNKNOWN - Health of the server is unknown. */
    UNKNOWN = 0,
    /** ALIVE - The server is working normally. */
    ALIVE = 1,
    /** DEAD - The server is dead or unresponsive. */
    DEAD = 2,
    UNRECOGNIZED = -1
}
export declare function service_HealthFromJSON(object: any): Service_Health;
export declare function service_HealthToJSON(object: Service_Health): string;
export interface Resources {
    $type: "yandex.cloud.mdb.clickhouse.v1.Resources";
    /**
     * ID of the preset for computational resources available to a host (CPU, memory etc.).
     * All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
     */
    resourcePresetId: string;
    /** Volume of the storage available to a host, in bytes. */
    diskSize: number;
    /**
     * Type of the storage environment for the host.
     * Possible values:
     * * network-hdd - network HDD drive,
     * * network-ssd - network SSD drive,
     * * local-ssd - local SSD storage.
     */
    diskTypeId: string;
}
export interface Access {
    $type: "yandex.cloud.mdb.clickhouse.v1.Access";
    /** Allow to export data from the cluster to DataLens. */
    dataLens: boolean;
    /**
     * Allow SQL queries to the cluster databases from the management console.
     *
     * See [SQL queries in the management console](/docs/managed-clickhouse/operations/web-sql-query) for more details.
     */
    webSql: boolean;
    /**
     * Allow to import data from Yandex Metrica and AppMetrica to the cluster.
     *
     * See [AppMetrica documentation](https://appmetrica.yandex.com/docs/cloud/index.html) for more details.
     */
    metrika: boolean;
    /** Allow access to cluster for Serverless. */
    serverless: boolean;
    /** Allow access for DataTransfer */
    dataTransfer: boolean;
    /** Allow access for Query */
    yandexQuery: boolean;
}
export interface CloudStorage {
    $type: "yandex.cloud.mdb.clickhouse.v1.CloudStorage";
    /** Whether to use Object Storage for storing ClickHouse data. */
    enabled: boolean;
    moveFactor?: number;
    dataCacheEnabled?: boolean;
    dataCacheMaxSize?: number;
    preferNotToMerge?: boolean;
}
export declare const Cluster: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Cluster";
    encode(message: Cluster, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Cluster;
    fromJSON(object: any): Cluster;
    toJSON(message: Cluster): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
        createdAt?: Date | undefined;
        status?: Cluster_Status | undefined;
        config?: {
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
        } | undefined;
        folderId?: string | undefined;
        labels?: {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } | undefined;
        networkId?: string | undefined;
        securityGroupIds?: string[] | undefined;
        deletionProtection?: boolean | undefined;
        serviceAccountId?: string | undefined;
        health?: Cluster_Health | undefined;
        monitoring?: {
            link?: string | undefined;
            description?: string | undefined;
            name?: string | undefined;
        }[] | undefined;
        maintenanceWindow?: {
            anytime?: {} | undefined;
            weeklyMaintenanceWindow?: {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } | undefined;
        } | undefined;
        environment?: Cluster_Environment | undefined;
        plannedOperation?: {
            info?: string | undefined;
            delayedUntil?: Date | undefined;
        } | undefined;
    } & {
        description?: string | undefined;
        id?: string | undefined;
        name?: string | undefined;
        createdAt?: Date | undefined;
        status?: Cluster_Status | undefined;
        config?: ({
            version?: string | undefined;
            zookeeper?: {
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            clickhouse?: {
                config?: {
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } | undefined;
            backupWindowStart?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } | undefined;
            access?: {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } | undefined;
            cloudStorage?: {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
        } & {
            version?: string | undefined;
            zookeeper?: ({
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["config"]["zookeeper"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["zookeeper"], "$type" | "resources">, never>) | undefined;
            clickhouse?: ({
                config?: {
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
            } & {
                config?: ({
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } & {
                    effectiveConfig?: ({
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & {
                        compression?: ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] & ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[]>, never>) | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: ({
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                        dictionaries?: ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            mysqlSource?: ({
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] & ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[]>, never>) | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                            clickhouseSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                            structure?: ({
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } & {
                                id?: ({
                                    name?: string | undefined;
                                } & {
                                    name?: string | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                key?: ({
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } & {
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                                rangeMin?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                rangeMax?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                            layout?: ({
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: ({
                                min?: number | undefined;
                                max?: number | undefined;
                            } & {
                                min?: number | undefined;
                                max?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                            httpSource?: ({
                                format?: string | undefined;
                                url?: string | undefined;
                            } & {
                                format?: string | undefined;
                                url?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                            mongodbSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                            postgresqlSource?: ({
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & {
                                port?: number | undefined;
                                hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        graphiteRollup?: ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] & ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        } & {
                            name?: string | undefined;
                            patterns?: ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] & ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            } & {
                                function?: string | undefined;
                                retention?: ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] & ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[]>, never>) | undefined;
                                regexp?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[]>, never>) | undefined;
                        kafka?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        kafkaTopics?: ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            settings?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        rabbitmq?: ({
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                    userConfig?: ({
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & {
                        compression?: ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] & ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["compression"], "$type" | keyof {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[]>, never>) | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: ({
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                        dictionaries?: ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            mysqlSource?: ({
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] & ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[]>, never>) | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                            clickhouseSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                            structure?: ({
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } & {
                                id?: ({
                                    name?: string | undefined;
                                } & {
                                    name?: string | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                key?: ({
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } & {
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                                rangeMin?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                rangeMax?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                            layout?: ({
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: ({
                                min?: number | undefined;
                                max?: number | undefined;
                            } & {
                                min?: number | undefined;
                                max?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                            httpSource?: ({
                                format?: string | undefined;
                                url?: string | undefined;
                            } & {
                                format?: string | undefined;
                                url?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                            mongodbSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                            postgresqlSource?: ({
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & {
                                port?: number | undefined;
                                hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        graphiteRollup?: ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] & ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        } & {
                            name?: string | undefined;
                            patterns?: ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] & ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            } & {
                                function?: string | undefined;
                                retention?: ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] & ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[]>, never>) | undefined;
                                regexp?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[]>, never>) | undefined;
                        kafka?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        kafkaTopics?: ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            settings?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        rabbitmq?: ({
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                    defaultConfig?: ({
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & {
                        compression?: ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] & ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["compression"], "$type" | keyof {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[]>, never>) | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: ({
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                        dictionaries?: ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            mysqlSource?: ({
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] & ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[]>, never>) | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                            clickhouseSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                            structure?: ({
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } & {
                                id?: ({
                                    name?: string | undefined;
                                } & {
                                    name?: string | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                key?: ({
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } & {
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                                rangeMin?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                rangeMax?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                            layout?: ({
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: ({
                                min?: number | undefined;
                                max?: number | undefined;
                            } & {
                                min?: number | undefined;
                                max?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                            httpSource?: ({
                                format?: string | undefined;
                                url?: string | undefined;
                            } & {
                                format?: string | undefined;
                                url?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                            mongodbSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                            postgresqlSource?: ({
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & {
                                port?: number | undefined;
                                hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        graphiteRollup?: ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] & ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        } & {
                            name?: string | undefined;
                            patterns?: ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] & ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            } & {
                                function?: string | undefined;
                                retention?: ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] & ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[]>, never>) | undefined;
                                regexp?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[]>, never>) | undefined;
                        kafka?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        kafkaTopics?: ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            settings?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        rabbitmq?: ({
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["config"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            } & Record<Exclude<keyof I["config"]["clickhouse"], "$type" | "config" | "resources">, never>) | undefined;
            backupWindowStart?: ({
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & {
                seconds?: number | undefined;
                nanos?: number | undefined;
                hours?: number | undefined;
                minutes?: number | undefined;
            } & Record<Exclude<keyof I["config"]["backupWindowStart"], "$type" | "seconds" | "nanos" | "hours" | "minutes">, never>) | undefined;
            access?: ({
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & {
                dataLens?: boolean | undefined;
                webSql?: boolean | undefined;
                metrika?: boolean | undefined;
                serverless?: boolean | undefined;
                dataTransfer?: boolean | undefined;
                yandexQuery?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["access"], "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>) | undefined;
            cloudStorage?: ({
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & {
                enabled?: boolean | undefined;
                moveFactor?: number | undefined;
                dataCacheEnabled?: boolean | undefined;
                dataCacheMaxSize?: number | undefined;
                preferNotToMerge?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["cloudStorage"], "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>) | undefined;
            sqlDatabaseManagement?: boolean | undefined;
            sqlUserManagement?: boolean | undefined;
            embeddedKeeper?: boolean | undefined;
        } & Record<Exclude<keyof I["config"], "$type" | "version" | "zookeeper" | "clickhouse" | "backupWindowStart" | "access" | "cloudStorage" | "sqlDatabaseManagement" | "sqlUserManagement" | "embeddedKeeper">, never>) | undefined;
        folderId?: string | undefined;
        labels?: ({
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & {
            [x: string]: string | undefined;
            [x: number]: string | undefined;
        } & Record<Exclude<keyof I["labels"], string | number>, never>) | undefined;
        networkId?: string | undefined;
        securityGroupIds?: (string[] & string[] & Record<Exclude<keyof I["securityGroupIds"], "$type" | keyof string[]>, never>) | undefined;
        deletionProtection?: boolean | undefined;
        serviceAccountId?: string | undefined;
        health?: Cluster_Health | undefined;
        monitoring?: ({
            link?: string | undefined;
            description?: string | undefined;
            name?: string | undefined;
        }[] & ({
            link?: string | undefined;
            description?: string | undefined;
            name?: string | undefined;
        } & {
            link?: string | undefined;
            description?: string | undefined;
            name?: string | undefined;
        } & Record<Exclude<keyof I["monitoring"][number], "$type" | "link" | "description" | "name">, never>)[] & Record<Exclude<keyof I["monitoring"], "$type" | keyof {
            link?: string | undefined;
            description?: string | undefined;
            name?: string | undefined;
        }[]>, never>) | undefined;
        maintenanceWindow?: ({
            anytime?: {} | undefined;
            weeklyMaintenanceWindow?: {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } | undefined;
        } & {
            anytime?: ({} & {} & Record<Exclude<keyof I["maintenanceWindow"]["anytime"], "$type">, never>) | undefined;
            weeklyMaintenanceWindow?: ({
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } & {
                hour?: number | undefined;
                day?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/maintenance").WeeklyMaintenanceWindow_WeekDay | undefined;
            } & Record<Exclude<keyof I["maintenanceWindow"]["weeklyMaintenanceWindow"], "$type" | "hour" | "day">, never>) | undefined;
        } & Record<Exclude<keyof I["maintenanceWindow"], "$type" | "anytime" | "weeklyMaintenanceWindow">, never>) | undefined;
        environment?: Cluster_Environment | undefined;
        plannedOperation?: ({
            info?: string | undefined;
            delayedUntil?: Date | undefined;
        } & {
            info?: string | undefined;
            delayedUntil?: Date | undefined;
        } & Record<Exclude<keyof I["plannedOperation"], "$type" | "info" | "delayedUntil">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "id" | "name" | "createdAt" | "status" | "config" | "folderId" | "labels" | "networkId" | "securityGroupIds" | "deletionProtection" | "serviceAccountId" | "health" | "monitoring" | "maintenanceWindow" | "environment" | "plannedOperation">, never>>(object: I): Cluster;
};
export declare const Cluster_LabelsEntry: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Cluster.LabelsEntry";
    encode(message: Cluster_LabelsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Cluster_LabelsEntry;
    fromJSON(object: any): Cluster_LabelsEntry;
    toJSON(message: Cluster_LabelsEntry): unknown;
    fromPartial<I extends {
        value?: string | undefined;
        key?: string | undefined;
    } & {
        value?: string | undefined;
        key?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "value" | "key">, never>>(object: I): Cluster_LabelsEntry;
};
export declare const Monitoring: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Monitoring";
    encode(message: Monitoring, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Monitoring;
    fromJSON(object: any): Monitoring;
    toJSON(message: Monitoring): unknown;
    fromPartial<I extends {
        link?: string | undefined;
        description?: string | undefined;
        name?: string | undefined;
    } & {
        link?: string | undefined;
        description?: string | undefined;
        name?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "link" | "description" | "name">, never>>(object: I): Monitoring;
};
export declare const ClusterConfig: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ClusterConfig";
    encode(message: ClusterConfig, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ClusterConfig;
    fromJSON(object: any): ClusterConfig;
    toJSON(message: ClusterConfig): unknown;
    fromPartial<I extends {
        version?: string | undefined;
        zookeeper?: {
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } | undefined;
        clickhouse?: {
            config?: {
                effectiveConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                userConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                defaultConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } | undefined;
        backupWindowStart?: {
            seconds?: number | undefined;
            nanos?: number | undefined;
            hours?: number | undefined;
            minutes?: number | undefined;
        } | undefined;
        access?: {
            dataLens?: boolean | undefined;
            webSql?: boolean | undefined;
            metrika?: boolean | undefined;
            serverless?: boolean | undefined;
            dataTransfer?: boolean | undefined;
            yandexQuery?: boolean | undefined;
        } | undefined;
        cloudStorage?: {
            enabled?: boolean | undefined;
            moveFactor?: number | undefined;
            dataCacheEnabled?: boolean | undefined;
            dataCacheMaxSize?: number | undefined;
            preferNotToMerge?: boolean | undefined;
        } | undefined;
        sqlDatabaseManagement?: boolean | undefined;
        sqlUserManagement?: boolean | undefined;
        embeddedKeeper?: boolean | undefined;
    } & {
        version?: string | undefined;
        zookeeper?: ({
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } & {
            resources?: ({
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & Record<Exclude<keyof I["zookeeper"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        } & Record<Exclude<keyof I["zookeeper"], "$type" | "resources">, never>) | undefined;
        clickhouse?: ({
            config?: {
                effectiveConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                userConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                defaultConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
        } & {
            config?: ({
                effectiveConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                userConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                defaultConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
            } & {
                effectiveConfig?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                userConfig?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                defaultConfig?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
            resources?: ({
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        } & Record<Exclude<keyof I["clickhouse"], "$type" | "config" | "resources">, never>) | undefined;
        backupWindowStart?: ({
            seconds?: number | undefined;
            nanos?: number | undefined;
            hours?: number | undefined;
            minutes?: number | undefined;
        } & {
            seconds?: number | undefined;
            nanos?: number | undefined;
            hours?: number | undefined;
            minutes?: number | undefined;
        } & Record<Exclude<keyof I["backupWindowStart"], "$type" | "seconds" | "nanos" | "hours" | "minutes">, never>) | undefined;
        access?: ({
            dataLens?: boolean | undefined;
            webSql?: boolean | undefined;
            metrika?: boolean | undefined;
            serverless?: boolean | undefined;
            dataTransfer?: boolean | undefined;
            yandexQuery?: boolean | undefined;
        } & {
            dataLens?: boolean | undefined;
            webSql?: boolean | undefined;
            metrika?: boolean | undefined;
            serverless?: boolean | undefined;
            dataTransfer?: boolean | undefined;
            yandexQuery?: boolean | undefined;
        } & Record<Exclude<keyof I["access"], "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>) | undefined;
        cloudStorage?: ({
            enabled?: boolean | undefined;
            moveFactor?: number | undefined;
            dataCacheEnabled?: boolean | undefined;
            dataCacheMaxSize?: number | undefined;
            preferNotToMerge?: boolean | undefined;
        } & {
            enabled?: boolean | undefined;
            moveFactor?: number | undefined;
            dataCacheEnabled?: boolean | undefined;
            dataCacheMaxSize?: number | undefined;
            preferNotToMerge?: boolean | undefined;
        } & Record<Exclude<keyof I["cloudStorage"], "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>) | undefined;
        sqlDatabaseManagement?: boolean | undefined;
        sqlUserManagement?: boolean | undefined;
        embeddedKeeper?: boolean | undefined;
    } & Record<Exclude<keyof I, "$type" | "version" | "zookeeper" | "clickhouse" | "backupWindowStart" | "access" | "cloudStorage" | "sqlDatabaseManagement" | "sqlUserManagement" | "embeddedKeeper">, never>>(object: I): ClusterConfig;
};
export declare const ClusterConfig_Clickhouse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ClusterConfig.Clickhouse";
    encode(message: ClusterConfig_Clickhouse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ClusterConfig_Clickhouse;
    fromJSON(object: any): ClusterConfig_Clickhouse;
    toJSON(message: ClusterConfig_Clickhouse): unknown;
    fromPartial<I extends {
        config?: {
            effectiveConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            userConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            defaultConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
        } | undefined;
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
    } & {
        config?: ({
            effectiveConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            userConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            defaultConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
        } & {
            effectiveConfig?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            userConfig?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            defaultConfig?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
        } & Record<Exclude<keyof I["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "config" | "resources">, never>>(object: I): ClusterConfig_Clickhouse;
};
export declare const ClusterConfig_Zookeeper: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ClusterConfig.Zookeeper";
    encode(message: ClusterConfig_Zookeeper, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ClusterConfig_Zookeeper;
    fromJSON(object: any): ClusterConfig_Zookeeper;
    toJSON(message: ClusterConfig_Zookeeper): unknown;
    fromPartial<I extends {
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
    } & {
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "resources">, never>>(object: I): ClusterConfig_Zookeeper;
};
export declare const Shard: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Shard";
    encode(message: Shard, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Shard;
    fromJSON(object: any): Shard;
    toJSON(message: Shard): unknown;
    fromPartial<I extends {
        name?: string | undefined;
        config?: {
            clickhouse?: {
                config?: {
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } | undefined;
        } | undefined;
        clusterId?: string | undefined;
    } & {
        name?: string | undefined;
        config?: ({
            clickhouse?: {
                config?: {
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } | undefined;
        } & {
            clickhouse?: ({
                config?: {
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } | undefined;
                resources?: {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } | undefined;
                weight?: number | undefined;
            } & {
                config?: ({
                    effectiveConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    userConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                    defaultConfig?: {
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } | undefined;
                } & {
                    effectiveConfig?: ({
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & {
                        compression?: ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] & ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[]>, never>) | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: ({
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                        dictionaries?: ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            mysqlSource?: ({
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] & ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[]>, never>) | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                            clickhouseSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                            structure?: ({
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } & {
                                id?: ({
                                    name?: string | undefined;
                                } & {
                                    name?: string | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                key?: ({
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } & {
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                                rangeMin?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                rangeMax?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                            layout?: ({
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: ({
                                min?: number | undefined;
                                max?: number | undefined;
                            } & {
                                min?: number | undefined;
                                max?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                            httpSource?: ({
                                format?: string | undefined;
                                url?: string | undefined;
                            } & {
                                format?: string | undefined;
                                url?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                            mongodbSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                            postgresqlSource?: ({
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & {
                                port?: number | undefined;
                                hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        graphiteRollup?: ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] & ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        } & {
                            name?: string | undefined;
                            patterns?: ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] & ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            } & {
                                function?: string | undefined;
                                retention?: ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] & ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[]>, never>) | undefined;
                                regexp?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[]>, never>) | undefined;
                        kafka?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        kafkaTopics?: ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            settings?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        rabbitmq?: ({
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                    userConfig?: ({
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & {
                        compression?: ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] & ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["compression"], "$type" | keyof {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[]>, never>) | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: ({
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                        dictionaries?: ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            mysqlSource?: ({
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] & ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[]>, never>) | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                            clickhouseSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                            structure?: ({
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } & {
                                id?: ({
                                    name?: string | undefined;
                                } & {
                                    name?: string | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                key?: ({
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } & {
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                                rangeMin?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                rangeMax?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                            layout?: ({
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: ({
                                min?: number | undefined;
                                max?: number | undefined;
                            } & {
                                min?: number | undefined;
                                max?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                            httpSource?: ({
                                format?: string | undefined;
                                url?: string | undefined;
                            } & {
                                format?: string | undefined;
                                url?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                            mongodbSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                            postgresqlSource?: ({
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & {
                                port?: number | undefined;
                                hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        graphiteRollup?: ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] & ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        } & {
                            name?: string | undefined;
                            patterns?: ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] & ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            } & {
                                function?: string | undefined;
                                retention?: ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] & ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[]>, never>) | undefined;
                                regexp?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[]>, never>) | undefined;
                        kafka?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        kafkaTopics?: ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            settings?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        rabbitmq?: ({
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                    defaultConfig?: ({
                        compression?: {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } | undefined;
                        dictionaries?: {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] | undefined;
                        graphiteRollup?: {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] | undefined;
                        kafka?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                        kafkaTopics?: {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] | undefined;
                        rabbitmq?: {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & {
                        compression?: ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[] & ({
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["compression"], "$type" | keyof {
                            level?: number | undefined;
                            method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                            minPartSize?: number | undefined;
                            minPartSizeRatio?: number | undefined;
                        }[]>, never>) | undefined;
                        timezone?: string | undefined;
                        logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        geobaseUri?: string | undefined;
                        textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                        mergeTree?: ({
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & {
                            replicatedDeduplicationWindow?: number | undefined;
                            replicatedDeduplicationWindowSeconds?: number | undefined;
                            partsToDelayInsert?: number | undefined;
                            partsToThrowInsert?: number | undefined;
                            inactivePartsToDelayInsert?: number | undefined;
                            inactivePartsToThrowInsert?: number | undefined;
                            maxReplicatedMergesInQueue?: number | undefined;
                            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                            maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                            maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                            minBytesForWidePart?: number | undefined;
                            minRowsForWidePart?: number | undefined;
                            ttlOnlyDropParts?: boolean | undefined;
                            allowRemoteFsZeroCopyReplication?: boolean | undefined;
                            mergeWithTtlTimeout?: number | undefined;
                            mergeWithRecompressionTtlTimeout?: number | undefined;
                            maxPartsInTotal?: number | undefined;
                            maxNumberOfMergesWithTtlInPool?: number | undefined;
                            cleanupDelayPeriod?: number | undefined;
                            numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                            maxAvgPartSizeForTooManyParts?: number | undefined;
                            minAgeToForceMergeSeconds?: number | undefined;
                            minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                            mergeSelectingSleepMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                        dictionaries?: ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            mysqlSource?: ({
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] & ({
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[]>, never>) | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                            clickhouseSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                            structure?: ({
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } & {
                                id?: ({
                                    name?: string | undefined;
                                } & {
                                    name?: string | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                                key?: ({
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } & {
                                    attributes?: ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] & ({
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[]>, never>) | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                                rangeMin?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                                rangeMax?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                            layout?: ({
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: ({
                                min?: number | undefined;
                                max?: number | undefined;
                            } & {
                                min?: number | undefined;
                                max?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                            httpSource?: ({
                                format?: string | undefined;
                                url?: string | undefined;
                            } & {
                                format?: string | undefined;
                                url?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                            mongodbSource?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                            postgresqlSource?: ({
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & {
                                port?: number | undefined;
                                hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                            name?: string | undefined;
                            mysqlSource?: {
                                port?: number | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                replicas?: {
                                    port?: number | undefined;
                                    host?: string | undefined;
                                    user?: string | undefined;
                                    password?: string | undefined;
                                    priority?: number | undefined;
                                }[] | undefined;
                                where?: string | undefined;
                                invalidateQuery?: string | undefined;
                            } | undefined;
                            clickhouseSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                where?: string | undefined;
                            } | undefined;
                            structure?: {
                                id?: {
                                    name?: string | undefined;
                                } | undefined;
                                key?: {
                                    attributes?: {
                                        type?: string | undefined;
                                        name?: string | undefined;
                                        expression?: string | undefined;
                                        nullValue?: string | undefined;
                                        hierarchical?: boolean | undefined;
                                        injective?: boolean | undefined;
                                    }[] | undefined;
                                } | undefined;
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                                rangeMin?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                                rangeMax?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } | undefined;
                            } | undefined;
                            layout?: {
                                type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                                sizeInCells?: number | undefined;
                            } | undefined;
                            fixedLifetime?: number | undefined;
                            lifetimeRange?: {
                                min?: number | undefined;
                                max?: number | undefined;
                            } | undefined;
                            httpSource?: {
                                format?: string | undefined;
                                url?: string | undefined;
                            } | undefined;
                            mongodbSource?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                options?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                db?: string | undefined;
                                collection?: string | undefined;
                            } | undefined;
                            postgresqlSource?: {
                                port?: number | undefined;
                                hosts?: string[] | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                table?: string | undefined;
                                db?: string | undefined;
                                invalidateQuery?: string | undefined;
                                sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        graphiteRollup?: ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[] & ({
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        } & {
                            name?: string | undefined;
                            patterns?: ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] & ({
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            } & {
                                function?: string | undefined;
                                retention?: ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] & ({
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[]>, never>) | undefined;
                                regexp?: string | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                            name?: string | undefined;
                            patterns?: {
                                function?: string | undefined;
                                retention?: {
                                    age?: number | undefined;
                                    precision?: number | undefined;
                                }[] | undefined;
                                regexp?: string | undefined;
                            }[] | undefined;
                        }[]>, never>) | undefined;
                        kafka?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        kafkaTopics?: ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[] & ({
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        } & {
                            name?: string | undefined;
                            settings?: ({
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                            name?: string | undefined;
                            settings?: {
                                securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                                saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                                saslUsername?: string | undefined;
                                saslPassword?: string | undefined;
                                enableSslCertificateVerification?: boolean | undefined;
                                maxPollIntervalMs?: number | undefined;
                                sessionTimeoutMs?: number | undefined;
                            } | undefined;
                        }[]>, never>) | undefined;
                        rabbitmq?: ({
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & {
                            password?: string | undefined;
                            username?: string | undefined;
                            vhost?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                        maxConnections?: number | undefined;
                        maxConcurrentQueries?: number | undefined;
                        keepAliveTimeout?: number | undefined;
                        uncompressedCacheSize?: number | undefined;
                        markCacheSize?: number | undefined;
                        maxTableSizeToDrop?: number | undefined;
                        maxPartitionSizeToDrop?: number | undefined;
                        builtinDictionariesReloadInterval?: number | undefined;
                        queryLogRetentionSize?: number | undefined;
                        queryLogRetentionTime?: number | undefined;
                        queryThreadLogEnabled?: boolean | undefined;
                        queryThreadLogRetentionSize?: number | undefined;
                        queryThreadLogRetentionTime?: number | undefined;
                        partLogRetentionSize?: number | undefined;
                        partLogRetentionTime?: number | undefined;
                        metricLogEnabled?: boolean | undefined;
                        metricLogRetentionSize?: number | undefined;
                        metricLogRetentionTime?: number | undefined;
                        traceLogEnabled?: boolean | undefined;
                        traceLogRetentionSize?: number | undefined;
                        traceLogRetentionTime?: number | undefined;
                        textLogEnabled?: boolean | undefined;
                        textLogRetentionSize?: number | undefined;
                        textLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogEnabled?: boolean | undefined;
                        backgroundPoolSize?: number | undefined;
                        backgroundSchedulePoolSize?: number | undefined;
                        backgroundFetchesPoolSize?: number | undefined;
                        backgroundMovePoolSize?: number | undefined;
                        backgroundDistributedSchedulePoolSize?: number | undefined;
                        backgroundBufferFlushSchedulePoolSize?: number | undefined;
                        backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                        defaultDatabase?: string | undefined;
                        totalMemoryProfilerStep?: number | undefined;
                        totalMemoryTrackerSampleProbability?: number | undefined;
                        backgroundCommonPoolSize?: number | undefined;
                        backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                        queryViewsLogEnabled?: boolean | undefined;
                        queryViewsLogRetentionSize?: number | undefined;
                        queryViewsLogRetentionTime?: number | undefined;
                        asynchronousMetricLogEnabled?: boolean | undefined;
                        asynchronousMetricLogRetentionSize?: number | undefined;
                        asynchronousMetricLogRetentionTime?: number | undefined;
                        opentelemetrySpanLogRetentionSize?: number | undefined;
                        opentelemetrySpanLogRetentionTime?: number | undefined;
                        sessionLogEnabled?: boolean | undefined;
                        sessionLogRetentionSize?: number | undefined;
                        sessionLogRetentionTime?: number | undefined;
                        zookeeperLogEnabled?: boolean | undefined;
                        zookeeperLogRetentionSize?: number | undefined;
                        zookeeperLogRetentionTime?: number | undefined;
                        asynchronousInsertLogEnabled?: boolean | undefined;
                        asynchronousInsertLogRetentionSize?: number | undefined;
                        asynchronousInsertLogRetentionTime?: number | undefined;
                        geobaseEnabled?: boolean | undefined;
                    } & Record<Exclude<keyof I["config"]["clickhouse"]["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["clickhouse"]["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
                resources?: ({
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & {
                    diskTypeId?: string | undefined;
                    diskSize?: number | undefined;
                    resourcePresetId?: string | undefined;
                } & Record<Exclude<keyof I["config"]["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
                weight?: number | undefined;
            } & Record<Exclude<keyof I["config"]["clickhouse"], "$type" | "config" | "resources" | "weight">, never>) | undefined;
        } & Record<Exclude<keyof I["config"], "$type" | "clickhouse">, never>) | undefined;
        clusterId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "name" | "config" | "clusterId">, never>>(object: I): Shard;
};
export declare const ShardGroup: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardGroup";
    encode(message: ShardGroup, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ShardGroup;
    fromJSON(object: any): ShardGroup;
    toJSON(message: ShardGroup): unknown;
    fromPartial<I extends {
        description?: string | undefined;
        name?: string | undefined;
        clusterId?: string | undefined;
        shardNames?: string[] | undefined;
    } & {
        description?: string | undefined;
        name?: string | undefined;
        clusterId?: string | undefined;
        shardNames?: (string[] & string[] & Record<Exclude<keyof I["shardNames"], "$type" | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "description" | "name" | "clusterId" | "shardNames">, never>>(object: I): ShardGroup;
};
export declare const ShardConfig: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfig";
    encode(message: ShardConfig, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ShardConfig;
    fromJSON(object: any): ShardConfig;
    toJSON(message: ShardConfig): unknown;
    fromPartial<I extends {
        clickhouse?: {
            config?: {
                effectiveConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                userConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                defaultConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            weight?: number | undefined;
        } | undefined;
    } & {
        clickhouse?: ({
            config?: {
                effectiveConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                userConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                defaultConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
            } | undefined;
            resources?: {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } | undefined;
            weight?: number | undefined;
        } & {
            config?: ({
                effectiveConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                userConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
                defaultConfig?: {
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } | undefined;
            } & {
                effectiveConfig?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                userConfig?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
                defaultConfig?: ({
                    compression?: {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } | undefined;
                    dictionaries?: {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] | undefined;
                    graphiteRollup?: {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] | undefined;
                    kafka?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                    kafkaTopics?: {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] | undefined;
                    rabbitmq?: {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & {
                    compression?: ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[] & ({
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["compression"], "$type" | keyof {
                        level?: number | undefined;
                        method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                        minPartSize?: number | undefined;
                        minPartSizeRatio?: number | undefined;
                    }[]>, never>) | undefined;
                    timezone?: string | undefined;
                    logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    geobaseUri?: string | undefined;
                    textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                    mergeTree?: ({
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & {
                        replicatedDeduplicationWindow?: number | undefined;
                        replicatedDeduplicationWindowSeconds?: number | undefined;
                        partsToDelayInsert?: number | undefined;
                        partsToThrowInsert?: number | undefined;
                        inactivePartsToDelayInsert?: number | undefined;
                        inactivePartsToThrowInsert?: number | undefined;
                        maxReplicatedMergesInQueue?: number | undefined;
                        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                        maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                        maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                        minBytesForWidePart?: number | undefined;
                        minRowsForWidePart?: number | undefined;
                        ttlOnlyDropParts?: boolean | undefined;
                        allowRemoteFsZeroCopyReplication?: boolean | undefined;
                        mergeWithTtlTimeout?: number | undefined;
                        mergeWithRecompressionTtlTimeout?: number | undefined;
                        maxPartsInTotal?: number | undefined;
                        maxNumberOfMergesWithTtlInPool?: number | undefined;
                        cleanupDelayPeriod?: number | undefined;
                        numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                        maxAvgPartSizeForTooManyParts?: number | undefined;
                        minAgeToForceMergeSeconds?: number | undefined;
                        minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                        mergeSelectingSleepMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                    dictionaries?: ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        mysqlSource?: ({
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] & ({
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[]>, never>) | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                        clickhouseSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                        structure?: ({
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } & {
                            id?: ({
                                name?: string | undefined;
                            } & {
                                name?: string | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                            key?: ({
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } & {
                                attributes?: ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] & ({
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[]>, never>) | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                            rangeMin?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                            rangeMax?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                        layout?: ({
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: ({
                            min?: number | undefined;
                            max?: number | undefined;
                        } & {
                            min?: number | undefined;
                            max?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                        httpSource?: ({
                            format?: string | undefined;
                            url?: string | undefined;
                        } & {
                            format?: string | undefined;
                            url?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                        mongodbSource?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                        postgresqlSource?: ({
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & {
                            port?: number | undefined;
                            hosts?: (string[] & string[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                        name?: string | undefined;
                        mysqlSource?: {
                            port?: number | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            replicas?: {
                                port?: number | undefined;
                                host?: string | undefined;
                                user?: string | undefined;
                                password?: string | undefined;
                                priority?: number | undefined;
                            }[] | undefined;
                            where?: string | undefined;
                            invalidateQuery?: string | undefined;
                        } | undefined;
                        clickhouseSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            where?: string | undefined;
                        } | undefined;
                        structure?: {
                            id?: {
                                name?: string | undefined;
                            } | undefined;
                            key?: {
                                attributes?: {
                                    type?: string | undefined;
                                    name?: string | undefined;
                                    expression?: string | undefined;
                                    nullValue?: string | undefined;
                                    hierarchical?: boolean | undefined;
                                    injective?: boolean | undefined;
                                }[] | undefined;
                            } | undefined;
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                            rangeMin?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                            rangeMax?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } | undefined;
                        } | undefined;
                        layout?: {
                            type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                            sizeInCells?: number | undefined;
                        } | undefined;
                        fixedLifetime?: number | undefined;
                        lifetimeRange?: {
                            min?: number | undefined;
                            max?: number | undefined;
                        } | undefined;
                        httpSource?: {
                            format?: string | undefined;
                            url?: string | undefined;
                        } | undefined;
                        mongodbSource?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            options?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            db?: string | undefined;
                            collection?: string | undefined;
                        } | undefined;
                        postgresqlSource?: {
                            port?: number | undefined;
                            hosts?: string[] | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            table?: string | undefined;
                            db?: string | undefined;
                            invalidateQuery?: string | undefined;
                            sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    graphiteRollup?: ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[] & ({
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    } & {
                        name?: string | undefined;
                        patterns?: ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] & ({
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        } & {
                            function?: string | undefined;
                            retention?: ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] & ({
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & {
                                age?: number | undefined;
                                precision?: number | undefined;
                            } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[]>, never>) | undefined;
                            regexp?: string | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                        name?: string | undefined;
                        patterns?: {
                            function?: string | undefined;
                            retention?: {
                                age?: number | undefined;
                                precision?: number | undefined;
                            }[] | undefined;
                            regexp?: string | undefined;
                        }[] | undefined;
                    }[]>, never>) | undefined;
                    kafka?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    kafkaTopics?: ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[] & ({
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    } & {
                        name?: string | undefined;
                        settings?: ({
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                        name?: string | undefined;
                        settings?: {
                            securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                            saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                            saslUsername?: string | undefined;
                            saslPassword?: string | undefined;
                            enableSslCertificateVerification?: boolean | undefined;
                            maxPollIntervalMs?: number | undefined;
                            sessionTimeoutMs?: number | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                    rabbitmq?: ({
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & {
                        password?: string | undefined;
                        username?: string | undefined;
                        vhost?: string | undefined;
                    } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                    maxConnections?: number | undefined;
                    maxConcurrentQueries?: number | undefined;
                    keepAliveTimeout?: number | undefined;
                    uncompressedCacheSize?: number | undefined;
                    markCacheSize?: number | undefined;
                    maxTableSizeToDrop?: number | undefined;
                    maxPartitionSizeToDrop?: number | undefined;
                    builtinDictionariesReloadInterval?: number | undefined;
                    queryLogRetentionSize?: number | undefined;
                    queryLogRetentionTime?: number | undefined;
                    queryThreadLogEnabled?: boolean | undefined;
                    queryThreadLogRetentionSize?: number | undefined;
                    queryThreadLogRetentionTime?: number | undefined;
                    partLogRetentionSize?: number | undefined;
                    partLogRetentionTime?: number | undefined;
                    metricLogEnabled?: boolean | undefined;
                    metricLogRetentionSize?: number | undefined;
                    metricLogRetentionTime?: number | undefined;
                    traceLogEnabled?: boolean | undefined;
                    traceLogRetentionSize?: number | undefined;
                    traceLogRetentionTime?: number | undefined;
                    textLogEnabled?: boolean | undefined;
                    textLogRetentionSize?: number | undefined;
                    textLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogEnabled?: boolean | undefined;
                    backgroundPoolSize?: number | undefined;
                    backgroundSchedulePoolSize?: number | undefined;
                    backgroundFetchesPoolSize?: number | undefined;
                    backgroundMovePoolSize?: number | undefined;
                    backgroundDistributedSchedulePoolSize?: number | undefined;
                    backgroundBufferFlushSchedulePoolSize?: number | undefined;
                    backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                    defaultDatabase?: string | undefined;
                    totalMemoryProfilerStep?: number | undefined;
                    totalMemoryTrackerSampleProbability?: number | undefined;
                    backgroundCommonPoolSize?: number | undefined;
                    backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                    queryViewsLogEnabled?: boolean | undefined;
                    queryViewsLogRetentionSize?: number | undefined;
                    queryViewsLogRetentionTime?: number | undefined;
                    asynchronousMetricLogEnabled?: boolean | undefined;
                    asynchronousMetricLogRetentionSize?: number | undefined;
                    asynchronousMetricLogRetentionTime?: number | undefined;
                    opentelemetrySpanLogRetentionSize?: number | undefined;
                    opentelemetrySpanLogRetentionTime?: number | undefined;
                    sessionLogEnabled?: boolean | undefined;
                    sessionLogRetentionSize?: number | undefined;
                    sessionLogRetentionTime?: number | undefined;
                    zookeeperLogEnabled?: boolean | undefined;
                    zookeeperLogRetentionSize?: number | undefined;
                    zookeeperLogRetentionTime?: number | undefined;
                    asynchronousInsertLogEnabled?: boolean | undefined;
                    asynchronousInsertLogRetentionSize?: number | undefined;
                    asynchronousInsertLogRetentionTime?: number | undefined;
                    geobaseEnabled?: boolean | undefined;
                } & Record<Exclude<keyof I["clickhouse"]["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
            resources?: ({
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & {
                diskTypeId?: string | undefined;
                diskSize?: number | undefined;
                resourcePresetId?: string | undefined;
            } & Record<Exclude<keyof I["clickhouse"]["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
            weight?: number | undefined;
        } & Record<Exclude<keyof I["clickhouse"], "$type" | "config" | "resources" | "weight">, never>) | undefined;
    } & Record<Exclude<keyof I, "$type" | "clickhouse">, never>>(object: I): ShardConfig;
};
export declare const ShardConfig_Clickhouse: {
    $type: "yandex.cloud.mdb.clickhouse.v1.ShardConfig.Clickhouse";
    encode(message: ShardConfig_Clickhouse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ShardConfig_Clickhouse;
    fromJSON(object: any): ShardConfig_Clickhouse;
    toJSON(message: ShardConfig_Clickhouse): unknown;
    fromPartial<I extends {
        config?: {
            effectiveConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            userConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            defaultConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
        } | undefined;
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
        weight?: number | undefined;
    } & {
        config?: ({
            effectiveConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            userConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
            defaultConfig?: {
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } | undefined;
        } & {
            effectiveConfig?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["effectiveConfig"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["config"]["effectiveConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["effectiveConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            userConfig?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["userConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["userConfig"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["config"]["userConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["userConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
            defaultConfig?: ({
                compression?: {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } | undefined;
                dictionaries?: {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] | undefined;
                graphiteRollup?: {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] | undefined;
                kafka?: {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } | undefined;
                kafkaTopics?: {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] | undefined;
                rabbitmq?: {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & {
                compression?: ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[] & ({
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["compression"][number], "$type" | "level" | "method" | "minPartSize" | "minPartSizeRatio">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["compression"], "$type" | keyof {
                    level?: number | undefined;
                    method?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Compression_Method | undefined;
                    minPartSize?: number | undefined;
                    minPartSizeRatio?: number | undefined;
                }[]>, never>) | undefined;
                timezone?: string | undefined;
                logLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                geobaseUri?: string | undefined;
                textLogLevel?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_LogLevel | undefined;
                mergeTree?: ({
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & {
                    replicatedDeduplicationWindow?: number | undefined;
                    replicatedDeduplicationWindowSeconds?: number | undefined;
                    partsToDelayInsert?: number | undefined;
                    partsToThrowInsert?: number | undefined;
                    inactivePartsToDelayInsert?: number | undefined;
                    inactivePartsToThrowInsert?: number | undefined;
                    maxReplicatedMergesInQueue?: number | undefined;
                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number | undefined;
                    maxBytesToMergeAtMinSpaceInPool?: number | undefined;
                    maxBytesToMergeAtMaxSpaceInPool?: number | undefined;
                    minBytesForWidePart?: number | undefined;
                    minRowsForWidePart?: number | undefined;
                    ttlOnlyDropParts?: boolean | undefined;
                    allowRemoteFsZeroCopyReplication?: boolean | undefined;
                    mergeWithTtlTimeout?: number | undefined;
                    mergeWithRecompressionTtlTimeout?: number | undefined;
                    maxPartsInTotal?: number | undefined;
                    maxNumberOfMergesWithTtlInPool?: number | undefined;
                    cleanupDelayPeriod?: number | undefined;
                    numberOfFreeEntriesInPoolToExecuteMutation?: number | undefined;
                    maxAvgPartSizeForTooManyParts?: number | undefined;
                    minAgeToForceMergeSeconds?: number | undefined;
                    minAgeToForceMergeOnPartitionOnly?: boolean | undefined;
                    mergeSelectingSleepMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["mergeTree"], "$type" | "replicatedDeduplicationWindow" | "replicatedDeduplicationWindowSeconds" | "partsToDelayInsert" | "partsToThrowInsert" | "inactivePartsToDelayInsert" | "inactivePartsToThrowInsert" | "maxReplicatedMergesInQueue" | "numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge" | "maxBytesToMergeAtMinSpaceInPool" | "maxBytesToMergeAtMaxSpaceInPool" | "minBytesForWidePart" | "minRowsForWidePart" | "ttlOnlyDropParts" | "allowRemoteFsZeroCopyReplication" | "mergeWithTtlTimeout" | "mergeWithRecompressionTtlTimeout" | "maxPartsInTotal" | "maxNumberOfMergesWithTtlInPool" | "cleanupDelayPeriod" | "numberOfFreeEntriesInPoolToExecuteMutation" | "maxAvgPartSizeForTooManyParts" | "minAgeToForceMergeSeconds" | "minAgeToForceMergeOnPartitionOnly" | "mergeSelectingSleepMs">, never>) | undefined;
                dictionaries?: ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    mysqlSource?: ({
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] & ({
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"][number], "$type" | "port" | "host" | "user" | "password" | "priority">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"]["replicas"], "$type" | keyof {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[]>, never>) | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mysqlSource"], "$type" | "port" | "user" | "password" | "table" | "db" | "replicas" | "where" | "invalidateQuery">, never>) | undefined;
                    clickhouseSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["clickhouseSource"], "$type" | "port" | "host" | "user" | "password" | "table" | "db" | "where">, never>) | undefined;
                    structure?: ({
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } & {
                        id?: ({
                            name?: string | undefined;
                        } & {
                            name?: string | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["id"], "$type" | "name">, never>) | undefined;
                        key?: ({
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } & {
                            attributes?: ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] & ({
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"]["attributes"], "$type" | keyof {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[]>, never>) | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["key"], "$type" | "attributes">, never>) | undefined;
                        attributes?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] & ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"][number], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["attributes"], "$type" | keyof {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[]>, never>) | undefined;
                        rangeMin?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMin"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                        rangeMax?: ({
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"]["rangeMax"], "$type" | "type" | "name" | "expression" | "nullValue" | "hierarchical" | "injective">, never>) | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["structure"], "$type" | "id" | "key" | "attributes" | "rangeMin" | "rangeMax">, never>) | undefined;
                    layout?: ({
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["layout"], "$type" | "type" | "sizeInCells">, never>) | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: ({
                        min?: number | undefined;
                        max?: number | undefined;
                    } & {
                        min?: number | undefined;
                        max?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["lifetimeRange"], "$type" | "min" | "max">, never>) | undefined;
                    httpSource?: ({
                        format?: string | undefined;
                        url?: string | undefined;
                    } & {
                        format?: string | undefined;
                        url?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["httpSource"], "$type" | "format" | "url">, never>) | undefined;
                    mongodbSource?: ({
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["mongodbSource"], "$type" | "port" | "host" | "options" | "user" | "password" | "db" | "collection">, never>) | undefined;
                    postgresqlSource?: ({
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & {
                        port?: number | undefined;
                        hosts?: (string[] & string[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"]["hosts"], "$type" | keyof string[]>, never>) | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number]["postgresqlSource"], "$type" | "port" | "hosts" | "user" | "password" | "table" | "db" | "invalidateQuery" | "sslMode">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"][number], "$type" | "name" | "mysqlSource" | "clickhouseSource" | "structure" | "layout" | "fixedLifetime" | "lifetimeRange" | "httpSource" | "mongodbSource" | "postgresqlSource">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["dictionaries"], "$type" | keyof {
                    name?: string | undefined;
                    mysqlSource?: {
                        port?: number | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        replicas?: {
                            port?: number | undefined;
                            host?: string | undefined;
                            user?: string | undefined;
                            password?: string | undefined;
                            priority?: number | undefined;
                        }[] | undefined;
                        where?: string | undefined;
                        invalidateQuery?: string | undefined;
                    } | undefined;
                    clickhouseSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        where?: string | undefined;
                    } | undefined;
                    structure?: {
                        id?: {
                            name?: string | undefined;
                        } | undefined;
                        key?: {
                            attributes?: {
                                type?: string | undefined;
                                name?: string | undefined;
                                expression?: string | undefined;
                                nullValue?: string | undefined;
                                hierarchical?: boolean | undefined;
                                injective?: boolean | undefined;
                            }[] | undefined;
                        } | undefined;
                        attributes?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        }[] | undefined;
                        rangeMin?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                        rangeMax?: {
                            type?: string | undefined;
                            name?: string | undefined;
                            expression?: string | undefined;
                            nullValue?: string | undefined;
                            hierarchical?: boolean | undefined;
                            injective?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    layout?: {
                        type?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_Layout_Type | undefined;
                        sizeInCells?: number | undefined;
                    } | undefined;
                    fixedLifetime?: number | undefined;
                    lifetimeRange?: {
                        min?: number | undefined;
                        max?: number | undefined;
                    } | undefined;
                    httpSource?: {
                        format?: string | undefined;
                        url?: string | undefined;
                    } | undefined;
                    mongodbSource?: {
                        port?: number | undefined;
                        host?: string | undefined;
                        options?: string | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        db?: string | undefined;
                        collection?: string | undefined;
                    } | undefined;
                    postgresqlSource?: {
                        port?: number | undefined;
                        hosts?: string[] | undefined;
                        user?: string | undefined;
                        password?: string | undefined;
                        table?: string | undefined;
                        db?: string | undefined;
                        invalidateQuery?: string | undefined;
                        sslMode?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_ExternalDictionary_PostgresqlSource_SslMode | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                graphiteRollup?: ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[] & ({
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                } & {
                    name?: string | undefined;
                    patterns?: ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] & ({
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    } & {
                        function?: string | undefined;
                        retention?: ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] & ({
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & {
                            age?: number | undefined;
                            precision?: number | undefined;
                        } & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"][number], "$type" | "age" | "precision">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number]["retention"], "$type" | keyof {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[]>, never>) | undefined;
                        regexp?: string | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"][number], "function" | "$type" | "retention" | "regexp">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number]["patterns"], "$type" | keyof {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"][number], "$type" | "name" | "patterns">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["graphiteRollup"], "$type" | keyof {
                    name?: string | undefined;
                    patterns?: {
                        function?: string | undefined;
                        retention?: {
                            age?: number | undefined;
                            precision?: number | undefined;
                        }[] | undefined;
                        regexp?: string | undefined;
                    }[] | undefined;
                }[]>, never>) | undefined;
                kafka?: ({
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & {
                    securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                    saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                    saslUsername?: string | undefined;
                    saslPassword?: string | undefined;
                    enableSslCertificateVerification?: boolean | undefined;
                    maxPollIntervalMs?: number | undefined;
                    sessionTimeoutMs?: number | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["kafka"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                kafkaTopics?: ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[] & ({
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                } & {
                    name?: string | undefined;
                    settings?: ({
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } & Record<Exclude<keyof I["config"]["defaultConfig"]["kafkaTopics"][number]["settings"], "$type" | "securityProtocol" | "saslMechanism" | "saslUsername" | "saslPassword" | "enableSslCertificateVerification" | "maxPollIntervalMs" | "sessionTimeoutMs">, never>) | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["kafkaTopics"][number], "$type" | "name" | "settings">, never>)[] & Record<Exclude<keyof I["config"]["defaultConfig"]["kafkaTopics"], "$type" | keyof {
                    name?: string | undefined;
                    settings?: {
                        securityProtocol?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SecurityProtocol | undefined;
                        saslMechanism?: import("../../../../../yandex/cloud/mdb/clickhouse/v1/config/clickhouse").ClickhouseConfig_Kafka_SaslMechanism | undefined;
                        saslUsername?: string | undefined;
                        saslPassword?: string | undefined;
                        enableSslCertificateVerification?: boolean | undefined;
                        maxPollIntervalMs?: number | undefined;
                        sessionTimeoutMs?: number | undefined;
                    } | undefined;
                }[]>, never>) | undefined;
                rabbitmq?: ({
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & {
                    password?: string | undefined;
                    username?: string | undefined;
                    vhost?: string | undefined;
                } & Record<Exclude<keyof I["config"]["defaultConfig"]["rabbitmq"], "$type" | "password" | "username" | "vhost">, never>) | undefined;
                maxConnections?: number | undefined;
                maxConcurrentQueries?: number | undefined;
                keepAliveTimeout?: number | undefined;
                uncompressedCacheSize?: number | undefined;
                markCacheSize?: number | undefined;
                maxTableSizeToDrop?: number | undefined;
                maxPartitionSizeToDrop?: number | undefined;
                builtinDictionariesReloadInterval?: number | undefined;
                queryLogRetentionSize?: number | undefined;
                queryLogRetentionTime?: number | undefined;
                queryThreadLogEnabled?: boolean | undefined;
                queryThreadLogRetentionSize?: number | undefined;
                queryThreadLogRetentionTime?: number | undefined;
                partLogRetentionSize?: number | undefined;
                partLogRetentionTime?: number | undefined;
                metricLogEnabled?: boolean | undefined;
                metricLogRetentionSize?: number | undefined;
                metricLogRetentionTime?: number | undefined;
                traceLogEnabled?: boolean | undefined;
                traceLogRetentionSize?: number | undefined;
                traceLogRetentionTime?: number | undefined;
                textLogEnabled?: boolean | undefined;
                textLogRetentionSize?: number | undefined;
                textLogRetentionTime?: number | undefined;
                opentelemetrySpanLogEnabled?: boolean | undefined;
                backgroundPoolSize?: number | undefined;
                backgroundSchedulePoolSize?: number | undefined;
                backgroundFetchesPoolSize?: number | undefined;
                backgroundMovePoolSize?: number | undefined;
                backgroundDistributedSchedulePoolSize?: number | undefined;
                backgroundBufferFlushSchedulePoolSize?: number | undefined;
                backgroundMessageBrokerSchedulePoolSize?: number | undefined;
                defaultDatabase?: string | undefined;
                totalMemoryProfilerStep?: number | undefined;
                totalMemoryTrackerSampleProbability?: number | undefined;
                backgroundCommonPoolSize?: number | undefined;
                backgroundMergesMutationsConcurrencyRatio?: number | undefined;
                queryViewsLogEnabled?: boolean | undefined;
                queryViewsLogRetentionSize?: number | undefined;
                queryViewsLogRetentionTime?: number | undefined;
                asynchronousMetricLogEnabled?: boolean | undefined;
                asynchronousMetricLogRetentionSize?: number | undefined;
                asynchronousMetricLogRetentionTime?: number | undefined;
                opentelemetrySpanLogRetentionSize?: number | undefined;
                opentelemetrySpanLogRetentionTime?: number | undefined;
                sessionLogEnabled?: boolean | undefined;
                sessionLogRetentionSize?: number | undefined;
                sessionLogRetentionTime?: number | undefined;
                zookeeperLogEnabled?: boolean | undefined;
                zookeeperLogRetentionSize?: number | undefined;
                zookeeperLogRetentionTime?: number | undefined;
                asynchronousInsertLogEnabled?: boolean | undefined;
                asynchronousInsertLogRetentionSize?: number | undefined;
                asynchronousInsertLogRetentionTime?: number | undefined;
                geobaseEnabled?: boolean | undefined;
            } & Record<Exclude<keyof I["config"]["defaultConfig"], "$type" | "compression" | "timezone" | "logLevel" | "geobaseUri" | "textLogLevel" | "mergeTree" | "dictionaries" | "graphiteRollup" | "kafka" | "kafkaTopics" | "rabbitmq" | "maxConnections" | "maxConcurrentQueries" | "keepAliveTimeout" | "uncompressedCacheSize" | "markCacheSize" | "maxTableSizeToDrop" | "maxPartitionSizeToDrop" | "builtinDictionariesReloadInterval" | "queryLogRetentionSize" | "queryLogRetentionTime" | "queryThreadLogEnabled" | "queryThreadLogRetentionSize" | "queryThreadLogRetentionTime" | "partLogRetentionSize" | "partLogRetentionTime" | "metricLogEnabled" | "metricLogRetentionSize" | "metricLogRetentionTime" | "traceLogEnabled" | "traceLogRetentionSize" | "traceLogRetentionTime" | "textLogEnabled" | "textLogRetentionSize" | "textLogRetentionTime" | "opentelemetrySpanLogEnabled" | "backgroundPoolSize" | "backgroundSchedulePoolSize" | "backgroundFetchesPoolSize" | "backgroundMovePoolSize" | "backgroundDistributedSchedulePoolSize" | "backgroundBufferFlushSchedulePoolSize" | "backgroundMessageBrokerSchedulePoolSize" | "defaultDatabase" | "totalMemoryProfilerStep" | "totalMemoryTrackerSampleProbability" | "backgroundCommonPoolSize" | "backgroundMergesMutationsConcurrencyRatio" | "queryViewsLogEnabled" | "queryViewsLogRetentionSize" | "queryViewsLogRetentionTime" | "asynchronousMetricLogEnabled" | "asynchronousMetricLogRetentionSize" | "asynchronousMetricLogRetentionTime" | "opentelemetrySpanLogRetentionSize" | "opentelemetrySpanLogRetentionTime" | "sessionLogEnabled" | "sessionLogRetentionSize" | "sessionLogRetentionTime" | "zookeeperLogEnabled" | "zookeeperLogRetentionSize" | "zookeeperLogRetentionTime" | "asynchronousInsertLogEnabled" | "asynchronousInsertLogRetentionSize" | "asynchronousInsertLogRetentionTime" | "geobaseEnabled">, never>) | undefined;
        } & Record<Exclude<keyof I["config"], "$type" | "effectiveConfig" | "userConfig" | "defaultConfig">, never>) | undefined;
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        weight?: number | undefined;
    } & Record<Exclude<keyof I, "$type" | "config" | "resources" | "weight">, never>>(object: I): ShardConfig_Clickhouse;
};
export declare const Host: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Host";
    encode(message: Host, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Host;
    fromJSON(object: any): Host;
    toJSON(message: Host): unknown;
    fromPartial<I extends {
        type?: Host_Type | undefined;
        name?: string | undefined;
        subnetId?: string | undefined;
        zoneId?: string | undefined;
        resources?: {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } | undefined;
        services?: {
            type?: Service_Type | undefined;
            health?: Service_Health | undefined;
        }[] | undefined;
        health?: Host_Health | undefined;
        clusterId?: string | undefined;
        assignPublicIp?: boolean | undefined;
        shardName?: string | undefined;
    } & {
        type?: Host_Type | undefined;
        name?: string | undefined;
        subnetId?: string | undefined;
        zoneId?: string | undefined;
        resources?: ({
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & {
            diskTypeId?: string | undefined;
            diskSize?: number | undefined;
            resourcePresetId?: string | undefined;
        } & Record<Exclude<keyof I["resources"], "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>) | undefined;
        services?: ({
            type?: Service_Type | undefined;
            health?: Service_Health | undefined;
        }[] & ({
            type?: Service_Type | undefined;
            health?: Service_Health | undefined;
        } & {
            type?: Service_Type | undefined;
            health?: Service_Health | undefined;
        } & Record<Exclude<keyof I["services"][number], "$type" | "type" | "health">, never>)[] & Record<Exclude<keyof I["services"], "$type" | keyof {
            type?: Service_Type | undefined;
            health?: Service_Health | undefined;
        }[]>, never>) | undefined;
        health?: Host_Health | undefined;
        clusterId?: string | undefined;
        assignPublicIp?: boolean | undefined;
        shardName?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "type" | "name" | "subnetId" | "zoneId" | "resources" | "services" | "health" | "clusterId" | "assignPublicIp" | "shardName">, never>>(object: I): Host;
};
export declare const Service: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Service";
    encode(message: Service, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Service;
    fromJSON(object: any): Service;
    toJSON(message: Service): unknown;
    fromPartial<I extends {
        type?: Service_Type | undefined;
        health?: Service_Health | undefined;
    } & {
        type?: Service_Type | undefined;
        health?: Service_Health | undefined;
    } & Record<Exclude<keyof I, "$type" | "type" | "health">, never>>(object: I): Service;
};
export declare const Resources: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Resources";
    encode(message: Resources, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Resources;
    fromJSON(object: any): Resources;
    toJSON(message: Resources): unknown;
    fromPartial<I extends {
        diskTypeId?: string | undefined;
        diskSize?: number | undefined;
        resourcePresetId?: string | undefined;
    } & {
        diskTypeId?: string | undefined;
        diskSize?: number | undefined;
        resourcePresetId?: string | undefined;
    } & Record<Exclude<keyof I, "$type" | "diskTypeId" | "diskSize" | "resourcePresetId">, never>>(object: I): Resources;
};
export declare const Access: {
    $type: "yandex.cloud.mdb.clickhouse.v1.Access";
    encode(message: Access, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Access;
    fromJSON(object: any): Access;
    toJSON(message: Access): unknown;
    fromPartial<I extends {
        dataLens?: boolean | undefined;
        webSql?: boolean | undefined;
        metrika?: boolean | undefined;
        serverless?: boolean | undefined;
        dataTransfer?: boolean | undefined;
        yandexQuery?: boolean | undefined;
    } & {
        dataLens?: boolean | undefined;
        webSql?: boolean | undefined;
        metrika?: boolean | undefined;
        serverless?: boolean | undefined;
        dataTransfer?: boolean | undefined;
        yandexQuery?: boolean | undefined;
    } & Record<Exclude<keyof I, "$type" | "dataLens" | "webSql" | "metrika" | "serverless" | "dataTransfer" | "yandexQuery">, never>>(object: I): Access;
};
export declare const CloudStorage: {
    $type: "yandex.cloud.mdb.clickhouse.v1.CloudStorage";
    encode(message: CloudStorage, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): CloudStorage;
    fromJSON(object: any): CloudStorage;
    toJSON(message: CloudStorage): unknown;
    fromPartial<I extends {
        enabled?: boolean | undefined;
        moveFactor?: number | undefined;
        dataCacheEnabled?: boolean | undefined;
        dataCacheMaxSize?: number | undefined;
        preferNotToMerge?: boolean | undefined;
    } & {
        enabled?: boolean | undefined;
        moveFactor?: number | undefined;
        dataCacheEnabled?: boolean | undefined;
        dataCacheMaxSize?: number | undefined;
        preferNotToMerge?: boolean | undefined;
    } & Record<Exclude<keyof I, "$type" | "enabled" | "moveFactor" | "dataCacheEnabled" | "dataCacheMaxSize" | "preferNotToMerge">, never>>(object: I): CloudStorage;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in Exclude<keyof T, "$type">]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P> | "$type">, never>;
export {};
